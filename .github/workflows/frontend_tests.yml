name: Frontend Karma tests
on:
  push:
    branches:
      - develop
      - release-*
  pull_request:
    branches:
      - develop
      - release-*

jobs:
  frontend:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'
      - uses: ./.github/actions/merge
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: /home/runner/work/oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: ./.github/actions/install-oppia-dependencies
      - name: Suppress ENOSPC error from chokidar file watcher. See https://stackoverflow.com/a/32600959.
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Run frontend tests-1
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-2
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-3
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-4
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-5
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-6
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-7
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-8
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-9
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-10
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-11
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-12
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-13
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-14
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-15
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-16
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-17
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-18
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-19
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
      - name: Run frontend tests-20
        if: ${{ always() }}
        run: PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests --run_minified_tests --skip_install
