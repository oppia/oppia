name: End-to-End tests
on:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - develop
      - release-*
  pull_request:
    branches:
      - develop
      - release-*
jobs:
  build:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    steps:
      - name: Check if artifact exists
        uses: actions/github-script@v5
        with:
          script: |
            const artifact = await artifacts.listArtifactsForRepo({
              per_page: 1,
              artifact_name: 'build_files'
            });
            console.log(JSON.stringify(artifact));
          id: check-artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download and unzip artifact
        if: steps.check-artifact.outputs.result != '[]'
        uses: actions/download-artifact@v2
        with:
          name: build_files
        run: |
          unzip build_files.zip -d oppia/
      - name: Build and install
        if: steps.check-artifact.outputs.result == '[]'
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-python@v3
            with:
              python-version: '3.8.15'
              architecture: 'x64'
              cache: 'pip'
              cache-dependency-path: |
                requirements.in
                requirements.txt
                requirements_dev.in
                requirements_dev.txt
          - uses: ./.github/actions/merge
          - name: Cache node modules and third_party/static
            uses: actions/cache@v3
            env:
              cache-name: cache-node-modules
            with:
              path: |
                /home/runner/work/oppia/yarn_cache
                /home/runner/work/oppia/oppia/third_party/static
              key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock', 'dependencies.json') }}
              restore-keys: |
                ${{ runner.os }}-build-${{ env.cache-name }}-
                ${{ runner.os }}-build-
                ${{ runner.os }}-
          - uses: ./.github/actions/install-oppia-dependencies
          - name: Install chrome
            run: python -m scripts.install_chrome_for_ci
          - name: Install ffmpeg
            run: sudo apt install ffmpeg
          - name: Build Webpack
            run: python -m scripts.build --prod_env
          - name: Zip build files
            # We avoid using ../ or absolute paths because unzip treats these as
            # security issues and will refuse to follow them.
            run: |
              zip -rqy build_files.zip oppia/third_party oppia_tools oppia/build oppia/webpack_bundles oppia/proto_files oppia/app.yaml oppia/assets/hashes.json oppia/proto_files oppia/extensions/classifiers/proto/* oppia/backend_prod_files oppia/dist
            working-directory: /home/runner/work/oppia
          - name: Upload build files artifact
            uses: actions/upload-artifact@v3
            with:
              name: build_files
              path: /home/runner/work/oppia/build_files.zip
              retention-days: 1
name: E2E Test
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  e2e_test:
    runs-on: ubuntu-22.04
    needs: build
    strategy:
      matrix:
        suite:
          - accessibility
          - additionalEditorFeatures
          - additionalEditorFeaturesModals
          - additionalPlayerFeatures
          - adminPage
          - blogDashboard
          - blog
          - checkpointFeatures
          - classroomPage
          - classroomPageFileUploadFeatures
          - collections
          - contributorDashboard
          - coreEditorAndPlayerFeatures
          - creatorDashboard
          - embedding
          - explorationFeedbackTab
          - explorationImprovementsTab
          - explorationHistoryTab
          - explorationStatisticsTab
          - explorationTranslationTab
          - extensions
          - featureGating
          - fileUploadExtensions
          - fileUploadFeatures
          - learner
          - learnerDashboard
          - library
          - navigation
          - playVoiceovers
          - preferences
          - profileFeatures
          - profileMenu
          - publication
          - skillEditor
          - subscriptions
          - topicsAndSkillsDashboard
          - topicAndStoryEditor
          - topicAndStoryEditorFileUploadFeatures
          - topicAndStoryViewer
          - users
          - wipeout
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_dev.txt
      - name: Merge code
        run: python -m scripts.merge_branches
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ hashFiles('oppia/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Download build files artifact
        uses: actions/download-artifact@v2
        with:
          name: build_files
          path: oppia/
      - name: Unzip build files
        run: |
          cd oppia/
          unzip build_files.zip
          rm build_files.zip
          echo "Files in ./:"
          ls -la .
          echo "Files in oppia_tools:"
          ls -la oppia_tools
          echo "Files in oppia:"
          ls -la oppia
          echo "Files in build:"
          ls -la oppia/build
          echo "Files in third_party:"
          ls -la oppia/third_party
      - name: Install Chrome
        run: python -m scripts.install_chrome_for_ci
      - name: Install FFmpeg
        run: sudo apt-get install ffmpeg
      - name: Run E2E tests
        run: |
          cd oppia/
          xvfb-run -a --server-args="-screen 0, 1285x1000x24" python -m scripts.run_e2e_tests --skip-install --skip-build --suite=${{ matrix.suite }} --prod_env
        env:
          VIDEO_RECORDING_IS_ENABLED: 0
      - name: Upload artifacts on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: webdriverio-video
          path: oppia/webdriverio-video
        uses: actions/upload-artifact@v2
        with:
          name: webdriverio-screenshots
          path: oppia/webdriverio-screenshots
        uses: actions/upload-artifact@v2
        with:
          name: webpack-bundles
          path: oppia/build
      - name: Send notification on failure
        if: ${{ failure() && github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "An E2E test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
