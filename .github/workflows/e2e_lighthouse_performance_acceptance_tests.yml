name: End-to-End, Lighthouse CI performance and Acceptance tests
on:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - develop
      - release-*
  pull_request:
    branches:
      - develop
      - release-*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  e2e_test:
    runs-on:  ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        suite:
          - accessibility
          - additionalEditorFeatures
          - additionalEditorFeaturesModals
          - additionalPlayerFeatures
          - adminPage
          - blogDashboard
          - blog
          - checkpointFeatures
          - classroomPage
          - classroomPageFileUploadFeatures
          - collections
          - contributorDashboard
          - contributorAdminDashboard
          - coreEditorAndPlayerFeatures
          - creatorDashboard
          - embedding
          - explorationFeedbackTab
          - explorationImprovementsTab
          - explorationHistoryTab
          - explorationStatisticsTab
          - explorationTranslationTab
          - extensions
          - featureGating
          - feedbackUpdates
          - fileUploadExtensions
          - fileUploadFeatures
          - learner
          - learnerDashboard
          - library
          - navigation
          - playVoiceovers
          - preferences
          - profileFeatures
          - profileMenu
          - publication
          - skillEditor
          - subscriptions
          - topicsAndSkillsDashboard
          - topicAndStoryEditor
          - topicAndStoryEditorFileUploadFeatures
          - topicAndStoryViewer
          - users
          - wipeout
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - uses: ./.github/actions/merge
      - uses: ./.github/actions/install-chrome
      - name: Install ffmpeg
        run: sudo apt install ffmpeg
      - name: Initializing Containers
        run: |
          sudo make build
          # This is required as E2E tests are run on the host machine and not in the docker container.
          sudo docker compose up angular-build -d
          sudo docker cp oppia-angular-build:/app/oppia/node_modules .
      - name: Run E2E Test ${{ matrix.suite }}
        run: sudo xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.e2e suite=${{ matrix.suite }} VIDEO_RECORDING_IS_ENABLED=${{ env.VIDEO_RECORDING_IS_ENABLED }}
        env:
          VIDEO_RECORDING_IS_ENABLED: 1
      - name: Uploading webdriverio-video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-video
          path: /home/runner/work/oppia/webdriverio-video
      - name: Uploading webdriverio screenshots as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-screenshots
          path: /home/runner/work/oppia/webdriverio-screenshots
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "An E2E test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  lighthouse:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        shard: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - uses: ./.github/actions/merge
      - name: Install chrome
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        uses: ./.github/actions/install-chrome
      - name: Initializing Containers
        run: |
          sudo make build
          sudo docker compose up angular-build -d
          # This is required as lighthouse tests are run on the host machine and not in the docker container.
          sudo docker cp oppia-angular-build:/app/oppia/node_modules .
      - name: Run Lighthouse performance checks shard
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        run: make run_tests.lighthouse_performance shard=${{ matrix.shard }} RECORD_SCREEN="true"
      - name: Uploading puppeteer video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with: 
          name: lhci-puppeteer-video
          path: /home/runner/work/oppia/lhci-puppeteer-video/video.mp4
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "A Lighthouse test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  acceptance_test:
      runs-on:  ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-22.04]
          suite:
            - blog-admin-tests/assign-roles-to-users-and-change-tag-properties.spec.js
            - blog-editor-tests/check-blog-editor-unable-to-publish-duplicate-blog-post.spec.js
            - practice-question-admin-tests/add-and-remove-contribution-rights.spec.js
            - translation-admin-tests/add-translation-rights.spec.js
            - translation-admin-tests/remove-translation-rights.spec.js
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v4
          with:
            python-version: '3.8.15'
            architecture: 'x64'
        - uses: ./.github/actions/merge
        - uses: ./.github/actions/install-chrome
        - name: Initializing Containers
          run: |
            sudo make build
            sudo docker compose up angular-build -d
            # This is required as lighthouse tests are run on the host machine and not in the docker container.
            sudo docker cp oppia-angular-build:/app/oppia/node_modules .
        - name: Run Acceptance Test ${{ matrix.suite }}
          run: xvfb-run -a --server-args="-screen 0, 1285x1000x24" make run_tests.acceptance suite=${{ matrix.suite }}
        - name: Report failure if failed on oppia/oppia develop branch
          if: ${{
            failure() &&
            github.event_name == 'push' &&
            github.repository == 'oppia/oppia' &&
            github.ref == 'refs/heads/develop'
            }}
          uses: ./.github/actions/send-webhook-notification
          with:
            message: "An acceptance test failed on the upstream develop branch."
            webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
