version: 2.1

workflows:
  circleci_tests:
    # The following jobs run in the following stages:
    # - Setup runs first.
    # - After setup passes, lint and frontend tests run.
    #     - If frontend tests fail, stop and do not run the next step, but lint continues.
    # - After frontend tests passes, backend and typescript tests run.
    #     - If typescript tests fail, stop and do not run the next step, but backend continues.
    # - After typescript tests passes, the flagship e2e tests (navigation and file upload) run. We run
    #   these tests as sanity checks before running the entire test suite. Note that the navigation e2e
    #   test also compiles all the prod files needed for other prod e2e tests.
    #     - If either flagship e2e tests fail, then the rest of the e2e tests in the the corresponding
    #       suite will not run.
    # - After file upload e2e test passes, all other non-prod e2e tests run in parallel.
    # - After navigation e2e test passes, all other prod e2e tests run in parallel.
    # For an illustration of the stages, see https://github.com/oppia/oppia/wiki/images/circleCIWorkflow.png.

    jobs:
      - setup
      - lint_tests:
          requires:
            - setup
      - frontend_tests:
          requires:
            - setup
      - typescript_tests:
          requires:
            - frontend_tests
      - backend_tests:
          requires:
            - frontend_tests
      - e2e_file_upload_features:
          requires:
            - typescript_tests
      - e2e_navigation:
          requires:
            - typescript_tests
      - e2e_classroom_page:
          requires:
            - e2e_file_upload_features
      - e2e_topic_and_story_editor:
          requires:
            - e2e_file_upload_features
      - e2e_accessibility:
          requires:
            - e2e_navigation
      - e2e_admin:
          requires:
            - e2e_navigation
      - e2e_embedding:
          requires:
            - e2e_navigation
      - e2e_library:
          requires:
            - e2e_navigation

var_for_docker_image: &docker_image circleci/python:2.7.17-browsers

anchor_for_job_defaults: &job_defaults
  working_directory: /home/circleci/oppia
  docker:
    - image: *docker_image

commands:
  merge_target_branch:
    description: "Merge to target branch"
    steps:
      - run:
          name: Merge to target branch
          command: |
            if [[ -n ${CIRCLE_PULL_REQUEST} ]]
            then

              git config --global user.email $( git log --format='%ae' $CIRCLE_SHA1^! )
              git config --global user.name $( git log --format='%an' $CIRCLE_SHA1^! )

              regexp="[[:digit:]]\+$"
              PR_NUMBER=`echo $CIRCLE_PULL_REQUEST | grep -o $regexp`

              curl -L "https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64" -o jq
              chmod +x jq

              url="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER?access_token=$GITHUB_TOKEN"

              target_branch=$(
                curl "$url" | ./jq '.base.ref' | tr -d '"'
              )

              rm jq
              if [[ "$target_branch" == null ]]
              then
                git pull git@github.com:oppia/oppia.git develop --no-edit
              else
                git pull origin $target_branch --no-edit
              fi
            fi

jobs:
  setup:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - run:
          name: Install dependencies
          command: python -m scripts.install_third_party_libs
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - oppia/node_modules/
            - oppia/third_party/
            - oppia_tools/

  lint_tests:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run lint tests
          # All the python scripts should behave as modules. Files like the
          # pre_commit_linter and third_party_size_check need to import other
          # Python files and that is only possible if we treat it as a module.
          command: |
            python -m scripts.third_party_size_check
            python -m scripts.linters.pre_commit_linter --path=. --verbose

  typescript_tests:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run typescript tests
          command: |
            python -m scripts.typescript_checks

  frontend_tests:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run frontend tests
          command: |
            python -m scripts.run_frontend_tests --run_minified_tests --skip_install --check_coverage
      - run:
          name: Generate frontend coverage report
          command: |
            sudo pip install codecov
            codecov --file ../karma_coverage_reports/lcov.info -F frontend
          when: on_success

  backend_tests:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run backend tests
          command: |
            python -m scripts.run_backend_tests --generate_coverage_report --exclude_load_tests

  # Production environment e2e tests
  # The following e2e tests are run in the production environment. Tests that require uploading files
  # should be run in the non-prod environment.
  e2e_navigation:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e navigation test
          command: |
            python -m scripts.run_e2e_tests --prod_env --deparallelize_terser --skip-install --suite="navigation"
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - oppia/app.yaml
            - oppia/assets/constants.ts
            - oppia/assets/hashes.json
            - oppia/backend_prod_files/
            - oppia/build/
            - oppia/third_party/generated/

  e2e_admin:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e admin page test
          command: |
            python -m scripts.run_e2e_tests --skip-install --skip-build --suite="adminPage" --prod_env

  e2e_accessibility:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e accessibility test
          command: |
            python -m scripts.run_e2e_tests --skip-install --skip-build --suite="accessibility" --prod_env

  e2e_embedding:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e embedding test
          command: |
            python -m scripts.run_e2e_tests --skip-install --skip-build --suite="embedding" --prod_env

  e2e_library:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e library test
          command: |
            python -m scripts.run_e2e_tests --skip-install --skip-build --suite="library" --prod_env

  # Non-prod e2e Tests
  # The following tests must be run in a non-production environment because they are uploading files.
  # All other e2e tests should be run in prod mode.
  e2e_file_upload_features:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e file upload features test
          command: |
            python -m scripts.run_e2e_tests --skip-install --suite="fileUploadFeatures"
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - oppia/assets/hashes.json
            - oppia/third_party/generated/
            - oppia/webpack_bundles

  e2e_classroom_page:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e classroom page test
          command: |
            python -m scripts.run_e2e_tests --skip-install --skip-build --suite="classroomPageFileUploadFeatures"

  e2e_topic_and_story_editor:
    <<: *job_defaults
    steps:
      - checkout
      - merge_target_branch
      - attach_workspace:
          at: /home/circleci/
      - run:
          name: Run e2e topic and story editor test
          command: |
            python -m scripts.run_e2e_tests --skip-install --skip-build --suite="topicAndStoryEditorFileUploadFeatures"

notify:
  webhooks:
    # A list of hook hashes, containing the url field
    # gitter hook
    - url: https://webhooks.gitter.im/e/71ac71505d1d45161035
