language: python

python:
- 2.7

branches:
  only:
  - master
  - develop

env:
- RUN_BACKEND_TESTS=false RUN_FRONTEND_TESTS=false RUN_LINT=true REPORT_BACKEND_COVERAGE=false
- RUN_BACKEND_TESTS=false RUN_FRONTEND_TESTS=true RUN_LINT=false REPORT_BACKEND_COVERAGE=false
- RUN_BACKEND_TESTS=true RUN_FRONTEND_TESTS=false RUN_LINT=false REPORT_BACKEND_COVERAGE=false
- RUN_BACKEND_TESTS=true RUN_FRONTEND_TESTS=false RUN_LINT=false REPORT_BACKEND_COVERAGE=true


matrix:
  allow_failures:
  # The backend tests, with coverage, take too long to run, so we make this
  # optional.
  - env: RUN_BACKEND_TESTS=true RUN_FRONTEND_TESTS=false RUN_LINT=false REPORT_BACKEND_COVERAGE=true
  fast_finish: true

notifications:
  email:
    recipients:
    - sean@seanlip.org
    - henning.benmax@gmail.com
    - wxy.xinyu@gmail.com
    on_success: change
    on_failure: change
  irc:
    channels:
      - "chat.freenode.net#oppia"
    on_success: never
    on_failure: always
  webhooks:
    urls:
      # This URL can be obtained by going to the Gitter chat room
      # and clicking Settings > Integrations.
      - https://webhooks.gitter.im/e/f8f782497ec1ffcea2e7
    on_success: always
    on_failure: always

before_install:
- pip install codecov
- export CHROME_BIN=chromium-browser
- export DISPLAY=:99.0
- bash -e /etc/init.d/xvfb start

install:
- set -e
- pushd $TRAVIS_BUILD_DIR
- source scripts/setup.sh || exit 1
- source scripts/setup_gae.sh || exit 1
- mkdir -p $GOOGLE_APP_ENGINE_HOME
- curl --silent https://storage.googleapis.com/appengine-sdks/deprecated/1919/google_appengine_1.9.19.zip
  -o gae-download.zip
- unzip -qq gae-download.zip -d $TOOLS_DIR/google_appengine_1.9.19/
- rm gae-download.zip

script:
- if [ $RUN_BACKEND_TESTS == 'true' ] && [ $REPORT_BACKEND_COVERAGE == 'true' ]; then bash scripts/run_backend_tests.sh --generate_coverage_report; fi
- if [ $RUN_BACKEND_TESTS == 'true' ] && [ $REPORT_BACKEND_COVERAGE == 'false' ]; then bash scripts/run_backend_tests.sh; fi
- if [ $RUN_LINT == 'true' ]; then bash scripts/install_third_party.sh; python scripts/pre_commit_linter.py --path=.; fi
# Travis aborts test run if nothing is printed back to STDOUT for some time.
# -x is used to avoid that.
- if [ $RUN_FRONTEND_TESTS == 'true' ]; then bash -x scripts/run_frontend_tests.sh --run-minified-tests=true; fi

after_success:
- if [ $RUN_BACKEND_TESTS == 'true' ] && [ $REPORT_BACKEND_COVERAGE == 'true' ]; then codecov; fi
- if [ $RUN_FRONTEND_TESTS == 'true' ]; then codecov --file ../karma_coverage_reports/coverage-final.json; fi
