language: python

python:
- 2.7

addons:
  firefox: latest
  sauce_connect:
    username:
      secure: J2nmHZz/cF0N5QdhbT7VCgXTJWXHlLnr4Eo1DtaVOAs5IUT/FjzZE/ztBj5K9cTjDVu31fxASibpTL70h3QqrWNmPpf0+3Ea4TY4NI3KCRCNvNgCy6pjgZr6cK4gSHuqdApRLp0n1RiXlJn5mcHTpQR0vIHyJPfr/+SSxJ9ygNY6OgzrvG+qMdIrpjcVJ12mMLnT7o5OCyraY5Gazg92mVxRBOKKVJBG52vvtpfulPuSpv6Ptwi+QV9JOaRBCvWi2SQqWuayKjDN75cniSH9UiANlRo+Ng2TEm+HeK+u8kEPTR/Mt8JcGz6LIQoYzsT4WpTtdAvvwexTj7i48mwoWqJ7RbzljSiRw31mjL7NL5ir5PzK/gehXqOD9ClYp1FLrJOKvVLgIL+HufnR08qLdWk22qJN9o/GRZkXROAG5MFXXPGsuyCyhMjdwJI4b/0NIfCHhb8hd48t4lvjcdI2OgOM53SwjdWEZ03fm7RQcIp1iuH2bO1UZ1epF+06JETEu4NWiAX1s5o1PudgKOIDyAkTn6+iJ4oxxa0dd++j9XNk906HZPZxFfj4qpahUX4zVSCrEg8No+uxICmYI+7uiITB11Kg8ex0EoYtydRyif2u8j9nbbvi58QA4UOP77GAy/mLuYN6zXmKRb8OrG/u9Np4JnFsmhj4fxjmEbPAV3Y=
    access_key:
      secure: l0ZPEIAWeVtc8sITt31908AFCaJB+yb/rP8QpXUzYZZqMU00J/jA1Vn3P925+tyD2TnSks80+I/8s2quq99O9Ke4lziLh6syu0yaSFB0Q29EiN/1sKZ6UN//0qJr1C44hw3bHiR8bfJBRcx5CxnW7KuGZEbatM0M0Yyo/wRT2tMh2PzoqbCvgv+XuFCXWVmjgz87SyEtfFyoLmT1iRTjj90GNbECy/X4hu4Pdhjd0V96gpbrtmlyt1WR3H4wlYLuYFmt9Zh5XPANXuxn0RPX2Y5U7caqNBs4k+8Xl/ubd+v/oTsuOS0N+QE/QYiu+yY7jmKYHwhq+KVYO8AMKD8y44U3cwmaFckj4OoQzgX32B01rRQGHWPNyz7RWzfdNbjcgYShCUGzNpeGQ7C3WvY9MFtSgAfgUTlRqzaVRmgH+vLtVSrfpl6pH2CeiCrfUh7ZgoW48xIUsbiBhc6us1YyHlH8vVC9UAIxO8hlNWCvlHQkvXc77HR2Gzol7zdsJWqBlU39eG5hPcfyDMfnEzqSySggoJ8bIBi+uaTYcxiKTW91iL3hjnPTgGrHQhQJ9aCzqypmSW5+CJv89wZG8Leme6wkpZ56G5/m49hN1nwr6KTRl8dV+uKwD5BRTXHypenYwU3/avI5LW7SLyOo1Oo+eZXoZo23YkHKhuLV5VsNc0M=
  apt:
    sources:
    - google-chrome

branches:
  only:
  - master
  - develop

env:
  matrix:
    - RUN_E2E_TESTS=true
    - RUN_BACKEND_TESTS=false RUN_FRONTEND_TESTS=false RUN_LINT=true REPORT_BACKEND_COVERAGE=false
    - RUN_BACKEND_TESTS=false RUN_FRONTEND_TESTS=true RUN_LINT=false REPORT_BACKEND_COVERAGE=false
    - RUN_BACKEND_TESTS=true RUN_FRONTEND_TESTS=false RUN_LINT=false REPORT_BACKEND_COVERAGE=false
    - RUN_BACKEND_TESTS=true RUN_FRONTEND_TESTS=false RUN_LINT=false REPORT_BACKEND_COVERAGE=true
  # Connect to SauceLabs by adding encrypted username and Sauce Key
  # They will be available globally in travis env to be used by core/tests/protractor.conf.js
  #global:   
matrix:
  allow_failures:
  # The backend tests, with coverage, take too long to run, so we make this
  # optional.
  - env: RUN_BACKEND_TESTS=true RUN_FRONTEND_TESTS=false RUN_LINT=false REPORT_BACKEND_COVERAGE=true
  # The e2e tests are not succeeding consistently, and fail for PRs from outside the Oppia repository,
  # so we're making them optional for now. 
  # However, we plan to make them mandatory once both these issues are addressed.
  - env: RUN_E2E_TESTS=true
  fast_finish: true

notifications:
  email:
    recipients:
    - sean@seanlip.org
    - henning.benmax@gmail.com
    - wxy.xinyu@gmail.com
    on_success: change
    on_failure: change
  irc:
    channels:
    - chat.freenode.net#oppia
    on_success: never
    on_failure: always
  webhooks:
    urls:
    # This URL can be obtained by going to the Gitter chat room
    # and clicking Settings > Integrations.
    - https://webhooks.gitter.im/e/f8f782497ec1ffcea2e7
    on_success: always
    on_failure: always

before_install:
- pip install codecov
- export CHROME_BIN=chromium-browser
- export DISPLAY=:99.0
- bash -e /etc/init.d/xvfb start

install:
- set -e
- pushd $TRAVIS_BUILD_DIR
- source scripts/setup.sh || exit 1
- source scripts/setup_gae.sh || exit 1

script:
- if [ $RUN_E2E_TESTS == 'true' ]; then bash scripts/run_e2e_tests.sh; fi
- if [ $RUN_BACKEND_TESTS == 'true' ] && [ $REPORT_BACKEND_COVERAGE == 'true' ]; then bash scripts/run_backend_tests.sh --generate_coverage_report; fi
- if [ $RUN_BACKEND_TESTS == 'true' ] && [ $REPORT_BACKEND_COVERAGE == 'false' ]; then bash scripts/run_backend_tests.sh; fi
- if [ $RUN_LINT == 'true' ]; then bash scripts/install_third_party.sh; python scripts/pre_commit_linter.py --path=.; fi
# Travis aborts test run if nothing is printed back to STDOUT for some time.
# -x is used to avoid that.
- if [ $RUN_FRONTEND_TESTS == 'true' ]; then bash -x scripts/run_frontend_tests.sh --run-minified-tests=true; fi

after_success:
- if [ $RUN_BACKEND_TESTS == 'true' ] && [ $REPORT_BACKEND_COVERAGE == 'true' ]; then codecov; fi
- if [ $RUN_FRONTEND_TESTS == 'true' ]; then codecov --file ../karma_coverage_reports/coverage-final.json; fi

cache:
  # Cache Oppia's dependencies.
  directories:
    - ../node_modules/
    - ../oppia_tools/
    - third_party/

before_cache:
  # Delete python bytecode to prevent cache rebuild.
  - find third_party -name "*.pyc" -print -delete

