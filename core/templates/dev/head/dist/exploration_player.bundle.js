/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"exploration_player": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./core/templates/dev/head/pages/exploration_player/ExplorationPlayer.ts","about~admin~app~collection_editor~collection_player~contact~creator_dashboard~donate~email_dashboard~c1e50cc0","admin~app~collection_editor~creator_dashboard~exploration_editor~exploration_player~skill_editor~sto~7c5e036a","admin~creator_dashboard~exploration_editor~exploration_player~moderator~skill_editor~story_editor~to~3f6ef738","admin~app~collection_editor~creator_dashboard~exploration_editor~exploration_player~skill_editor~top~61bb2de1","admin~collection_editor~creator_dashboard~exploration_editor~exploration_player~skill_editor~topic_e~3a7281d0","collection_player~creator_dashboard~exploration_editor~exploration_player~learner_dashboard~library~~88caa5df","collection_editor~creator_dashboard~exploration_editor~exploration_player~skill_editor~topic_editor","creator_dashboard~exploration_editor~exploration_player~skill_editor~story_editor~topic_editor"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./core/templates/dev/head/components/button-directives/exploration-embed-modal/exploration-embed-button.service.ts":
/*!**************************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/button-directives/exploration-embed-modal/exploration-embed-button.service.ts ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for the 'embed exploration' modal.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/SiteAnalyticsService.ts */ "./core/templates/dev/head/services/SiteAnalyticsService.ts");
angular.module('explorationEmbedButtonModule').factory('ExplorationEmbedButtonService', [
    '$uibModal', 'SiteAnalyticsService', 'UrlInterpolationService',
    function ($uibModal, SiteAnalyticsService, UrlInterpolationService) {
        return {
            showModal: function (explorationId) {
                $uibModal.open({
                    backdrop: true,
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/button-directives/exploration-embed-modal/' +
                        'exploration-embed-button.directive.html'),
                    resolve: {
                        explorationId: function () {
                            return explorationId;
                        }
                    },
                    controller: [
                        '$scope', '$uibModalInstance', '$window', 'explorationId',
                        function ($scope, $uibModalInstance, $window, explorationId) {
                            $scope.explorationId = explorationId;
                            $scope.serverName = ($window.location.protocol + '//' + $window.location.host);
                            $scope.close = function () {
                                $uibModalInstance.dismiss('close');
                            };
                            $scope.selectText = function (evt) {
                                var codeDiv = evt.currentTarget;
                                var range = document.createRange();
                                range.setStartBefore(codeDiv.firstChild);
                                range.setEndAfter(codeDiv.lastChild);
                                var selection = window.getSelection();
                                selection.removeAllRanges();
                                selection.addRange(range);
                            };
                        }
                    ]
                });
                SiteAnalyticsService.registerOpenEmbedInfoEvent(explorationId);
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/button-directives/hint-and-solution-buttons/hint-and-solution-buttons.directive.ts":
/*!*******************************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/button-directives/hint-and-solution-buttons/hint-and-solution-buttons.directive.ts ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for hint and solution buttons.
 */
__webpack_require__(/*! pages/exploration_player/ExplorationPlayerStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts");
__webpack_require__(/*! pages/exploration_player/HintsAndSolutionManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/HintsAndSolutionManagerService.ts");
__webpack_require__(/*! pages/exploration_player/HintAndSolutionModalService.ts */ "./core/templates/dev/head/pages/exploration_player/HintAndSolutionModalService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! pages/exploration_player/StatsReportingService.ts */ "./core/templates/dev/head/pages/exploration_player/StatsReportingService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/contextual/DeviceInfoService.ts */ "./core/templates/dev/head/services/contextual/DeviceInfoService.ts");
angular.module('hintAndSolutionButtonsModule').directive('hintAndSolutionButtons', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {},
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/button-directives/hint-and-solution-buttons/' +
                'hint-and-solution-buttons.directive.html'),
            controllerAs: '$ctrl',
            controller: [
                '$scope', '$rootScope', 'HintsAndSolutionManagerService',
                'PlayerTranscriptService', 'ExplorationPlayerStateService',
                'HintAndSolutionModalService', 'DeviceInfoService', 'ContextService',
                'PlayerPositionService', 'EVENT_ACTIVE_CARD_CHANGED',
                'EVENT_NEW_CARD_OPENED', 'INTERACTION_SPECS', 'StatsReportingService',
                function ($scope, $rootScope, HintsAndSolutionManagerService, PlayerTranscriptService, ExplorationPlayerStateService, HintAndSolutionModalService, DeviceInfoService, ContextService, PlayerPositionService, EVENT_ACTIVE_CARD_CHANGED, EVENT_NEW_CARD_OPENED, INTERACTION_SPECS, StatsReportingService) {
                    var ctrl = this;
                    ctrl.hintIndexes = [];
                    var _editorPreviewMode = ContextService.isInExplorationEditorPage();
                    // Represents the index of the currently viewed hint.
                    ctrl.activeHintIndex = null;
                    ctrl.displayedCard = null;
                    ctrl.solutionModalIsActive = false;
                    ctrl.currentlyOnLatestCard = true;
                    ctrl.isHintConsumed = HintsAndSolutionManagerService.isHintConsumed;
                    ctrl.isSolutionConsumed = (HintsAndSolutionManagerService.isSolutionConsumed);
                    var resetLocalHintsArray = function () {
                        ctrl.hintIndexes = [];
                        var numHints = HintsAndSolutionManagerService.getNumHints();
                        for (var index = 0; index < numHints; index++) {
                            ctrl.hintIndexes.push(index);
                        }
                    };
                    ctrl.isHintButtonVisible = function (index) {
                        return (HintsAndSolutionManagerService.isHintViewable(index) &&
                            ctrl.displayedCard.doesInteractionSupportHints());
                    };
                    ctrl.isSolutionButtonVisible = function () {
                        return HintsAndSolutionManagerService.isSolutionViewable();
                    };
                    ctrl.displayHintModal = function (index) {
                        ctrl.activeHintIndex = index;
                        var promise = (HintAndSolutionModalService.displayHintModal(index));
                        promise.result.then(null, function () {
                            ctrl.activeHintIndex = null;
                        });
                    };
                    ctrl.onClickSolutionButton = function () {
                        ctrl.solutionModalIsActive = true;
                        if (HintsAndSolutionManagerService.isSolutionConsumed()) {
                            ctrl.displaySolutionModal();
                        }
                        else {
                            var interstitialModalPromise = (HintAndSolutionModalService.displaySolutionInterstitialModal());
                            interstitialModalPromise.result.then(function () {
                                ctrl.displaySolutionModal();
                            }, function () {
                                ctrl.solutionModalIsActive = false;
                            });
                        }
                    };
                    ctrl.displaySolutionModal = function () {
                        ctrl.solutionModalIsActive = true;
                        var inPretestMode = ExplorationPlayerStateService.isInPretestMode();
                        if (!_editorPreviewMode && !inPretestMode) {
                            StatsReportingService.recordSolutionHit(PlayerPositionService.getCurrentStateName());
                        }
                        var promise = HintAndSolutionModalService.displaySolutionModal();
                        promise.result.then(null, function () {
                            ctrl.solutionModalIsActive = false;
                        });
                    };
                    $scope.$on(EVENT_NEW_CARD_OPENED, function (evt, newCard) {
                        ctrl.displayedCard = newCard;
                        HintsAndSolutionManagerService.reset(newCard.getHints(), newCard.getSolution());
                        resetLocalHintsArray();
                    });
                    ctrl.isTooltipVisible = function () {
                        return HintsAndSolutionManagerService.isHintTooltipOpen();
                    };
                    $scope.$on(EVENT_ACTIVE_CARD_CHANGED, function (evt) {
                        var displayedCardIndex = PlayerPositionService.getDisplayedCardIndex();
                        ctrl.currentlyOnLatestCard = PlayerTranscriptService.isLastCard(displayedCardIndex);
                        if (ctrl.currentlyOnLatestCard) {
                            resetLocalHintsArray();
                        }
                    });
                    resetLocalHintsArray();
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/ck-editor-helpers/ck-editor-rte/ck-editor-rte.directive.ts":
/*!*******************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/ck-editor-helpers/ck-editor-rte/ck-editor-rte.directive.ts ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Modal and functionality for the create story button.
 */
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/RteHelperService.ts */ "./core/templates/dev/head/services/RteHelperService.ts");
angular.module('ckEditorRteModule').directive('ckEditorRte', [
    'ContextService', 'RteHelperService', 'PAGE_CONTEXT',
    function (ContextService, RteHelperService, PAGE_CONTEXT) {
        return {
            restrict: 'E',
            scope: {
                uiConfig: '&'
            },
            template: '<div><div></div>' +
                '<div contenteditable="true" class="oppia-rte">' +
                '</div></div>',
            require: '?ngModel',
            link: function (scope, el, attr, ngModel) {
                var _RICH_TEXT_COMPONENTS = RteHelperService.getRichTextComponents();
                var names = [];
                var icons = [];
                var canUseFs = ContextService.getPageContext() ===
                    PAGE_CONTEXT.EXPLORATION_EDITOR;
                _RICH_TEXT_COMPONENTS.forEach(function (componentDefn) {
                    if (!((scope.uiConfig() &&
                        scope.uiConfig().hide_complex_extensions &&
                        componentDefn.isComplex) ||
                        (!canUseFs && componentDefn.requiresFs))) {
                        names.push(componentDefn.id);
                        icons.push(componentDefn.iconDataUrl);
                    }
                });
                /**
                 * Create rules to whitelist all the rich text components and
                 * their wrappers and overlays.
                 * See format of filtering rules here:
                 * http://docs.ckeditor.com/#!/guide/dev_allowed_content_rules
                 */
                // Whitelist the component tags with any attributes and classes.
                var componentRule = names.map(function (name) {
                    return 'oppia-noninteractive-' + name;
                }).join(' ') + '(*)[*];';
                // Whitelist the inline component wrapper, which is a
                // span with a "type" attribute.
                var inlineWrapperRule = ' span[type];';
                // Whitelist the block component wrapper, which is a div
                // with a "type" attribute and a CSS class.
                var blockWrapperRule = ' div(oppia-rte-component-container)[type];';
                // Whitelist the transparent block component overlay, which is
                // a div with a CSS class.
                var blockOverlayRule = ' div(oppia-rte-component-overlay);';
                // Put all the rules together.
                var extraAllowedContentRules = componentRule +
                    inlineWrapperRule +
                    blockWrapperRule +
                    blockOverlayRule;
                var pluginNames = names.map(function (name) {
                    return 'oppia' + name;
                }).join(',');
                var buttonNames = [];
                names.forEach(function (name) {
                    buttonNames.push('Oppia' + name);
                    buttonNames.push('-');
                });
                buttonNames.pop();
                // All icons on the toolbar except the Rich Text components.
                var allIcons = ['undo', 'redo', 'bold', 'Italic', 'numberedList',
                    'bulletedList', 'pre', 'indent', 'outdent'];
                // Add external plugins.
                CKEDITOR.plugins.addExternal('sharedspace', '/third_party/static/ckeditor-sharedspace-4.9.2/', 'plugin.js');
                // Pre plugin is not available for 4.9.2 version of CKEditor. This is
                // a self created plugin (other plugins are provided by CKEditor).
                CKEDITOR.plugins.addExternal('pre', '/extensions/ckeditor_plugins/pre/', 'plugin.js');
                var startupFocusEnabled = true;
                if (scope.uiConfig() &&
                    scope.uiConfig().startupFocusEnabled !== undefined) {
                    startupFocusEnabled = scope.uiConfig().startupFocusEnabled;
                }
                // Initialize CKEditor.
                var ck = CKEDITOR.inline((el[0].children[0].children[1]), {
                    extraPlugins: 'pre,sharedspace,' + pluginNames,
                    startupFocus: startupFocusEnabled,
                    removePlugins: 'indentblock',
                    title: false,
                    floatSpaceDockedOffsetY: 15,
                    extraAllowedContent: extraAllowedContentRules,
                    sharedSpaces: {
                        top: el[0].children[0].children[0]
                    },
                    skin: 'bootstrapck,/third_party/static/ckeditor-bootstrapck-1.0/',
                    toolbar: [
                        {
                            name: 'basicstyles',
                            items: ['Bold', '-', 'Italic']
                        },
                        {
                            name: 'paragraph',
                            items: [
                                'NumberedList', '-',
                                'BulletedList', '-',
                                'Pre', '-',
                                'Blockquote', '-',
                                'Indent', '-',
                                'Outdent'
                            ]
                        },
                        {
                            name: 'rtecomponents',
                            items: buttonNames
                        },
                        {
                            name: 'document',
                            items: ['Source']
                        }
                    ]
                });
                // A RegExp for matching rich text components.
                var componentRe = (/(<(oppia-noninteractive-(.+?))\b[^>]*>)[\s\S]*?<\/\2>/g);
                /**
                 * Before data is loaded into CKEditor, we need to wrap every rte
                 * component in a span (inline) or div (block).
                 * For block elements, we add an overlay div as well.
                 */
                var wrapComponents = function (html) {
                    if (html === undefined) {
                        return html;
                    }
                    return html.replace(componentRe, function (match, p1, p2, p3) {
                        if (RteHelperService.isInlineComponent(p3)) {
                            return '<span type="oppia-noninteractive-' + p3 + '">' +
                                match + '</span>';
                        }
                        else {
                            return '<div type="oppia-noninteractive-' + p3 + '"' +
                                'class="oppia-rte-component-container">' + match +
                                '</div>';
                        }
                    });
                };
                ck.on('instanceReady', function () {
                    // Set the css and icons for each toolbar button.
                    names.forEach(function (name, index) {
                        var icon = icons[index];
                        var upperCasedName = name.charAt(0).toUpperCase() + name.slice(1);
                        $('.cke_button__oppia' + name)
                            .css('background-image', 'url("/extensions' + icon + '")')
                            .css('background-position', 'center')
                            .css('background-repeat', 'no-repeat')
                            .css('height', '24px')
                            .css('width', '24px')
                            .css('padding', '0px 0px');
                    });
                    $('.cke_toolbar_separator')
                        .css('height', '22px');
                    $('.cke_button_icon')
                        .css('height', '24px')
                        .css('width', '24px');
                    ck.setData(wrapComponents(ngModel.$viewValue));
                });
                // Angular rendering of components confuses CKEditor's undo system, so
                // we hide all of that stuff away from CKEditor.
                ck.on('getSnapshot', function (event) {
                    if (event.data === undefined) {
                        return;
                    }
                    event.data = event.data.replace(componentRe, function (match, p1, p2) {
                        return p1 + '</' + p2 + '>';
                    });
                }, null, null, 20);
                ck.on('change', function () {
                    var elt = $('<div>' + ck.getData() + '</div>');
                    var textElt = elt[0].childNodes;
                    for (var i = textElt.length; i > 0; i--) {
                        for (var j = textElt[i - 1].childNodes.length; j > 0; j--) {
                            if (textElt[i - 1].childNodes[j - 1].nodeName === 'BR' ||
                                (textElt[i - 1].childNodes[j - 1].nodeName === '#text' &&
                                    textElt[i - 1].childNodes[j - 1].nodeValue.trim() === '')) {
                                textElt[i - 1].childNodes[j - 1].remove();
                            }
                            else {
                                break;
                            }
                        }
                        if (textElt[i - 1].childNodes.length === 0) {
                            if (textElt[i - 1].nodeName === 'BR' ||
                                (textElt[i - 1].nodeName === '#text' &&
                                    textElt[i - 1].nodeValue.trim() === '') ||
                                textElt[i - 1].nodeName === 'P') {
                                textElt[i - 1].remove();
                                continue;
                            }
                        }
                        else {
                            break;
                        }
                    }
                    ngModel.$setViewValue(elt.html());
                });
                ngModel.$render = function () {
                    ck.setData(ngModel.$viewValue);
                };
                scope.$on('$destroy', function () {
                    // Clean up CKEditor instance when directive is removed.
                    ck.destroy();
                });
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/ck-editor-helpers/ck-editor-widgets/ck-editor-widgets.initializer.ts":
/*!*****************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/ck-editor-helpers/ck-editor-widgets/ck-editor-widgets.initializer.ts ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Code to dynamically generate CKEditor widgets for the rich
 * text components.
 */
__webpack_require__(/*! services/HtmlEscaperService.ts */ "./core/templates/dev/head/services/HtmlEscaperService.ts");
__webpack_require__(/*! services/RteHelperService.ts */ "./core/templates/dev/head/services/RteHelperService.ts");
angular.module('ckEditorWidgetsModule').run([
    '$timeout', '$compile', '$rootScope', '$uibModal', 'RteHelperService',
    'HtmlEscaperService',
    function ($timeout, $compile, $rootScope, $uibModal, RteHelperService, HtmlEscaperService) {
        var _RICH_TEXT_COMPONENTS = RteHelperService.getRichTextComponents();
        _RICH_TEXT_COMPONENTS.forEach(function (componentDefn) {
            // The name of the CKEditor widget corresponding to this component.
            var ckName = 'oppia' + componentDefn.id;
            // Check to ensure that a plugin is not registered more than once.
            if (CKEDITOR.plugins.registered[ckName] !== undefined) {
                return;
            }
            var tagName = 'oppia-noninteractive-' + componentDefn.id;
            var customizationArgSpecs = componentDefn.customizationArgSpecs;
            var isInline = RteHelperService.isInlineComponent(componentDefn.id);
            // Inline components will be wrapped in a span, while block components
            // will be wrapped in a div.
            if (isInline) {
                var componentTemplate = '<span type="' + tagName + '">' +
                    '<' + tagName + '></' + tagName + '>' +
                    '</span>';
            }
            else {
                var componentTemplate = '<div class="oppia-rte-component-container" ' +
                    'type="' + tagName + '">' +
                    '<' + tagName + '></' + tagName + '>' +
                    '<div class="component-overlay"></div>' +
                    '</div>';
            }
            CKEDITOR.plugins.add(ckName, {
                init: function (editor) {
                    // Create the widget itself.
                    editor.widgets.add(ckName, {
                        button: componentDefn.tooltip,
                        inline: isInline,
                        template: componentTemplate,
                        draggable: false,
                        edit: function () {
                            editor.fire('lockSnapshot', {
                                dontUpdate: true
                            });
                            // Save this for creating the widget later.
                            var container = this.wrapper.getParent(true);
                            var that = this;
                            var customizationArgs = {};
                            customizationArgSpecs.forEach(function (spec) {
                                customizationArgs[spec.name] = that.data[spec.name] ||
                                    spec.default_value;
                            });
                            RteHelperService._openCustomizationModal(customizationArgSpecs, customizationArgs, function (customizationArgsDict) {
                                for (var arg in customizationArgsDict) {
                                    if (customizationArgsDict.hasOwnProperty(arg)) {
                                        that.setData(arg, customizationArgsDict[arg]);
                                    }
                                }
                                /**
                                * This checks whether the widget has already been inited
                                * and set up before (if we are editing a widget that
                                * has already been inserted into the RTE, we do not
                                * need to finalizeCreation again).
                                */
                                if (!that.isReady()) {
                                    // Actually create the widget, if we have not already.
                                    editor.widgets.finalizeCreation(container);
                                }
                                /**
                                 * Need to manually $compile so the directive renders.
                                 * Note that.element.$ is the native DOM object
                                 * represented by that.element. See:
                                 * http://docs.ckeditor.com/#!/api/CKEDITOR.dom.element
                                 */
                                $compile($(that.element.$).contents())($rootScope);
                                // $timeout ensures we do not take the undo snapshot until
                                // after angular finishes its changes to the component tags.
                                $timeout(function () {
                                    // For inline widgets, place the caret after the
                                    // widget so the user can continue typing immediately.
                                    if (isInline) {
                                        var range = editor.createRange();
                                        var widgetContainer = that.element.getParent();
                                        range.moveToPosition(widgetContainer, CKEDITOR.POSITION_AFTER_END);
                                        editor.getSelection().selectRanges([range]);
                                        // Another timeout needed so the undo snapshot is
                                        // not taken until the caret is in the right place.
                                        $timeout(function () {
                                            editor.fire('unlockSnapshot');
                                            editor.fire('saveSnapshot');
                                        });
                                    }
                                    else {
                                        editor.fire('unlockSnapshot');
                                        editor.fire('saveSnapshot');
                                    }
                                });
                            }, function () { }, function () { });
                        },
                        /**
                         * This is how the widget will be represented in the outputs source,
                         * so it is called when we call editor.getData().
                         */
                        downcast: function (element) {
                            // Clear the angular rendering content, which we don't
                            // want in the output.
                            element.children[0].setHtml('');
                            // Return just the rich text component, without its wrapper.
                            return element.children[0];
                        },
                        /**
                         * This is how a widget is recognized by CKEditor, for example
                         * when we first load data in. Returns a boolean,
                         * true iff "element" is an instance of this widget.
                         */
                        upcast: function (element) {
                            return (element.name !== 'p' &&
                                element.children.length > 0 &&
                                element.children[0].name === tagName);
                        },
                        data: function () {
                            var that = this;
                            // Set attributes of component according to data values.
                            customizationArgSpecs.forEach(function (spec) {
                                that.element.getChild(0).setAttribute(spec.name + '-with-value', HtmlEscaperService.objToEscapedJson(that.data[spec.name] || ''));
                            });
                        },
                        init: function () {
                            editor.fire('lockSnapshot', {
                                dontUpdate: true
                            });
                            var that = this;
                            var isMissingAttributes = false;
                            // On init, read values from component attributes and save them.
                            customizationArgSpecs.forEach(function (spec) {
                                var value = that.element.getChild(0).getAttribute(spec.name + '-with-value');
                                if (value) {
                                    that.setData(spec.name, HtmlEscaperService.escapedJsonToObj(value));
                                }
                                else {
                                    isMissingAttributes = true;
                                }
                            });
                            if (!isMissingAttributes) {
                                // Need to manually $compile so the directive renders.
                                $compile($(this.element.$).contents())($rootScope);
                            }
                            $timeout(function () {
                                editor.fire('unlockSnapshot');
                                editor.fire('saveSnapshot');
                            });
                        }
                    });
                }
            });
        });
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/common-layout-directives/attribution-guide/attribution-guide.directive.ts":
/*!**********************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/common-layout-directives/attribution-guide/attribution-guide.directive.ts ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2016 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for the attribution guide.
 */
__webpack_require__(/*! domain/utilities/BrowserCheckerService.ts */ "./core/templates/dev/head/domain/utilities/BrowserCheckerService.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
angular.module('attributionGuideModule').directive('attributionGuide', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {},
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/common-layout-directives/attribution-guide/' +
                'attribution-guide.directive.html'),
            controllerAs: '$ctrl',
            controller: [
                'BrowserCheckerService', 'UrlService', function (BrowserCheckerService, UrlService) {
                    var ctrl = this;
                    ctrl.isMobileDevice = BrowserCheckerService.isMobileDevice();
                    ctrl.iframed = UrlService.isIframed();
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/common-layout-directives/background-banner/background-banner.directive.ts":
/*!**********************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/common-layout-directives/background-banner/background-banner.directive.ts ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2015 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for the background banner.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
angular.module('backgroundBannerModule').directive('backgroundBanner', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {},
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/common-layout-directives/background-banner/' +
                'background-banner.directive.html'),
            controllerAs: '$ctrl',
            controller: [
                function () {
                    var ctrl = this;
                    var possibleBannerFilenames = [
                        'bannerA.svg', 'bannerB.svg', 'bannerC.svg', 'bannerD.svg'
                    ];
                    var bannerImageFilename = possibleBannerFilenames[Math.floor(Math.random() * possibleBannerFilenames.length)];
                    ctrl.bannerImageFileUrl = UrlInterpolationService.getStaticImageUrl('/background/' + bannerImageFilename);
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/common-layout-directives/sharing-links/sharing-links.directive.ts":
/*!**************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/common-layout-directives/sharing-links/sharing-links.directive.ts ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2016 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for the Social Sharing Links.
 */
__webpack_require__(/*! components/button-directives/exploration-embed-modal/exploration-embed-button.service.ts */ "./core/templates/dev/head/components/button-directives/exploration-embed-modal/exploration-embed-button.service.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/HtmlEscaperService.ts */ "./core/templates/dev/head/services/HtmlEscaperService.ts");
__webpack_require__(/*! services/SiteAnalyticsService.ts */ "./core/templates/dev/head/services/SiteAnalyticsService.ts");
angular.module('sharingLinksModule').directive('sharingLinks', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {
                layoutType: '@',
                layoutAlignType: '@',
                shareType: '@',
                getTwitterText: '&twitterText',
                getExplorationId: '&explorationId',
                getCollectionId: '&collectionId'
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/common-layout-directives/sharing-links/' +
                'sharing-links.directive.html'),
            controllerAs: '$ctrl',
            controller: [
                '$window', 'HtmlEscaperService',
                'ExplorationEmbedButtonService', 'SiteAnalyticsService',
                function ($window, HtmlEscaperService, ExplorationEmbedButtonService, SiteAnalyticsService) {
                    var ctrl = this;
                    ctrl.registerShareEvent = null;
                    if (ctrl.shareType === 'exploration') {
                        ctrl.explorationId = ctrl.getExplorationId();
                        ctrl.activityType = 'explore';
                        ctrl.activityId = ctrl.explorationId;
                        ctrl.registerShareEvent = (SiteAnalyticsService.registerShareExplorationEvent);
                        ctrl.showEmbedExplorationModal = (ExplorationEmbedButtonService.showModal);
                    }
                    else if (ctrl.shareType === 'collection') {
                        ctrl.collectionId = ctrl.getCollectionId();
                        ctrl.activityType = 'collection';
                        ctrl.activityId = ctrl.collectionId;
                        ctrl.registerShareEvent = (SiteAnalyticsService.registerShareCollectionEvent);
                    }
                    else {
                        throw Error('SharingLinks directive can only be used either in the' +
                            'collection player or the exploration player');
                    }
                    ctrl.serverName = ($window.location.protocol + '//' + $window.location.host);
                    ctrl.escapedTwitterText = (HtmlEscaperService.unescapedStrToEscapedStr(ctrl.getTwitterText()));
                    ctrl.classroomUrl = UrlInterpolationService.getStaticImageUrl('/general/classroom.png');
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/profile-link-directives/circular-image/circular-image.directive.ts":
/*!***************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/profile-link-directives/circular-image/circular-image.directive.ts ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2015 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Displays circled images with linking (when available).
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
angular.module('circularImageModule').directive('circularImage', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {
                src: '&',
                link: '&?'
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/profile-link-directives/circular-image/' +
                'circular-image.directive.html'),
            controllerAs: '$ctrl',
            controller: [function () {
                    var ctrl = this;
                    ctrl.isLinkAvailable = function () {
                        return ctrl.link() ? true : false;
                    };
                }]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/profile-link-directives/profile-link-image/profile-link-image.directive.ts":
/*!***********************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/profile-link-directives/profile-link-image/profile-link-image.directive.ts ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for creating image links to a user's profile page.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
angular.module('profileLinkImageModule').directive('profileLinkImage', [
    'UrlInterpolationService', 'SYSTEM_USER_IDS',
    function (UrlInterpolationService, SYSTEM_USER_IDS) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {
                username: '&'
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/profile-link-directives/profile-link-image/' +
                'profile-link-image.directive.html'),
            controllerAs: '$ctrl',
            controller: [
                '$http',
                function ($http) {
                    var ctrl = this;
                    var DEFAULT_PROFILE_IMAGE_PATH = (UrlInterpolationService.getStaticImageUrl('/avatar/user_blue_72px.png'));
                    ctrl.isUsernameLinkable = function (username) {
                        return SYSTEM_USER_IDS.indexOf(username) === -1;
                    };
                    ctrl.profileImageUrl = ('/preferenceshandler/profile_picture_by_username/' +
                        ctrl.username());
                    ctrl.profilePicture = DEFAULT_PROFILE_IMAGE_PATH;
                    // Returns a promise for the user profile picture, or the default
                    // image if user is not logged in or has not uploaded a profile
                    // picture, or the player is in preview mode.
                    $http.get(ctrl.profileImageUrl).then(function (response) {
                        ctrl.profilePicture = (response.data.profile_picture_data_url_for_username ||
                            DEFAULT_PROFILE_IMAGE_PATH);
                    });
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/ratings/rating-display/rating-display.directive.ts":
/*!***********************************************************************************************!*\
  !*** ./core/templates/dev/head/components/ratings/rating-display/rating-display.directive.ts ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for displaying summary rating information.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
angular.module('ratingDisplayModule').directive('ratingDisplay', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            // This will display a star-rating based on the given data. The attributes
            // passed in are as follows:
            //  - isEditable: true or false; whether the rating is user-editable.
            //  - onEdit: should be supplied iff isEditable is true, and be a function
            //    that will be supplied with the new rating when the rating is
            //    changed.
            //  - ratingValue: an integer 1-5 giving the rating
            restrict: 'E',
            scope: {
                isEditable: '=',
                onEdit: '=',
                ratingValue: '='
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/ratings/rating-display/rating-display.directive.html'),
            link: function (scope, element) {
                // This is needed in order for the scope to be retrievable during Karma
                // unit testing. See http://stackoverflow.com/a/29833832 for more
                // details.
                element[0].getControllerScope = function () {
                    return scope;
                };
            },
            controller: ['$scope', function ($scope) {
                    var POSSIBLE_RATINGS = [1, 2, 3, 4, 5];
                    $scope.stars = POSSIBLE_RATINGS.map(function (starValue) {
                        return {
                            cssClass: 'fa-star-o',
                            value: starValue
                        };
                    });
                    var STATUS_ACTIVE = 'active';
                    var STATUS_INACTIVE = 'inactive';
                    var STATUS_RATING_SET = 'rating_set';
                    $scope.status = STATUS_INACTIVE;
                    var displayValue = function (ratingValue) {
                        for (var i = 0; i < $scope.stars.length; i++) {
                            $scope.stars[i].cssClass = (ratingValue === undefined ? 'fa-star-o' :
                                ratingValue < $scope.stars[i].value - 0.75 ? 'fa-star-o' :
                                    ratingValue < $scope.stars[i].value - 0.25 ? 'fa-star-half-o' :
                                        'fa-star');
                            if ($scope.status === STATUS_ACTIVE &&
                                ratingValue >= $scope.stars[i].value) {
                                $scope.stars[i].cssClass += ' oppia-rating-star-active';
                            }
                        }
                    };
                    displayValue($scope.ratingValue);
                    $scope.$watch('ratingValue', function () {
                        displayValue($scope.ratingValue);
                    });
                    $scope.clickStar = function (starValue) {
                        if ($scope.isEditable && $scope.status === STATUS_ACTIVE) {
                            $scope.status = STATUS_RATING_SET;
                            $scope.ratingValue = starValue;
                            displayValue(starValue);
                            $scope.onEdit(starValue);
                        }
                    };
                    $scope.enterStar = function (starValue) {
                        var starsHaveNotBeenClicked = ($scope.status === STATUS_ACTIVE ||
                            $scope.status === STATUS_INACTIVE);
                        if ($scope.isEditable && starsHaveNotBeenClicked) {
                            $scope.status = STATUS_ACTIVE;
                            displayValue(starValue);
                        }
                    };
                    $scope.leaveArea = function () {
                        $scope.status = STATUS_INACTIVE;
                        displayValue($scope.ratingValue);
                    };
                    $scope.getCursorStyle = function () {
                        return 'cursor: ' + ($scope.isEditable ? 'pointer' : 'auto');
                    };
                }]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/summary-tile-directives/collection-summary-tile/collection-summary-tile.directive.ts":
/*!*********************************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/summary-tile-directives/collection-summary-tile/collection-summary-tile.directive.ts ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2016 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Summary tile for collections.
 */
__webpack_require__(/*! domain/learner_dashboard/LearnerDashboardIconsDirective.ts */ "./core/templates/dev/head/domain/learner_dashboard/LearnerDashboardIconsDirective.ts");
__webpack_require__(/*! filters/string-utility-filters/truncate-and-capitalize.filter.ts */ "./core/templates/dev/head/filters/string-utility-filters/truncate-and-capitalize.filter.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/DateTimeFormatService.ts */ "./core/templates/dev/head/services/DateTimeFormatService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
angular.module('collectionSummaryTileModule').directive('collectionSummaryTile', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            bindToController: {
                getCollectionId: '&collectionId',
                getCollectionTitle: '&collectionTitle',
                getObjective: '&objective',
                getNodeCount: '&nodeCount',
                getLastUpdatedMsec: '&lastUpdatedMsec',
                getThumbnailIconUrl: '&thumbnailIconUrl',
                getThumbnailBgColor: '&thumbnailBgColor',
                isLinkedToEditorPage: '=?isLinkedToEditorPage',
                getCategory: '&category',
                isPlaylistTile: '&isPlaylistTile',
                showLearnerDashboardIconsIfPossible: ('&showLearnerDashboardIconsIfPossible'),
                isContainerNarrow: '&containerIsNarrow',
                isOwnedByCurrentUser: '&activityIsOwnedByCurrentUser',
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/summary-tile-directives/collection-summary-tile/' +
                'collection-summary-tile.directive.html'),
            controller: [
                'DateTimeFormatService', 'UserService',
                'COLLECTION_VIEWER_URL', 'COLLECTION_EDITOR_URL', function (DateTimeFormatService, UserService, COLLECTION_VIEWER_URL, COLLECTION_EDITOR_URL) {
                    var ctrl = this;
                    ctrl.userIsLoggedIn = null;
                    UserService.getUserInfoAsync().then(function (userInfo) {
                        ctrl.userIsLoggedIn = userInfo.isLoggedIn();
                    });
                    ctrl.DEFAULT_EMPTY_TITLE = 'Untitled';
                    ctrl.ACTIVITY_TYPE_COLLECTION = constants.ACTIVITY_TYPE_COLLECTION;
                    ctrl.getLastUpdatedDatetime = function () {
                        return DateTimeFormatService.getLocaleAbbreviatedDatetimeString(ctrl.getLastUpdatedMsec());
                    };
                    ctrl.getCollectionLink = function () {
                        var targetUrl = (ctrl.isLinkedToEditorPage ?
                            COLLECTION_EDITOR_URL : COLLECTION_VIEWER_URL);
                        return UrlInterpolationService.interpolateUrl(targetUrl, {
                            collection_id: ctrl.getCollectionId()
                        });
                    };
                    ctrl.getCompleteThumbnailIconUrl = function () {
                        return UrlInterpolationService.getStaticImageUrl(ctrl.getThumbnailIconUrl());
                    };
                    ctrl.getStaticImageUrl = function (url) {
                        return UrlInterpolationService.getStaticImageUrl(url);
                    };
                    ctrl.setHoverState = function (hoverState) {
                        ctrl.collectionIsCurrentlyHoveredOver = hoverState;
                    };
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/components/summary-tile-directives/exploration-summary-tile/exploration-summary-tile.directive.ts":
/*!***********************************************************************************************************************************!*\
  !*** ./core/templates/dev/head/components/summary-tile-directives/exploration-summary-tile/exploration-summary-tile.directive.ts ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2015 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Component for an exploration summary tile.
 */
__webpack_require__(/*! components/profile-link-directives/circular-image/circular-image.directive.ts */ "./core/templates/dev/head/components/profile-link-directives/circular-image/circular-image.directive.ts");
__webpack_require__(/*! domain/learner_dashboard/LearnerDashboardIconsDirective.ts */ "./core/templates/dev/head/domain/learner_dashboard/LearnerDashboardIconsDirective.ts");
__webpack_require__(/*! filters/summarize-nonnegative-number.filter.ts */ "./core/templates/dev/head/filters/summarize-nonnegative-number.filter.ts");
__webpack_require__(/*! filters/string-utility-filters/truncate-and-capitalize.filter.ts */ "./core/templates/dev/head/filters/string-utility-filters/truncate-and-capitalize.filter.ts");
__webpack_require__(/*! filters/string-utility-filters/truncate.filter.ts */ "./core/templates/dev/head/filters/string-utility-filters/truncate.filter.ts");
__webpack_require__(/*! components/ratings/rating-computation/rating-computation.service.ts */ "./core/templates/dev/head/components/ratings/rating-computation/rating-computation.service.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/DateTimeFormatService.ts */ "./core/templates/dev/head/services/DateTimeFormatService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
angular.module('explorationSummaryTileModule').directive('explorationSummaryTile', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                getCollectionId: '&collectionId',
                getExplorationId: '&explorationId',
                getExplorationTitle: '&explorationTitle',
                getLastUpdatedMsec: '&lastUpdatedMsec',
                getNumViews: '&numViews',
                getObjective: '&objective',
                getCategory: '&category',
                getRatings: '&ratings',
                getContributorsSummary: '&contributorsSummary',
                getThumbnailIconUrl: '&thumbnailIconUrl',
                getThumbnailBgColor: '&thumbnailBgColor',
                // If this is not null, the new exploration opens in a new window when
                // the summary tile is clicked.
                openInNewWindow: '@openInNewWindow',
                isCommunityOwned: '&isCommunityOwned',
                // If this is not undefined, collection preview tile for mobile
                // will be displayed.
                isCollectionPreviewTile: '@isCollectionPreviewTile',
                // If the screen width is below the threshold defined here, the mobile
                // version of the summary tile is displayed. This attribute is
                // optional: if it is not specified, it is treated as 0, which means
                // that the desktop version of the summary tile is always displayed.
                mobileCutoffPx: '@mobileCutoffPx',
                isPlaylistTile: '&isPlaylistTile',
                getParentExplorationIds: '&parentExplorationIds',
                showLearnerDashboardIconsIfPossible: ('&showLearnerDashboardIconsIfPossible'),
                isContainerNarrow: '&containerIsNarrow',
                isOwnedByCurrentUser: '&activityIsOwnedByCurrentUser',
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/summary-tile-directives/exploration-summary-tile/' +
                'exploration-summary-tile.directive.html'),
            link: function (scope, element) {
                element.find('.exploration-summary-avatars').on('mouseenter', function () {
                    element.find('.mask').attr('class', 'exploration-summary-tile-mask mask');
                    // As animation duration time may be 400ms, .stop(true) is used to
                    // prevent the effects queue falling behind the mouse movement.
                    // .hide(1) and .show(1) used to place the animation in the
                    // effects queue.
                    element.find('.avatars-num-minus-one').stop(true).hide(1, function () {
                        element.find('.all-avatars').stop(true).slideDown();
                    });
                });
                element.find('.exploration-summary-avatars').on('mouseleave', function () {
                    element.find('.mask').attr('class', 'top-section-mask mask');
                    element.find('.all-avatars').stop(true).slideUp(400, function () {
                        element.find('.avatars-num-minus-one').stop(true).show(1);
                    });
                });
            },
            controller: [
                '$scope', '$http', '$window', 'DateTimeFormatService',
                'RatingComputationService', 'UrlService', 'UserService',
                'WindowDimensionsService',
                function ($scope, $http, $window, DateTimeFormatService, RatingComputationService, UrlService, UserService, WindowDimensionsService) {
                    $scope.userIsLoggedIn = null;
                    UserService.getUserInfoAsync().then(function (userInfo) {
                        $scope.userIsLoggedIn = userInfo.isLoggedIn();
                    });
                    $scope.ACTIVITY_TYPE_EXPLORATION = (constants.ACTIVITY_TYPE_EXPLORATION);
                    var contributorsSummary = $scope.getContributorsSummary() || {};
                    $scope.contributors = Object.keys(contributorsSummary).sort(function (contributorUsername1, contributorUsername2) {
                        var commitsOfContributor1 = contributorsSummary[contributorUsername1].num_commits;
                        var commitsOfContributor2 = contributorsSummary[contributorUsername2].num_commits;
                        return commitsOfContributor2 - commitsOfContributor1;
                    });
                    $scope.isRefresherExploration = false;
                    if ($scope.getParentExplorationIds()) {
                        $scope.isRefresherExploration = ($scope.getParentExplorationIds().length > 0);
                    }
                    $scope.avatarsList = [];
                    $scope.MAX_AVATARS_TO_DISPLAY = 5;
                    $scope.setHoverState = function (hoverState) {
                        $scope.explorationIsCurrentlyHoveredOver = hoverState;
                    };
                    $scope.loadParentExploration = function () {
                        $window.location.href = $scope.getExplorationLink();
                    };
                    $scope.getAverageRating = function () {
                        if (!$scope.getRatings()) {
                            return null;
                        }
                        return RatingComputationService.computeAverageRating($scope.getRatings());
                    };
                    $scope.getLastUpdatedDatetime = function () {
                        if (!$scope.getLastUpdatedMsec()) {
                            return null;
                        }
                        return DateTimeFormatService.getLocaleAbbreviatedDatetimeString($scope.getLastUpdatedMsec());
                    };
                    $scope.getExplorationLink = function () {
                        if (!$scope.getExplorationId()) {
                            return '#';
                        }
                        else {
                            var result = '/explore/' + $scope.getExplorationId();
                            var urlParams = UrlService.getUrlParams();
                            var parentExplorationIds = $scope.getParentExplorationIds();
                            var collectionIdToAdd = $scope.getCollectionId();
                            // Replace the collection ID with the one in the URL if it
                            // exists in urlParams.
                            if (parentExplorationIds &&
                                urlParams.hasOwnProperty('collection_id')) {
                                collectionIdToAdd = urlParams.collection_id;
                            }
                            if (collectionIdToAdd) {
                                result = UrlService.addField(result, 'collection_id', collectionIdToAdd);
                            }
                            if (parentExplorationIds) {
                                for (var i = 0; i < parentExplorationIds.length - 1; i++) {
                                    result = UrlService.addField(result, 'parent', parentExplorationIds[i]);
                                }
                            }
                            return result;
                        }
                    };
                    if (!$scope.mobileCutoffPx) {
                        $scope.mobileCutoffPx = 0;
                    }
                    $scope.isWindowLarge = (WindowDimensionsService.getWidth() >= $scope.mobileCutoffPx);
                    WindowDimensionsService.registerOnResizeHook(function () {
                        $scope.isWindowLarge = (WindowDimensionsService.getWidth() >= $scope.mobileCutoffPx);
                        $scope.$apply();
                    });
                    $scope.getCompleteThumbnailIconUrl = function () {
                        return UrlInterpolationService.getStaticImageUrl($scope.getThumbnailIconUrl());
                    };
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/collection/GuestCollectionProgressObjectFactory.ts":
/*!*******************************************************************************************!*\
  !*** ./core/templates/dev/head/domain/collection/GuestCollectionProgressObjectFactory.ts ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating and mutating a domain object which
 * represents the progress of a guest playing through a collection.
 */
oppia.factory('GuestCollectionProgressObjectFactory', [
    function () {
        var GuestCollectionProgress = function (completedExplorationsMap) {
            this._completedExplorationsMap = completedExplorationsMap;
        };
        // Instance methods
        // Returns whether the guest has made any progress towards completing the
        // specified collection ID. Note that this does not account for whether the
        // completed explorations are still contained within that collection.
        GuestCollectionProgress.prototype.hasCompletionProgress = function (collectionId) {
            return this._completedExplorationsMap.hasOwnProperty(collectionId);
        };
        // Returns an array of exploration IDs which have been completed by the
        // specified collection ID, or empty if none have.
        GuestCollectionProgress.prototype.getCompletedExplorationIds = function (collectionId) {
            if (!this.hasCompletionProgress(collectionId)) {
                return [];
            }
            return angular.copy(this._completedExplorationsMap[collectionId]);
        };
        // Specifies that a specific exploration ID has been completed in the
        // context of the specified collection. Returns whether that exploration ID
        // was not previously registered as completed for the collection.
        GuestCollectionProgress.prototype.addCompletedExplorationId = function (collectionId, explorationId) {
            var completedExplorationIds = this.getCompletedExplorationIds(collectionId);
            if (completedExplorationIds.indexOf(explorationId) === -1) {
                completedExplorationIds.push(explorationId);
                this._completedExplorationsMap[collectionId] = completedExplorationIds;
                return true;
            }
            return false;
        };
        // Converts this object to JSON for storage.
        GuestCollectionProgress.prototype.toJson = function (collectionId, explorationIds) {
            return JSON.stringify(this._completedExplorationsMap);
        };
        // Static class methods. Note that "this" is not available in static
        // contexts.
        // This function takes a JSON string which represents a raw collection
        // object and returns a new GuestCollectionProgress domain object. A null or
        // undefined string indicates that an empty progress object should be
        // created.
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        GuestCollectionProgress['createFromJson'] = function (
        /* eslint-enable dot-notation */
        collectionProgressJson) {
            if (collectionProgressJson) {
                return new GuestCollectionProgress(JSON.parse(collectionProgressJson));
            }
            else {
                return new GuestCollectionProgress({});
            }
        };
        return GuestCollectionProgress;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/collection/GuestCollectionProgressService.ts":
/*!*************************************************************************************!*\
  !*** ./core/templates/dev/head/domain/collection/GuestCollectionProgressService.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service that records progress guests make during a collection
 * playthrough. Note that this service does not currently support saving a
 * user's progress when they create an account.
 */
// TODO(bhenning): Move this to a service which stores shared state across the
// frontend in a way that can be persisted in the backend upon account
// creation, such as exploration progress.
// TODO(bhenning): This should be reset upon login, otherwise the progress will
// be different depending on the user's logged in/logged out state.
__webpack_require__(/*! domain/collection/GuestCollectionProgressObjectFactory.ts */ "./core/templates/dev/head/domain/collection/GuestCollectionProgressObjectFactory.ts");
oppia.factory('GuestCollectionProgressService', [
    '$window', 'GuestCollectionProgressObjectFactory',
    function ($window, GuestCollectionProgressObjectFactory) {
        var COLLECTION_STORAGE_KEY = 'collectionProgressStore_v1';
        var storeGuestCollectionProgress = function (guestCollectionProgress) {
            $window.localStorage[COLLECTION_STORAGE_KEY] = (guestCollectionProgress.toJson());
        };
        var loadGuestCollectionProgress = function () {
            return GuestCollectionProgressObjectFactory.createFromJson($window.localStorage[COLLECTION_STORAGE_KEY]);
        };
        var recordCompletedExploration = function (collectionId, explorationId) {
            var guestCollectionProgress = loadGuestCollectionProgress();
            var completedExplorationIdHasBeenAdded = (guestCollectionProgress.addCompletedExplorationId(collectionId, explorationId));
            if (completedExplorationIdHasBeenAdded) {
                storeGuestCollectionProgress(guestCollectionProgress);
            }
        };
        var getValidCompletedExplorationIds = function (collection) {
            var collectionId = collection.getId();
            var guestCollectionProgress = loadGuestCollectionProgress();
            var completedExplorationIds = (guestCollectionProgress.getCompletedExplorationIds(collectionId));
            // Filter the exploration IDs by whether they are contained within the
            // specified collection structure.
            return completedExplorationIds.filter(function (expId) {
                return collection.containsCollectionNode(expId);
            });
        };
        // This method corresponds to collection_domain.get_next_exploration_id.
        var _getNextExplorationId = function (collection, completedIds) {
            var explorationIds = collection.getExplorationIds();
            for (var i = 0; i < explorationIds.length; i++) {
                if (completedIds.indexOf(explorationIds[i]) === -1) {
                    return explorationIds[i];
                }
            }
            return null;
        };
        return {
            /**
             * Records that the specified exploration was completed in the context of
             * the specified collection, as a guest.
             */
            recordExplorationCompletedInCollection: function (collectionId, explorationId) {
                recordCompletedExploration(collectionId, explorationId);
            },
            /**
             * Returns whether the guest user has made any progress toward completing
             * the specified collection by completing at least one exploration related
             * to the collection. Note that this does not account for any completed
             * explorations which are no longer referenced by the collection;
             * getCompletedExplorationIds() should be used for that, instead.
             */
            hasCompletedSomeExploration: function (collectionId) {
                var guestCollectionProgress = loadGuestCollectionProgress();
                return guestCollectionProgress.hasCompletionProgress(collectionId);
            },
            /**
             * Given a collection object, returns the list of exploration IDs
             * completed by the guest user. The return list of exploration IDs will
             * not include any previously completed explorations for the given
             * collection that are no longer part of the collection.
             */
            getCompletedExplorationIds: function (collection) {
                return getValidCompletedExplorationIds(collection);
            },
            /**
             * Given a collection object a list of completed exploration IDs, returns
             * the next exploration ID the guest user can play as part of
             * completing the collection. If this method returns null, the
             * guest has completed the collection.
             */
            getNextExplorationId: function (collection, completedExplorationIds) {
                return _getNextExplorationId(collection, completedExplorationIds);
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/exploration/ExplorationObjectFactory.ts":
/*!********************************************************************************!*\
  !*** ./core/templates/dev/head/domain/exploration/ExplorationObjectFactory.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2015 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of Exploration
 * domain objects.
 */
__webpack_require__(/*! domain/exploration/ParamChangesObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/ParamChangesObjectFactory.ts");
__webpack_require__(/*! domain/exploration/ParamSpecsObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/ParamSpecsObjectFactory.ts");
__webpack_require__(/*! domain/exploration/StatesObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/StatesObjectFactory.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.factory('ExplorationObjectFactory', [
    '$log', 'ParamChangesObjectFactory', 'ParamSpecsObjectFactory',
    'StatesObjectFactory', 'UrlInterpolationService',
    'INTERACTION_DISPLAY_MODE_INLINE',
    'INTERACTION_SPECS', function ($log, ParamChangesObjectFactory, ParamSpecsObjectFactory, StatesObjectFactory, UrlInterpolationService, INTERACTION_DISPLAY_MODE_INLINE, INTERACTION_SPECS) {
        var Exploration = function (initStateName, paramChanges, paramSpecs, states, title, languageCode) {
            this.initStateName = initStateName;
            this.paramChanges = paramChanges;
            this.paramSpecs = paramSpecs;
            this.states = states;
            this.title = title;
            this.languageCode = languageCode;
        };
        // Instance methods
        Exploration.prototype.isStateTerminal = function (stateName) {
            return (stateName && this.getInteractionId(stateName) &&
                INTERACTION_SPECS[this.getInteractionId(stateName)].is_terminal);
        };
        Exploration.prototype.getAuthorRecommendedExpIds = function (stateName) {
            if (!this.isStateTerminal(stateName)) {
                throw Error('Tried to get recommendations for a non-terminal state: ' +
                    stateName);
            }
            return this.getInteractionCustomizationArgs(stateName).recommendedExplorationIds.value;
        };
        Exploration.prototype.getInteraction = function (stateName) {
            var state = this.states.getState(stateName);
            if (!state) {
                $log.error('Invalid state name: ' + stateName);
                return null;
            }
            return state.interaction;
        };
        Exploration.prototype.getInteractionId = function (stateName) {
            var interaction = this.getInteraction(stateName);
            if (interaction === null) {
                return null;
            }
            return interaction.id;
        };
        Exploration.prototype.getInteractionCustomizationArgs =
            function (stateName) {
                var interaction = this.getInteraction(stateName);
                if (interaction === null) {
                    return null;
                }
                return interaction.customizationArgs;
            };
        Exploration.prototype.getInteractionInstructions = function (stateName) {
            var interactionId = this.getInteractionId(stateName);
            return interactionId ? INTERACTION_SPECS[interactionId].instructions : '';
        };
        Exploration.prototype.getNarrowInstructions = function (stateName) {
            var interactionId = this.getInteractionId(stateName);
            return (interactionId ?
                INTERACTION_SPECS[interactionId].narrow_instructions :
                '');
        };
        Exploration.prototype.getInteractionThumbnailSrc = function (stateName) {
            // TODO(sll): unify this with the 'choose interaction' modal in
            // state_editor_interaction.html.
            var interactionId = this.getInteractionId(stateName);
            return interactionId ? (UrlInterpolationService
                .getInteractionThumbnailImageUrl(interactionId)) : '';
        };
        Exploration.prototype.isInteractionInline = function (stateName) {
            var interactionId = this.getInteractionId(stateName);
            // Note that we treat a null interaction as an inline one, so that the
            // error message associated with it is displayed in the most compact way
            // possible in the learner view.
            return (!interactionId ||
                INTERACTION_SPECS[interactionId].display_mode ===
                    INTERACTION_DISPLAY_MODE_INLINE);
        };
        Exploration.prototype.getStates = function () {
            return angular.copy(this.states);
        };
        Exploration.prototype.getState = function (stateName) {
            return this.states.getState(stateName);
        };
        Exploration.prototype.getInitialState = function () {
            return this.getState(this.initStateName);
        };
        Exploration.prototype.setInitialStateName = function (stateName) {
            this.initStateName = stateName;
        };
        Exploration.prototype.getUninterpolatedContentHtml = function (stateName) {
            return this.getState(stateName).content.getHtml();
        };
        Exploration.prototype.getVoiceovers = function (stateName) {
            var state = this.getState(stateName);
            var recordedVoiceovers = state.recordedVoiceovers;
            var contentId = state.content.getContentId();
            return recordedVoiceovers.getBindableVoiceovers(contentId);
        };
        Exploration.prototype.getVoiceover = function (stateName, languageCode) {
            var state = this.getState(stateName);
            var recordedVoiceovers = state.recordedVoiceovers;
            var contentId = state.content.getContentId();
            return recordedVoiceovers.getVoiceover(contentId, languageCode);
        };
        Exploration.prototype.getAllVoiceovers = function (languageCode) {
            return this.states.getAllVoiceovers(languageCode);
        };
        Exploration.prototype.getLanguageCode = function () {
            return this.languageCode;
        };
        Exploration.prototype.getAllVoiceoverLanguageCodes = function () {
            return this.states.getAllVoiceoverLanguageCodes();
        };
        // Static class methods. Note that "this" is not available in
        // static contexts.
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Exploration['createFromBackendDict'] = function (explorationBackendDict) {
            /* eslint-enable dot-notation */
            return new Exploration(explorationBackendDict.init_state_name, ParamChangesObjectFactory.createFromBackendList(explorationBackendDict.param_changes), ParamSpecsObjectFactory.createFromBackendDict(explorationBackendDict.param_specs), StatesObjectFactory.createFromBackendDict(explorationBackendDict.states), explorationBackendDict.title, explorationBackendDict.language_code);
        };
        return Exploration;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/exploration/ParamSpecObjectFactory.ts":
/*!******************************************************************************!*\
  !*** ./core/templates/dev/head/domain/exploration/ParamSpecObjectFactory.ts ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of ParamSpec
 * domain objects.
 */
__webpack_require__(/*! domain/exploration/ParamTypeObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/ParamTypeObjectFactory.ts");
oppia.factory('ParamSpecObjectFactory', [
    'ParamTypeObjectFactory',
    function (ParamTypeObjectFactory) {
        /**
         * @constructor
         * @param {!ParamType} objType - The type of the parameter.
         */
        var ParamSpec = function (objType) {
            /** @member {ParamType} */
            this._objType = objType;
        };
        /** @returns {ParamType} - The type name of the parameter. */
        ParamSpec.prototype.getType = function () {
            return this._objType;
        };
        /** @returns {{obj_type: String}} - Basic dict for backend consumption. */
        ParamSpec.prototype.toBackendDict = function () {
            return {
                obj_type: this._objType.getName(),
            };
        };
        /**
         * @param {!{obj_type: String}} paramSpecBackendDict - Basic dict from
         *    backend.
         * @returns {ParamSpec} - A new ParamSpec instance.
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ParamSpec['createFromBackendDict'] = function (paramSpecBackendDict) {
            /* eslint-enable dot-notation */
            return new ParamSpec(ParamTypeObjectFactory.getTypeFromBackendName(paramSpecBackendDict.obj_type));
        };
        /** @returns {ParamSpec} - A default instance for ParamSpec. */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ParamSpec['createDefault'] = function () {
            /* eslint-enable dot-notation */
            return new ParamSpec(ParamTypeObjectFactory.getDefaultType());
        };
        return ParamSpec;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/exploration/ParamSpecsObjectFactory.ts":
/*!*******************************************************************************!*\
  !*** ./core/templates/dev/head/domain/exploration/ParamSpecsObjectFactory.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of ParamSpecs
 * domain objects. ParamSpecs map parameter names to the specifications
 * which defines them (represented as ParamSpec objects).
 */
__webpack_require__(/*! domain/exploration/ParamSpecObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/ParamSpecObjectFactory.ts");
oppia.factory('ParamSpecsObjectFactory', [
    'ParamSpecObjectFactory',
    function (ParamSpecObjectFactory) {
        /**
         * @constructor
         * @param {Object.<String, ParamSpec>} paramDict - params and their specs
         *    for this object will hold.
         */
        var ParamSpecs = function (paramDict) {
            /** @member {Object.<String, ParamSpec>} */
            this._paramDict = paramDict;
        };
        /**
         * @param {String} paramName - The parameter to fetch.
         * @returns {ParamSpec} - associated to given parameter name.
         */
        ParamSpecs.prototype.getParamSpec = function (paramName) {
            return this._paramDict[paramName];
        };
        /**
         * @returns {Object.<String, ParamSpec>} - the map of params to their specs.
         */
        ParamSpecs.prototype.getParamDict = function () {
            return this._paramDict;
        };
        /** @returns {Array.<String>} - The names of the current parameter specs. */
        ParamSpecs.prototype.getParamNames = function () {
            return Object.keys(this._paramDict);
        };
        /**
         * Adds a new parameter only if it didn't exist already. Does nothing
         * otherwise.
         *
         * @param {!String} paramName - The parameter to add a spec for.
         * @param {ParamSpec=} paramSpec - The specification of the parameter.
         * @returns {Boolean} - True when the parameter was newly added.
         */
        ParamSpecs.prototype.addParamIfNew = function (paramName, paramSpec) {
            if (!this._paramDict.hasOwnProperty(paramName)) {
                this._paramDict[paramName] =
                    paramSpec || ParamSpecObjectFactory.createDefault();
                return true;
            }
            return false;
        };
        /**
         * @callback callback - Is passed the name and corresponding ParamSpec of
         *    each parameter in the specs.
         */
        ParamSpecs.prototype.forEach = function (callback) {
            var that = this;
            this.getParamNames().forEach(function (paramName) {
                callback(paramName, that.getParamSpec(paramName));
            });
        };
        /**
         * @returns {Object.<String, {obj_type: String}>} - Basic dict for backend
         *    consumption.
         */
        ParamSpecs.prototype.toBackendDict = function () {
            var paramSpecsBackendDict = {};
            this.forEach(function (paramName, paramSpec) {
                paramSpecsBackendDict[paramName] = paramSpec.toBackendDict();
            });
            return paramSpecsBackendDict;
        };
        /**
         * @param {!Object.<String, {obj_type: String}>} paramSpecsBackendDict -
         *    Basic dict of backend representation.
         * @returns {ParamSpecs} - An instance with properties from the backend
         *    dict.
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ParamSpecs['createFromBackendDict'] = function (paramSpecsBackendDict) {
            /* eslint-enable dot-notation */
            var paramDict = {};
            Object.keys(paramSpecsBackendDict).forEach(function (paramName) {
                paramDict[paramName] = ParamSpecObjectFactory.createFromBackendDict(paramSpecsBackendDict[paramName]);
            });
            return new ParamSpecs(paramDict);
        };
        return ParamSpecs;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/exploration/ParamTypeObjectFactory.ts":
/*!******************************************************************************!*\
  !*** ./core/templates/dev/head/domain/exploration/ParamTypeObjectFactory.ts ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of ParamType
 * domain objects.
 */
oppia.factory('ParamTypeObjectFactory', [function () {
        /**
         * @private @constructor
         * Defines a specific type that a parameter can take.
         *
         * IMPORTANT: All new types must be created in this file and registered in the
         * {@link ParamType.registry}. See {@link ParamType.registry.UnicodeString}
         * for an example.
         *
         * @param {Function.<?, Boolean>} validateFunction - Returns true when a value
         *    is valid.
         * @param {?} defaultValue - simple value any parameter of this type can take.
         */
        var ParamType = function (typeDefinitionObject) {
            if (!typeDefinitionObject.validate(typeDefinitionObject.default_value)) {
                throw new Error('The default value is invalid according to validation function');
            }
            /** @member {String} */
            this._name = null;
            /** @member {Function.<?, Boolean>} */
            this.valueIsValid = typeDefinitionObject.validate;
            /** @member {?} */
            this.defaultValue = typeDefinitionObject.default_value;
        };
        // Instance methods.
        /** @returns {?} - A valid default value for this particular type. */
        ParamType.prototype.createDefaultValue = function () {
            return angular.copy(this.defaultValue);
        };
        /** @returns {String} - The display-name of this type. */
        ParamType.prototype.getName = function () {
            return this._name;
        };
        // Class methods.
        /**
         * @param {String} backendName - the name of the type to fetch.
         * @returns {ParamType} - The associated type, if any.
         * @throws {Error} - When the given type name isn't registered.
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ParamType['getTypeFromBackendName'] = function (backendName) {
            /* eslint-enable dot-notation */
            // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
            /* eslint-disable dot-notation */
            if (!ParamType['registry'].hasOwnProperty(backendName)) {
                /* eslint-enable dot-notation */
                throw new Error(backendName + ' is not a registered parameter type.');
            }
            // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
            /* eslint-disable dot-notation */
            return ParamType['registry'][backendName];
            /* eslint-enable dot-notation */
        };
        /** @returns {ParamType} - Implementation-defined default parameter type. */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ParamType['getDefaultType'] = function () {
            /* eslint-enable dot-notation */
            // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
            /* eslint-disable dot-notation */
            return ParamType['registry'].UnicodeString;
            /* eslint-enable dot-notation */
        };
        // Type registration.
        /** @type {Object.<String, ParamType>} */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ParamType['registry'] = {
            /* eslint-enable dot-notation */
            UnicodeString: new ParamType({
                validate: function (value) {
                    return (typeof value === 'string' || value instanceof String);
                },
                default_value: ''
            })
        };
        // To finalize type registration, we encode the name of each type into their
        // definition, then freeze them from modifications.
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Object.keys(ParamType['registry']).forEach(function (paramTypeName) {
            /* eslint-enable dot-notation */
            // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
            /* eslint-disable dot-notation */
            var paramType = ParamType['registry'][paramTypeName];
            /* eslint-enable dot-notation */
            paramType._name = paramTypeName;
            Object.freeze(paramType);
        });
        // Finally, we freeze the registry itself.
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Object.freeze(ParamType['registry']);
        /* eslint-enable dot-notation */
        return ParamType;
    }]);


/***/ }),

/***/ "./core/templates/dev/head/domain/question/PretestQuestionBackendApiService.ts":
/*!*************************************************************************************!*\
  !*** ./core/templates/dev/head/domain/question/PretestQuestionBackendApiService.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to receive questions as pretests for an exploration.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.constant('PRETEST_QUESTIONS_URL_TEMPLATE', '/pretest_handler/<exploration_id>?story_id=<story_id>&cursor=<cursor>');
oppia.factory('PretestQuestionBackendApiService', [
    '$http', '$q', 'UrlInterpolationService', 'PRETEST_QUESTIONS_URL_TEMPLATE',
    function ($http, $q, UrlInterpolationService, PRETEST_QUESTIONS_URL_TEMPLATE) {
        var _cursor = '';
        var _fetchPretestQuestions = function (explorationId, storyId, successCallback, errorCallback) {
            if (!storyId) {
                successCallback([]);
                return;
            }
            var pretestDataUrl = UrlInterpolationService.interpolateUrl(PRETEST_QUESTIONS_URL_TEMPLATE, {
                exploration_id: explorationId,
                story_id: storyId,
                cursor: _cursor
            });
            $http.get(pretestDataUrl).then(function (response) {
                var pretestQuestionDicts = angular.copy(response.data.pretest_question_dicts);
                _cursor = response.data.next_start_cursor;
                if (successCallback) {
                    successCallback(pretestQuestionDicts);
                }
            }, function (errorResponse) {
                if (errorCallback) {
                    errorCallback(errorResponse.data);
                }
            });
        };
        return {
            fetchPretestQuestions: function (explorationId, storyId) {
                return $q(function (resolve, reject) {
                    _fetchPretestQuestions(explorationId, storyId, resolve, reject);
                });
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/question/QuestionObjectFactory.ts":
/*!**************************************************************************!*\
  !*** ./core/templates/dev/head/domain/question/QuestionObjectFactory.ts ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating and mutating instances of frontend
 * question domain objects.
 */
__webpack_require__(/*! domain/state/StateObjectFactory.ts */ "./core/templates/dev/head/domain/state/StateObjectFactory.ts");
oppia.factory('QuestionObjectFactory', [
    'StateObjectFactory', 'INTERACTION_SPECS',
    function (StateObjectFactory, INTERACTION_SPECS) {
        var Question = function (id, stateData, languageCode, version) {
            this._id = id;
            this._stateData = stateData;
            this._languageCode = languageCode;
            this._version = version;
        };
        // Instance methods
        Question.prototype.getId = function () {
            return this._id;
        };
        Question.prototype.getStateData = function () {
            return this._stateData;
        };
        Question.prototype.setStateData = function (newStateData) {
            this._stateData = angular.copy(newStateData);
        };
        Question.prototype.getLanguageCode = function () {
            return this._languageCode;
        };
        Question.prototype.setLanguageCode = function (languageCode) {
            this._languageCode = languageCode;
        };
        Question.prototype.getVersion = function () {
            return this._version;
        };
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Question['createDefaultQuestion'] = function () {
            /* eslint-enable dot-notation */
            return new Question(null, StateObjectFactory.createDefaultState(null), constants.DEFAULT_LANGUAGE_CODE, 1);
        };
        Question.prototype.validate = function (misconceptions) {
            var interaction = this._stateData.interaction;
            if (interaction.id === null) {
                return 'An interaction must be specified';
            }
            if (interaction.hints.length === 0) {
                return 'At least 1 hint should be specfied';
            }
            if (!interaction.solution &&
                INTERACTION_SPECS[interaction.id].can_have_solution) {
                return 'A solution must be specified';
            }
            var answerGroups = this._stateData.interaction.answerGroups;
            var taggedMisconceptionIds = {};
            var atLeastOneAnswerCorrect = false;
            for (var i = 0; i < answerGroups.length; i++) {
                if (answerGroups[i].outcome.labelledAsCorrect) {
                    atLeastOneAnswerCorrect = true;
                    continue;
                }
                if (answerGroups[i].taggedMisconceptionId !== null) {
                    taggedMisconceptionIds[answerGroups[i].taggedMisconceptionId] = true;
                }
            }
            if (!atLeastOneAnswerCorrect) {
                return 'At least one answer should be marked correct';
            }
            var pendingMisconceptionNamesToTag = [];
            for (var i = 0; i < misconceptions.length; i++) {
                if (!taggedMisconceptionIds[misconceptions[i].getId()]) {
                    pendingMisconceptionNamesToTag.push(misconceptions[i].getName());
                }
            }
            if (pendingMisconceptionNamesToTag.length > 0) {
                var returnString = 'The following misconceptions should also be caught:';
                pendingMisconceptionNamesToTag.forEach(function (misconceptionName) {
                    returnString = returnString + ' ' + misconceptionName + ',';
                });
                returnString = returnString.slice(0, -1);
                returnString = returnString + '. Click on (or create) an answer ' +
                    'that is neither marked correct nor is a default answer (marked ' +
                    'above as [All other answers]) to tag a misconception to that ' +
                    'answer group.';
                return returnString;
            }
            return false;
        };
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Question['createFromBackendDict'] = function (questionBackendDict) {
            /* eslint-enable dot-notation */
            return new Question(questionBackendDict.id, StateObjectFactory.createFromBackendDict('question', questionBackendDict.question_state_data), questionBackendDict.language_code, questionBackendDict.version);
        };
        Question.prototype.toBackendDict = function (isNewQuestion) {
            var questionBackendDict = {
                id: null,
                question_state_data: this._stateData.toBackendDict(),
                language_code: this._languageCode,
                version: 1
            };
            if (!isNewQuestion) {
                questionBackendDict.id = this._id;
                questionBackendDict.version = this._version;
            }
            return questionBackendDict;
        };
        return Question;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/skill/ConceptCardBackendApiService.ts":
/*!******************************************************************************!*\
  !*** ./core/templates/dev/head/domain/skill/ConceptCardBackendApiService.ts ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to retrieve read only information
 * about the concept card of a skill from the backend.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.constant('CONCEPT_CARD_DATA_URL_TEMPLATE', '/concept_card_handler/<skill_id>');
oppia.factory('ConceptCardBackendApiService', [
    '$http', '$q', 'UrlInterpolationService', 'CONCEPT_CARD_DATA_URL_TEMPLATE',
    function ($http, $q, UrlInterpolationService, CONCEPT_CARD_DATA_URL_TEMPLATE) {
        // Maps previously loaded concept cards to their IDs.
        var _conceptCardCache = [];
        var _fetchConceptCard = function (skillId, successCallback, errorCallback) {
            var conceptCardDataUrl = UrlInterpolationService.interpolateUrl(CONCEPT_CARD_DATA_URL_TEMPLATE, {
                skill_id: skillId
            });
            $http.get(conceptCardDataUrl).then(function (response) {
                var conceptCard = angular.copy(response.data.concept_card_dict);
                if (successCallback) {
                    successCallback(conceptCard);
                }
            }, function (errorResponse) {
                if (errorCallback) {
                    errorCallback(errorResponse.data);
                }
            });
        };
        var _isCached = function (skillId) {
            return _conceptCardCache.hasOwnProperty(skillId);
        };
        return {
            /**
             * Retrieves the concept card of a skill from the backend given a skill
             * ID. This returns a promise object that allows a success and rejection
             * callbacks to be registered. If the concept card is successfully loaded
             * and a success callback function is provided to the promise object, the
             * success callback is called with the concept card passed in as a
             * parameter. If something goes wrong while trying to fetch the
             * concept card, the rejection callback is called instead, if present. The
             * rejection callback function is passed the error that occurred and the
             * skill ID.
             */
            fetchConceptCard: function (skillId) {
                return $q(function (resolve, reject) {
                    _fetchConceptCard(skillId, resolve, reject);
                });
            },
            /**
             * Behaves in the exact same way as fetchConceptCard (including callback
             * behavior and returning a promise object), except this function will
             * attempt to see whether the given concept card has already been loaded.
             * If it has not yet been loaded, it will fetch the concept card from the
             * backend. If it successfully retrieves the concept card from the
             * backend, it will store it in the cache to avoid requests from the
             * backend in further function calls.
             */
            loadConceptCard: function (skillId) {
                return $q(function (resolve, reject) {
                    if (_isCached(skillId)) {
                        if (resolve) {
                            resolve(angular.copy(_conceptCardCache[skillId]));
                        }
                    }
                    else {
                        _fetchConceptCard(skillId, function (conceptCard) {
                            // Save the fetched conceptCard to avoid future fetches.
                            _conceptCardCache[skillId] = conceptCard;
                            if (resolve) {
                                resolve(angular.copy(conceptCard));
                            }
                        }, reject);
                    }
                });
            },
            /**
             * Returns whether the given concept card is stored within the local data
             * cache or if it needs to be retrieved from the backend upon a laod.
             */
            isCached: function (skillId) {
                return _isCached(skillId);
            },
            /**
             * Replaces the current concept card in the cache given by the specified
             * skill ID with a new concept card object.
             */
            cacheConceptCard: function (skillId, conceptCard) {
                _conceptCardCache[skillId] = angular.copy(conceptCard);
            },
            /**
             * Clears the local concept card data cache, forcing all future loads to
             * re-request the previously loaded concept cards from the backend.
             */
            clearConceptCardCache: function () {
                _conceptCardCache = [];
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/skill/ConceptCardObjectFactory.ts":
/*!**************************************************************************!*\
  !*** ./core/templates/dev/head/domain/skill/ConceptCardObjectFactory.ts ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Object factory for creating a front-end instance of a
 * concept card. In the backend, this is referred to as SkillContents.
 */
__webpack_require__(/*! domain/exploration/ContentIdsToAudioTranslationsObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/ContentIdsToAudioTranslationsObjectFactory.ts");
__webpack_require__(/*! domain/exploration/SubtitledHtmlObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/SubtitledHtmlObjectFactory.ts");
oppia.factory('ConceptCardObjectFactory', [
    'ContentIdsToAudioTranslationsObjectFactory', 'SubtitledHtmlObjectFactory',
    'COMPONENT_NAME_EXPLANATION',
    function (ContentIdsToAudioTranslationsObjectFactory, SubtitledHtmlObjectFactory, COMPONENT_NAME_EXPLANATION) {
        var ConceptCard = function (explanation, workedExamples, contentIdsToAudioTranslations) {
            this._explanation = explanation;
            this._workedExamples = workedExamples;
            this._contentIdsToAudioTranslations = contentIdsToAudioTranslations;
        };
        ConceptCard.prototype.toBackendDict = function () {
            return {
                explanation: this._explanation.toBackendDict(),
                worked_examples: this._workedExamples.map(function (workedExample) {
                    return workedExample.toBackendDict();
                }),
                content_ids_to_audio_translations: this._contentIdsToAudioTranslations.toBackendDict()
            };
        };
        var _generateWorkedExamplesFromBackendDict = function (workedExampleDicts) {
            return workedExampleDicts.map(function (workedExampleDict) {
                return SubtitledHtmlObjectFactory.createFromBackendDict(workedExampleDict);
            });
        };
        var _getElementsInFirstSetButNotInSecond = function (setA, setB) {
            var diffList = Array.from(setA).filter(function (element) {
                return !setB.has(element);
            });
            return diffList;
        };
        var _extractAvailableContentIdsFromWorkedExamples = function (workedExamples) {
            var contentIds = new Set();
            workedExamples.forEach(function (workedExample) {
                contentIds.add(workedExample.getContentId());
            });
            return contentIds;
        };
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ConceptCard['createFromBackendDict'] = function (conceptCardBackendDict) {
            /* eslint-enable dot-notation */
            return new ConceptCard(SubtitledHtmlObjectFactory.createFromBackendDict(conceptCardBackendDict.explanation), _generateWorkedExamplesFromBackendDict(conceptCardBackendDict.worked_examples), ContentIdsToAudioTranslationsObjectFactory.createFromBackendDict(conceptCardBackendDict.content_ids_to_audio_translations));
        };
        ConceptCard.prototype.getExplanation = function () {
            return this._explanation;
        };
        ConceptCard.prototype.setExplanation = function (explanation) {
            this._explanation = explanation;
        };
        ConceptCard.prototype.getWorkedExamples = function () {
            return this._workedExamples.slice();
        };
        ConceptCard.prototype.setWorkedExamples = function (workedExamples) {
            var oldContentIds = _extractAvailableContentIdsFromWorkedExamples(this._workedExamples);
            this._workedExamples = workedExamples.slice();
            var newContentIds = _extractAvailableContentIdsFromWorkedExamples(this._workedExamples);
            var contentIdsToDelete = _getElementsInFirstSetButNotInSecond(oldContentIds, newContentIds);
            var contentIdsToAdd = _getElementsInFirstSetButNotInSecond(newContentIds, oldContentIds);
            for (var i = 0; i < contentIdsToDelete.length; i++) {
                this._contentIdsToAudioTranslations.deleteContentId(contentIdsToDelete[i]);
            }
            for (var i = 0; i < contentIdsToAdd.length; i++) {
                this._contentIdsToAudioTranslations.addContentId(contentIdsToAdd[i]);
            }
        };
        ConceptCard.prototype.getContentIdsToAudioTranslations = function () {
            return this._contentIdsToAudioTranslations;
        };
        // Create an interstitial concept card that would be displayed in the
        // editor until the actual skill is fetched from the backend.
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ConceptCard['createInterstitialConceptCard'] = function () {
            /* eslint-enable dot-notation */
            var contentIdsToAudioTranslationsDict = {};
            contentIdsToAudioTranslationsDict[COMPONENT_NAME_EXPLANATION] = {};
            return new ConceptCard(SubtitledHtmlObjectFactory.createDefault('Loading review material', COMPONENT_NAME_EXPLANATION), [], ContentIdsToAudioTranslationsObjectFactory.createFromBackendDict(contentIdsToAudioTranslationsDict));
        };
        return ConceptCard;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/state_card/StateCardObjectFactory.ts":
/*!*****************************************************************************!*\
  !*** ./core/templates/dev/head/domain/state_card/StateCardObjectFactory.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of State
 * card domain objects used in the exploration player.
 */
__webpack_require__(/*! pages/exploration_player/AudioTranslationLanguageService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationLanguageService.ts");
__webpack_require__(/*! services/ExplorationHtmlFormatterService.ts */ "./core/templates/dev/head/services/ExplorationHtmlFormatterService.ts");
oppia.factory('StateCardObjectFactory', [
    'AudioTranslationLanguageService', 'ExplorationHtmlFormatterService',
    'INTERACTION_DISPLAY_MODE_INLINE', 'INTERACTION_SPECS',
    function (AudioTranslationLanguageService, ExplorationHtmlFormatterService, INTERACTION_DISPLAY_MODE_INLINE, INTERACTION_SPECS) {
        var StateCard = function (stateName, contentHtml, interactionHtml, interaction, inputResponsePairs, recordedVoiceovers, contentId) {
            this._stateName = stateName;
            this._contentHtml = contentHtml;
            this._interactionHtml = interactionHtml;
            this._inputResponsePairs = inputResponsePairs;
            this._interaction = interaction;
            this._recordedVoiceovers = recordedVoiceovers;
            this._contentId = contentId;
            this._completed = false;
        };
        StateCard.prototype.getStateName = function () {
            return this._stateName;
        };
        StateCard.prototype.getInteraction = function () {
            return this._interaction;
        };
        StateCard.prototype.getVoiceovers = function () {
            var recordedVoiceovers = this._recordedVoiceovers;
            var contentId = this._contentId;
            if (recordedVoiceovers) {
                return recordedVoiceovers.getBindableVoiceovers(contentId);
            }
            return [];
        };
        StateCard.prototype.getRecordedVoiceovers = function () {
            return this._recordedVoiceovers;
        };
        StateCard.prototype.isContentAudioTranslationAvailable = function () {
            return Object.keys(this.getVoiceovers()).length > 0 ||
                AudioTranslationLanguageService.isAutogeneratedAudioAllowed();
        },
            StateCard.prototype.getInteractionId = function () {
                if (this.getInteraction()) {
                    return this.getInteraction().id;
                }
                return null;
            };
        StateCard.prototype.isTerminal = function () {
            var interactionId = this.getInteractionId();
            return (interactionId && INTERACTION_SPECS[interactionId].is_terminal);
        };
        StateCard.prototype.getHints = function () {
            return this.getInteraction().hints;
        };
        StateCard.prototype.getSolution = function () {
            return this.getInteraction().solution;
        };
        StateCard.prototype.doesInteractionSupportHints = function () {
            var interactionId = this.getInteractionId();
            return (!INTERACTION_SPECS[interactionId].is_terminal &&
                !INTERACTION_SPECS[interactionId].is_linear);
        };
        StateCard.prototype.isCompleted = function () {
            return this._completed;
        };
        StateCard.prototype.markAsCompleted = function () {
            this._completed = true;
        };
        StateCard.prototype.markAsNotCompleted = function () {
            this._completed = false;
        };
        StateCard.prototype.getInteractionInstructions = function () {
            var interactionId = this.getInteractionId();
            return (interactionId ? INTERACTION_SPECS[interactionId].instructions : '');
        };
        StateCard.prototype.getInteractionCustomizationArgs = function () {
            var interaction = this.getInteraction();
            if (!interaction) {
                return null;
            }
            return interaction.customizationArgs;
        };
        StateCard.prototype.isInteractionInline = function () {
            var interactionId = this.getInteractionId();
            return (!interactionId ||
                INTERACTION_SPECS[interactionId].display_mode ===
                    INTERACTION_DISPLAY_MODE_INLINE);
        };
        StateCard.prototype.getContentHtml = function () {
            return this._contentHtml;
        };
        StateCard.prototype.getInteractionHtml = function () {
            return this._interactionHtml;
        };
        StateCard.prototype.getOppiaResponse = function (index) {
            return this._inputResponsePairs[index].oppiaResponse;
        };
        StateCard.prototype.getInputResponsePairs = function () {
            return this._inputResponsePairs;
        };
        StateCard.prototype.getLastInputResponsePair = function () {
            if (this._inputResponsePairs.length === 0) {
                return null;
            }
            return this._inputResponsePairs[this._inputResponsePairs.length - 1];
        };
        StateCard.prototype.getLastAnswer = function () {
            if (this.getLastInputResponsePair() === null) {
                return null;
            }
            return this.getLastInputResponsePair().learnerInput;
        };
        StateCard.prototype.getLastOppiaResponse = function () {
            if (this.getLastInputResponsePair() === null) {
                return null;
            }
            return this.getLastInputResponsePair().oppiaResponse;
        };
        StateCard.prototype.addInputResponsePair = function (inputResponsePair) {
            this._inputResponsePairs.push(angular.copy(inputResponsePair));
        };
        StateCard.prototype.setLastOppiaResponse = function (response) {
            this._inputResponsePairs[this._inputResponsePairs.length - 1].oppiaResponse = response;
        };
        StateCard.prototype.setInteractionHtml = function (interactionHtml) {
            this._interactionHtml = interactionHtml;
        };
        /**
         * @param {string} stateName - The state name for the current card.
         * @param {string} contentHtml - The HTML string for the content displayed
         *        on the content card.
         * @param {string} interactionHtml - The HTML that calls the interaction
         *        directive for the current card.
         * @param {Interaction} interaction - An interaction object that stores all
         *        the properties of the card's interaction.
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        StateCard['createNewCard'] = function (
        /* eslint-enable dot-notation */
        stateName, contentHtml, interactionHtml, interaction, recordedVoiceovers, contentId) {
            return new StateCard(stateName, contentHtml, interactionHtml, interaction, [], recordedVoiceovers, contentId);
        };
        return StateCard;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/statistics/LearnerActionObjectFactory.ts":
/*!*********************************************************************************!*\
  !*** ./core/templates/dev/head/domain/statistics/LearnerActionObjectFactory.ts ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of Learner
 *     Action domain objects.
 */
oppia.constant('LEARNER_ACTION_SCHEMA_LATEST_VERSION', 1);
oppia.factory('LearnerActionObjectFactory', [
    'LEARNER_ACTION_SCHEMA_LATEST_VERSION',
    function (LEARNER_ACTION_SCHEMA_LATEST_VERSION) {
        /**
         * @constructor
         * @param {string} actionType - type of an action.
         * @param {Object.<string, *>} actionCustomizationArgs - customization dict
         *   for an action.
         * @param {number} schemaVersion - schema version of the class instance.
         */
        var LearnerAction = function (actionType, actionCustomizationArgs, schemaVersion) {
            if (schemaVersion < 1) {
                throw new Error('given invalid schema version');
            }
            /** @type {string} */
            this.actionType = actionType;
            /** @type {Object.<string, *>} */
            this.actionCustomizationArgs = actionCustomizationArgs;
            /** @type {number} */
            this.schemaVersion = schemaVersion;
        };
        /**
         * @property {string} actionType - type of an action
         * @property {Object.<string, *>} actionCustomizationArgs - customization
         *   dict for an action
         * @property {number} [schemaVersion=LEARNER_ACTION_SCHEMA_LATEST_VERSION]
         *   - schema version of the class instance.
         * @returns {LearnerAction}
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        LearnerAction['createNew'] = function (
        /* eslint-enable dot-notation */
        actionType, actionCustomizationArgs, schemaVersion) {
            schemaVersion = schemaVersion || LEARNER_ACTION_SCHEMA_LATEST_VERSION;
            return new LearnerAction(actionType, actionCustomizationArgs, schemaVersion);
        };
        /**
         * @typedef LearnerActionBackendDict
         * @property {string} actionType - type of an action.
         * @property {Object.<string, *>} actionCustomizationArgs - customization
         *   dict for an action.
         * @property {number} schemaVersion - schema version of the class instance.
         *   Defaults to the latest schema version.
         */
        /**
         * @param {LearnerActionBackendDict} learnerActionBackendDict
         * @returns {LearnerAction}
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        LearnerAction['createFromBackendDict'] = function (
        /* eslint-enable dot-notation */
        learnerActionBackendDict) {
            return new LearnerAction(learnerActionBackendDict.action_type, learnerActionBackendDict.action_customization_args, learnerActionBackendDict.schema_version);
        };
        /** @returns {LearnerActionBackendDict} */
        LearnerAction.prototype.toBackendDict = function () {
            return {
                action_type: this.actionType,
                action_customization_args: this.actionCustomizationArgs,
                schema_version: this.schemaVersion,
            };
        };
        return LearnerAction;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/statistics/PlaythroughIssueObjectFactory.ts":
/*!************************************************************************************!*\
  !*** ./core/templates/dev/head/domain/statistics/PlaythroughIssueObjectFactory.ts ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of Exploration
 *     Issue domain objects.
 */
oppia.factory('PlaythroughIssueObjectFactory', [function () {
        /**
         * @constructor
         * @param {string} issueType - type of an issue.
         * @param {Object.<string, *>} issueCustomizationArgs - customization dict for
         *   an issue.
         * @param {string[]} playthroughIds - list of playthrough IDs.
         * @param {number} schemaVersion - schema version of the class instance.
         * @param {boolean} isValid - whether the issue is valid.
         */
        var ExplorationIssue = function (issueType, issueCustomizationArgs, playthroughIds, schemaVersion, isValid) {
            /** @type {string} */
            this.issueType = issueType;
            /** @type {Object.<string, *>} */
            this.issueCustomizationArgs = issueCustomizationArgs;
            /** @type {string[]} */
            this.playthroughIds = playthroughIds;
            /** @type {number} */
            this.schemaVersion = schemaVersion;
            /** @type {boolean} */
            this.isValid = isValid;
        };
        /**
         * @typedef ExplorationIssueBackendDict
         * @property {string} issueType - type of an issue.
         * @property {Object.<string, *>} issueCustomizationArgs - customization dict
         *   for an issue.
         * @property {string[]} playthroughIds - list of playthrough IDs.
         * @property {number} schemaVersion - schema version of the class instance.
         * @property {boolean} isValid - whether the issue is valid.
         */
        /**
         * @param {ExplorationIssueBackendDict} explorationIssueBackendDict
         * @returns {ExplorationIssue}
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ExplorationIssue['createFromBackendDict'] = function (
        /* eslint-enable dot-notation */
        explorationIssueBackendDict) {
            return new ExplorationIssue(explorationIssueBackendDict.issue_type, explorationIssueBackendDict.issue_customization_args, explorationIssueBackendDict.playthrough_ids, explorationIssueBackendDict.schema_version, explorationIssueBackendDict.is_valid);
        };
        /**
         * @returns {ExplorationIssueBackendDict}
         */
        ExplorationIssue.prototype.toBackendDict = function () {
            return {
                issue_type: this.issueType,
                issue_customization_args: this.issueCustomizationArgs,
                playthrough_ids: this.playthroughIds,
                schema_version: this.schemaVersion,
                is_valid: this.isValid
            };
        };
        return ExplorationIssue;
    }]);


/***/ }),

/***/ "./core/templates/dev/head/domain/statistics/PlaythroughObjectFactory.ts":
/*!*******************************************************************************!*\
  !*** ./core/templates/dev/head/domain/statistics/PlaythroughObjectFactory.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Factory for creating new frontend instances of Playthrough
 *     domain objects.
 */
__webpack_require__(/*! domain/statistics/LearnerActionObjectFactory.ts */ "./core/templates/dev/head/domain/statistics/LearnerActionObjectFactory.ts");
oppia.factory('PlaythroughObjectFactory', [
    'LearnerActionObjectFactory', function (LearnerActionObjectFactory) {
        /**
         * @constructor
         * @param {string} playthroughId - ID of a playthrough.
         * @param {string} expId - ID of an exploration.
         * @param {number} expVersion - Version of an exploration.
         * @param {string} issueType - type of an issue.
         * @param {Object.<string, *>} issueCustomizationArgs - customization dict
         *   for an issue.
         * @param {LearnerAction[]} actions - list of learner actions.
         */
        var Playthrough = function (playthroughId, expId, expVersion, issueType, issueCustomizationArgs, actions) {
            /** @type {string} */
            this.playthroughId = playthroughId;
            /** @type {string} */
            this.expId = expId;
            /** @type {number} */
            this.expVersion = expVersion;
            /** @type {string} */
            this.issueType = issueType;
            /** @type {Object.<string, *>} */
            this.issueCustomizationArgs = issueCustomizationArgs;
            /** @type {LearnerAction[]} */
            this.actions = actions;
        };
        /**
         * @param {string} playthroughId - ID of a playthrough.
         * @param {string} expId - ID of an exploration.
         * @param {number} expVersion - Version of an exploration.
         * @param {string} issueType - type of an issue.
         * @param {Object.<string, *>} issueCustomizationArgs - customization dict
         *   for an issue.
         * @param {LearnerAction[]} actions - list of learner actions.
         * @returns {Playthrough}
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Playthrough['createNew'] = function (
        /* eslint-enable dot-notation */
        playthroughId, expId, expVersion, issueType, issueCustomizationArgs, actions) {
            return new Playthrough(playthroughId, expId, expVersion, issueType, issueCustomizationArgs, actions);
        };
        /**
         * @typedef PlaythroughBackendDict
         * @property {string} playthroughId - ID of a playthrough.
         * @property {string} expId - ID of an exploration.
         * @property {number} expVersion - Version of an exploration.
         * @property {string} issueType - type of an issue.
         * @property {Object.<string, *>} issueCustomizationArgs - customization
         *   dict for an issue.
         * @property {LearnerAction[]} actions - list of learner actions.
         */
        /**
         * @typedef
         * @param {PlaythroughBackendDict} playthroughBackendDict
         * @returns {Playthrough}
         */
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        Playthrough['createFromBackendDict'] = function (playthroughBackendDict) {
            /* eslint-enable dot-notation */
            var actions = playthroughBackendDict.actions.map(LearnerActionObjectFactory.createFromBackendDict);
            return new Playthrough(playthroughBackendDict.playthrough_id, playthroughBackendDict.exp_id, playthroughBackendDict.exp_version, playthroughBackendDict.issue_type, playthroughBackendDict.issue_customization_args, actions);
        };
        /** @returns {PlaythroughBackendDict} */
        Playthrough.prototype.toBackendDict = function () {
            var actionDicts = this.actions.map(function (action) {
                return action.toBackendDict();
            });
            return {
                id: this.playthroughId,
                exp_id: this.expId,
                exp_version: this.expVersion,
                issue_type: this.issueType,
                issue_customization_args: this.issueCustomizationArgs,
                actions: actionDicts
            };
        };
        return Playthrough;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/summary/ExplorationSummaryBackendApiService.ts":
/*!***************************************************************************************!*\
  !*** ./core/templates/dev/head/domain/summary/ExplorationSummaryBackendApiService.ts ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2016 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to retrieve information about exploration summaries
 * from the backend.
 */
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
__webpack_require__(/*! services/ValidatorsService.ts */ "./core/templates/dev/head/services/ValidatorsService.ts");
oppia.factory('ExplorationSummaryBackendApiService', [
    '$http', '$q', 'AlertsService',
    'ValidatorsService', 'EXPLORATION_SUMMARY_DATA_URL_TEMPLATE',
    function ($http, $q, AlertsService, ValidatorsService, EXPLORATION_SUMMARY_DATA_URL_TEMPLATE) {
        var _fetchExpSummaries = function (explorationIds, includePrivateExplorations, successCallback, errorCallback) {
            if (!explorationIds.every(ValidatorsService.isValidExplorationId)) {
                AlertsService.addWarning('Please enter a valid exploration ID.');
                var returnValue = [];
                for (var i = 0; i < explorationIds.length; i++) {
                    returnValue.push(null);
                }
                return $q.resolve(returnValue);
            }
            var explorationSummaryDataUrl = EXPLORATION_SUMMARY_DATA_URL_TEMPLATE;
            $http.get(explorationSummaryDataUrl, {
                params: {
                    stringified_exp_ids: JSON.stringify(explorationIds),
                    include_private_explorations: JSON.stringify(includePrivateExplorations)
                }
            }).then(function (response) {
                var summaries = angular.copy(response.data.summaries);
                if (successCallback) {
                    successCallback(summaries);
                }
            }, function (errorResponse) {
                if (errorCallback) {
                    errorCallback(errorResponse.data);
                }
            });
        };
        return {
            /**
             * Fetches a list of public exploration summaries and private
             * exploration summaries for which the current user has access from the
             * backend for each exploration ID provided. The provided list of
             * exploration summaries are in the same order as input exploration IDs
             * list, though some may be missing (if the exploration doesn't exist or
             * or the user does not have access to it).
             */
            loadPublicAndPrivateExplorationSummaries: function (explorationIds) {
                return $q(function (resolve, reject) {
                    _fetchExpSummaries(explorationIds, true, resolve, reject);
                });
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/utilities/AudioFileObjectFactory.ts":
/*!****************************************************************************!*\
  !*** ./core/templates/dev/head/domain/utilities/AudioFileObjectFactory.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Object factory for creating audio files.
 */
oppia.factory('AudioFileObjectFactory', [
    function () {
        var AudioFile = function (filename, data) {
            this.filename = filename;
            this.data = data;
        };
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        AudioFile['createNew'] = function (filename, data) {
            /* eslint-enable dot-notation */
            return new AudioFile(filename, data);
        };
        return AudioFile;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/utilities/FileDownloadRequestObjectFactory.ts":
/*!**************************************************************************************!*\
  !*** ./core/templates/dev/head/domain/utilities/FileDownloadRequestObjectFactory.ts ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Object factory for creating audio files.
 */
oppia.factory('FileDownloadRequestObjectFactory', [
    function () {
        var FileDownloadRequest = function (filename, canceler) {
            this.filename = filename;
            this.canceler = canceler;
        };
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        FileDownloadRequest['createNew'] = function (filename, canceler) {
            /* eslint-enable dot-notation */
            return new FileDownloadRequest(filename, canceler);
        };
        return FileDownloadRequest;
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/domain/utilities/ImageFileObjectFactory.ts":
/*!****************************************************************************!*\
  !*** ./core/templates/dev/head/domain/utilities/ImageFileObjectFactory.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Object factory for creating image files.
 */
oppia.factory('ImageFileObjectFactory', [function () {
        var ImageFile = function (filename, data) {
            this.filename = filename;
            this.data = data;
        };
        // TODO (ankita240796) Remove the bracket notation once Angular2 gets in.
        /* eslint-disable dot-notation */
        ImageFile['createNew'] = function (filename, data) {
            /* eslint-enable dot-notation */
            return new ImageFile(filename, data);
        };
        return ImageFile;
    }]);


/***/ }),

/***/ "./core/templates/dev/head/domain/utilities/StopwatchObjectFactory.ts":
/*!****************************************************************************!*\
  !*** ./core/templates/dev/head/domain/utilities/StopwatchObjectFactory.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Object factory for creating stopwatches.
 */
// A simple service that provides stopwatch instances. Each stopwatch can be
// independently reset and queried for the current time.
oppia.factory('StopwatchObjectFactory', ['$log', function ($log) {
        var Stopwatch = function () {
            this.startTime = null;
        };
        Stopwatch.prototype = {
            _getCurrentTime: function () {
                return Date.now();
            },
            reset: function () {
                this.startTime = this._getCurrentTime();
            },
            getTimeInSecs: function () {
                if (this.startTime === null) {
                    $log.error('Tried to retrieve the elapsed time, but no start time was set.');
                    return null;
                }
                return (this._getCurrentTime() - this.startTime) / 1000;
            }
        };
        return {
            create: function () {
                return new Stopwatch();
            }
        };
    }]);


/***/ }),

/***/ "./core/templates/dev/head/expressions/ExpressionEvaluatorService.ts":
/*!***************************************************************************!*\
  !*** ./core/templates/dev/head/expressions/ExpressionEvaluatorService.ts ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// This file defines the evaluation engine as well as the system operators.
// The evaluator takes the output of the parser (i.e. parse tree) as defined in
// parser.pegjs and produces a javaScript primitive value when the evaluation is
// performed correctly.
// Two cases that can throw an exception (i.e. an Error object):
// - Variable look-up ('#' operator) failure. (ExprUndefinedVarError)
// - Wrong number of arguments in the node for the given operator.
//   (ExprWrongNumArgsError)
// Both errors are children of ExpressionError, so caller can use
// ExpressionError to catch only these expected error cases.
//
// An expression is evaluated in a context consisting of predefined system
// variables, system operators, and system functions. In the input language,
// operators are predefined set of characters in infix, postfix, or ternary
// format (there is currently no postfix operators) while functions have the
// form of function calls (e.g. "abs(10)"). In the parse tree, there is no
// difference between operators and functions. User defined parameters may
// override the meaning of system variables and functions (but not operators).
// Users also can define parameters with new names. Referencing a variable which
// is not defined as a system variable, system function, or user parameter will
// result in ExprUndefinedVarError to be thrown.
//
// All system variables, system operators, and system functions are defined
// as 'system' variable in this file.
//
// TODO(kashida): Split the following section into two:
//     - A general overview of operators (including some concrete examples)
//     - A numbered sequence of steps which a new contributor should follow in
//         order to define a new operator.
// Defining new operators and functions:
// Operators and functions are given an array of arguments which are already all
// evaluated. E.g. for an expression "1 + 2 * 3", the "+" plus operator receives
// values 1 and 6 (i.e. "2 * 3" already evaluated).
// The operators and functions should verify that the argument array
// has the required number of arguments. Operators and functions can coerse the
// input arguments to the desired typed values, or throw an exception if wrong
// type of argument is given.
// type of inputs. This does not prevent operators to eror on wrong parameter
// values (e.g. getting negative number for an index).
// When successful, operators and functions may return any valid JavaScript
// values. In general, an operator always returns the same type of value, but
// there are exceptions (e.g. "+" operator may return a number or a string
// depending on the types of the input arguments).
// Constraints on the input arguments (number, types, and any other
// constraints) as well as the output value and type should be documented.
__webpack_require__(/*! expressions/ExpressionParserService.js */ "./core/templates/dev/head/expressions/ExpressionParserService.js");
__webpack_require__(/*! expressions/ExpressionSyntaxTreeService.ts */ "./core/templates/dev/head/expressions/ExpressionSyntaxTreeService.ts");
// Service for expression evaluation.
oppia.factory('ExpressionEvaluatorService', [
    '$log', 'ExpressionParserService', 'ExpressionSyntaxTreeService',
    function ($log, ExpressionParserService, ExpressionSyntaxTreeService) {
        var evaluateExpression = function (expression, envs) {
            return ExpressionSyntaxTreeService.applyFunctionToParseTree(ExpressionParserService.parse(expression), envs, evaluate);
        };
        /**
         * @param {*} parsed Parse output from the parser. See parser.pegjs for
         *     the data structure.
         * @param {!Array.<!Object>} envs Represents a nested name space
         *     environment to look up the name in. The first element is looked up
         *     first (i.e. has higher precedence).
         */
        var evaluate = function (parsed, envs) {
            // The intermediate nodes of the parse tree are arrays. The terminal
            // nodes are JavaScript primitives (as described in the "Parser output"
            // section of parser.pegjs).
            if (parsed instanceof Array) {
                if (parsed.length === 0) {
                    throw 'Parser generated an intermediate node with zero children';
                }
                if (parsed[0] === '#') {
                    return ExpressionSyntaxTreeService.lookupEnvs(parsed[1], envs);
                }
                // Evaluate rest of the elements, i.e. the arguments.
                var args = parsed.slice(1).map(function (item) {
                    return evaluate(item, envs);
                });
                // The first element should be a function name.
                return ExpressionSyntaxTreeService.lookupEnvs(parsed[0], envs).eval(args);
            }
            // This should be a terminal node with the actual value.
            return parsed;
        };
        return {
            evaluate: evaluate,
            evaluateExpression: evaluateExpression,
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/expressions/ExpressionInterpolationService.ts":
/*!*******************************************************************************!*\
  !*** ./core/templates/dev/head/expressions/ExpressionInterpolationService.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for interpolating expressions.
 */
__webpack_require__(/*! components/forms/forms-unicode-filters/convert-html-to-unicode.filter.ts */ "./core/templates/dev/head/components/forms/forms-unicode-filters/convert-html-to-unicode.filter.ts");
__webpack_require__(/*! expressions/ExpressionEvaluatorService.ts */ "./core/templates/dev/head/expressions/ExpressionEvaluatorService.ts");
__webpack_require__(/*! expressions/ExpressionParserService.js */ "./core/templates/dev/head/expressions/ExpressionParserService.js");
__webpack_require__(/*! expressions/ExpressionSyntaxTreeService.ts */ "./core/templates/dev/head/expressions/ExpressionSyntaxTreeService.ts");
__webpack_require__(/*! services/HtmlEscaperService.ts */ "./core/templates/dev/head/services/HtmlEscaperService.ts");
// Interpolates an HTML or a unicode string containing expressions.
// The input value is evaluated against the supplied environments.
//
// Examples:
//   processHtml('abc{{a}}', [{'a': 'b'}]) gives 'abcb'.
//   processHtml('abc{{a}}', [{}]) returns null.
//   processHtml('abc', [{}]) returns 'abc'.
//   processHtml('{[a}}', [{'a': '<button></button>'}])
//     returns '&lt;button&gt;&lt;/button&gt;'.
//   processUnicode('abc{{a}}', [{'a': 'b'}]) gives 'abcb'.
//   processUnicode('abc{{a}}', [{}]) returns null.
//   processUnicode('{[a}}', [{'a': '<button></button>'}]) returns
//     '<button></button>'.
oppia.factory('ExpressionInterpolationService', [
    '$filter', 'ExpressionEvaluatorService', 'ExpressionParserService',
    'ExpressionSyntaxTreeService', 'HtmlEscaperService',
    function ($filter, ExpressionEvaluatorService, ExpressionParserService, ExpressionSyntaxTreeService, HtmlEscaperService) {
        return {
            // This method should only be used if its result would immediately be
            // displayed on the screen without passing through further computation.
            // It differs from other methods in this service in that it
            // auto-escapes the returned HTML, and returns an 'error' label if the
            // evaluation fails.
            processHtml: function (sourceHtml, envs) {
                return sourceHtml.replace(/{{([^}]*)}}/g, function (match, p1) {
                    try {
                        // TODO(sll): Remove the call to $filter once we have a
                        // custom UI for entering expressions. It is only needed because
                        // expressions are currently input inline via the RTE.
                        return HtmlEscaperService.unescapedStrToEscapedStr(ExpressionEvaluatorService.evaluateExpression($filter('convertHtmlToUnicode')(p1), envs));
                    }
                    catch (e) {
                        var EXPRESSION_ERROR_TAG = ('<oppia-expression-error-tag></oppia-expression-error-tag>');
                        if ((e instanceof ExpressionParserService.SyntaxError) ||
                            (e instanceof ExpressionSyntaxTreeService.ExpressionError)) {
                            return EXPRESSION_ERROR_TAG;
                        }
                        throw e;
                    }
                });
            },
            // Returns null if the evaluation fails.
            processUnicode: function (sourceUnicode, envs) {
                try {
                    return sourceUnicode.replace(/{{([^}]*)}}/g, function (match, p1) {
                        // TODO(sll): Remove the call to $filter once we have a
                        // custom UI for entering expressions. It is only needed because
                        // expressions are currently input inline via the RTE.
                        return ExpressionEvaluatorService.evaluateExpression($filter('convertHtmlToUnicode')(p1), envs);
                    });
                }
                catch (e) {
                    if ((e instanceof ExpressionParserService.SyntaxError) ||
                        (e instanceof ExpressionSyntaxTreeService.ExpressionError)) {
                        return null;
                    }
                    throw e;
                }
            },
            // This works for both unicode and HTML.
            getParamsFromString: function (sourceString) {
                var matches = sourceString.match(/{{([^}]*)}}/g) || [];
                var allParams = [];
                for (var i = 0; i < matches.length; i++) {
                    // Trim the '{{' and '}}'.
                    matches[i] = matches[i].substring(2, matches[i].length - 2);
                    var params = ExpressionSyntaxTreeService.getParamsUsedInExpression($filter('convertHtmlToUnicode')(matches[i]));
                    for (var j = 0; j < params.length; j++) {
                        if (allParams.indexOf(params[j]) === -1) {
                            allParams.push(params[j]);
                        }
                    }
                }
                return allParams.sort();
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/expressions/ExpressionParserService.js":
/*!************************************************************************!*\
  !*** ./core/templates/dev/head/expressions/ExpressionParserService.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

oppia.factory('ExpressionParserService', ['$log', function($log) {
  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function SyntaxError(message, expected, found, offset, line, column) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.offset   = offset;
    this.line     = line;
    this.column   = column;

    this.name     = "SyntaxError";
  }

  peg$subclass(SyntaxError, Error);

  function parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},

        peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = peg$FAILED,
        peg$c1 = function(expression) { return expression; },
        peg$c2 = { type: "any", description: "any character" },
        peg$c3 = { type: "other", description: "whitespace" },
        peg$c4 = /^[\t\x0B\f \xA0\uFEFF]/,
        peg$c5 = { type: "class", value: "[\\t\\x0B\\f \\xA0\\uFEFF]", description: "[\\t\\x0B\\f \\xA0\\uFEFF]" },
        peg$c6 = { type: "other", description: "identifier" },
        peg$c7 = void 0,
        peg$c8 = function(name) { return name; },
        peg$c9 = [],
        peg$c10 = function(start, parts) {
              return start + parts.join("");
            },
        peg$c11 = "$",
        peg$c12 = { type: "literal", value: "$", description: "\"$\"" },
        peg$c13 = "_",
        peg$c14 = { type: "literal", value: "_", description: "\"_\"" },
        peg$c15 = "\\",
        peg$c16 = { type: "literal", value: "\\", description: "\"\\\\\"" },
        peg$c17 = function(sequence) { return sequence; },
        peg$c18 = "\u200C",
        peg$c19 = { type: "literal", value: "\u200C", description: "\"\\u200C\"" },
        peg$c20 = function() { return "\u200C"; },
        peg$c21 = "\u200D",
        peg$c22 = { type: "literal", value: "\u200D", description: "\"\\u200D\"" },
        peg$c23 = function() { return "\u200D"; },
        peg$c24 = "null",
        peg$c25 = { type: "literal", value: "null", description: "\"null\"" },
        peg$c26 = function() { return null; },
        peg$c27 = "false",
        peg$c28 = { type: "literal", value: "false", description: "\"false\"" },
        peg$c29 = function() { return false; },
        peg$c30 = "true",
        peg$c31 = { type: "literal", value: "true", description: "\"true\"" },
        peg$c32 = function() { return true; },
        peg$c33 = { type: "other", description: "number" },
        peg$c34 = function(literal) {
              return literal;
            },
        peg$c35 = ".",
        peg$c36 = { type: "literal", value: ".", description: "\".\"" },
        peg$c37 = null,
        peg$c38 = function(parts) {
              return parseFloat(parts);
            },
        peg$c39 = function(parts) { return parseFloat(parts); },
        peg$c40 = "0",
        peg$c41 = { type: "literal", value: "0", description: "\"0\"" },
        peg$c42 = /^[0-9]/,
        peg$c43 = { type: "class", value: "[0-9]", description: "[0-9]" },
        peg$c44 = /^[1-9]/,
        peg$c45 = { type: "class", value: "[1-9]", description: "[1-9]" },
        peg$c46 = /^[eE]/,
        peg$c47 = { type: "class", value: "[eE]", description: "[eE]" },
        peg$c48 = /^[\-+]/,
        peg$c49 = { type: "class", value: "[\\-+]", description: "[\\-+]" },
        peg$c50 = /^[xX]/,
        peg$c51 = { type: "class", value: "[xX]", description: "[xX]" },
        peg$c52 = function(digits) { return parseInt(digits, 16); },
        peg$c53 = /^[0-9a-fA-F]/,
        peg$c54 = { type: "class", value: "[0-9a-fA-F]", description: "[0-9a-fA-F]" },
        peg$c55 = { type: "other", description: "string" },
        peg$c56 = "\"",
        peg$c57 = { type: "literal", value: "\"", description: "\"\\\"\"" },
        peg$c58 = "'",
        peg$c59 = { type: "literal", value: "'", description: "\"'\"" },
        peg$c60 = function(parts) {
              return parts[1];
            },
        peg$c61 = function(chars) { return chars.join(""); },
        peg$c62 = function(char_) { return char_;     },
        peg$c63 = function(sequence) { return sequence;  },
        peg$c64 = function() { return "\0"; },
        peg$c65 = /^['"\\bfnrtv]/,
        peg$c66 = { type: "class", value: "['\"\\\\bfnrtv]", description: "['\"\\\\bfnrtv]" },
        peg$c67 = function(char_) {
              return char_
                .replace("b", "\b")
                .replace("f", "\f")
                .replace("n", "\n")
                .replace("r", "\r")
                .replace("t", "\t")
                .replace("v", "\x0B") // IE does not recognize "\v".
            },
        peg$c68 = function(char_) { return char_; },
        peg$c69 = "x",
        peg$c70 = { type: "literal", value: "x", description: "\"x\"" },
        peg$c71 = "u",
        peg$c72 = { type: "literal", value: "u", description: "\"u\"" },
        peg$c73 = function(digits) {
              return String.fromCharCode(parseInt(digits, 16));
            },
        peg$c74 = /^[abcdefghijklmnopqrstuvwxyz\xAA\xB5\xBA\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E\u017F\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199\u019A\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD\u01BE\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233\u0234\u0235\u0236\u0237\u0238\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F\u0250\u0251\u0252\u0253\u0254\u0255\u0256\u0257\u0258\u0259\u025A\u025B\u025C\u025D\u025E\u025F\u0260\u0261\u0262\u0263\u0264\u0265\u0266\u0267\u0268\u0269\u026A\u026B\u026C\u026D\u026E\u026F\u0270\u0271\u0272\u0273\u0274\u0275\u0276\u0277\u0278\u0279\u027A\u027B\u027C\u027D\u027E\u027F\u0280\u0281\u0282\u0283\u0284\u0285\u0286\u0287\u0288\u0289\u028A\u028B\u028C\u028D\u028E\u028F\u0290\u0291\u0292\u0293\u0295\u0296\u0297\u0298\u0299\u029A\u029B\u029C\u029D\u029E\u029F\u02A0\u02A1\u02A2\u02A3\u02A4\u02A5\u02A6\u02A7\u02A8\u02A9\u02AA\u02AB\u02AC\u02AD\u02AE\u02AF\u0371\u0373\u0377\u037B\u037C\u037D\u0390\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\u03D0\u03D1\u03D5\u03D6\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF\u03F0\u03F1\u03F2\u03F3\u03F5\u03F8\u03FB\u03FC\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0450\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u045D\u045E\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0561\u0562\u0563\u0564\u0565\u0566\u0567\u0568\u0569\u056A\u056B\u056C\u056D\u056E\u056F\u0570\u0571\u0572\u0573\u0574\u0575\u0576\u0577\u0578\u0579\u057A\u057B\u057C\u057D\u057E\u057F\u0580\u0581\u0582\u0583\u0584\u0585\u0586\u0587\u1D00\u1D01\u1D02\u1D03\u1D04\u1D05\u1D06\u1D07\u1D08\u1D09\u1D0A\u1D0B\u1D0C\u1D0D\u1D0E\u1D0F\u1D10\u1D11\u1D12\u1D13\u1D14\u1D15\u1D16\u1D17\u1D18\u1D19\u1D1A\u1D1B\u1D1C\u1D1D\u1D1E\u1D1F\u1D20\u1D21\u1D22\u1D23\u1D24\u1D25\u1D26\u1D27\u1D28\u1D29\u1D2A\u1D2B\u1D62\u1D63\u1D64\u1D65\u1D66\u1D67\u1D68\u1D69\u1D6A\u1D6B\u1D6C\u1D6D\u1D6E\u1D6F\u1D70\u1D71\u1D72\u1D73\u1D74\u1D75\u1D76\u1D77\u1D79\u1D7A\u1D7B\u1D7C\u1D7D\u1D7E\u1D7F\u1D80\u1D81\u1D82\u1D83\u1D84\u1D85\u1D86\u1D87\u1D88\u1D89\u1D8A\u1D8B\u1D8C\u1D8D\u1D8E\u1D8F\u1D90\u1D91\u1D92\u1D93\u1D94\u1D95\u1D96\u1D97\u1D98\u1D99\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95\u1E96\u1E97\u1E98\u1E99\u1E9A\u1E9B\u1E9C\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF\u1F00\u1F01\u1F02\u1F03\u1F04\u1F05\u1F06\u1F07\u1F10\u1F11\u1F12\u1F13\u1F14\u1F15\u1F20\u1F21\u1F22\u1F23\u1F24\u1F25\u1F26\u1F27\u1F30\u1F31\u1F32\u1F33\u1F34\u1F35\u1F36\u1F37\u1F40\u1F41\u1F42\u1F43\u1F44\u1F45\u1F50\u1F51\u1F52\u1F53\u1F54\u1F55\u1F56\u1F57\u1F60\u1F61\u1F62\u1F63\u1F64\u1F65\u1F66\u1F67\u1F70\u1F71\u1F72\u1F73\u1F74\u1F75\u1F76\u1F77\u1F78\u1F79\u1F7A\u1F7B\u1F7C\u1F7D\u1F80\u1F81\u1F82\u1F83\u1F84\u1F85\u1F86\u1F87\u1F90\u1F91\u1F92\u1F93\u1F94\u1F95\u1F96\u1F97\u1FA0\u1FA1\u1FA2\u1FA3\u1FA4\u1FA5\u1FA6\u1FA7\u1FB0\u1FB1\u1FB2\u1FB3\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2\u1FC3\u1FC4\u1FC6\u1FC7\u1FD0\u1FD1\u1FD2\u1FD3\u1FD6\u1FD7\u1FE0\u1FE1\u1FE2\u1FE3\u1FE4\u1FE5\u1FE6\u1FE7\u1FF2\u1FF3\u1FF4\u1FF6\u1FF7\u2071\u207F\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146\u2147\u2148\u2149\u214E\u2184\u2C30\u2C31\u2C32\u2C33\u2C34\u2C35\u2C36\u2C37\u2C38\u2C39\u2C3A\u2C3B\u2C3C\u2C3D\u2C3E\u2C3F\u2C40\u2C41\u2C42\u2C43\u2C44\u2C45\u2C46\u2C47\u2C48\u2C49\u2C4A\u2C4B\u2C4C\u2C4D\u2C4E\u2C4F\u2C50\u2C51\u2C52\u2C53\u2C54\u2C55\u2C56\u2C57\u2C58\u2C59\u2C5A\u2C5B\u2C5C\u2C5D\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76\u2C77\u2C78\u2C79\u2C7A\u2C7B\u2C7C\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2D00\u2D01\u2D02\u2D03\u2D04\u2D05\u2D06\u2D07\u2D08\u2D09\u2D0A\u2D0B\u2D0C\u2D0D\u2D0E\u2D0F\u2D10\u2D11\u2D12\u2D13\u2D14\u2D15\u2D16\u2D17\u2D18\u2D19\u2D1A\u2D1B\u2D1C\u2D1D\u2D1E\u2D1F\u2D20\u2D21\u2D22\u2D23\u2D24\u2D25\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F\uA730\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771\uA772\uA773\uA774\uA775\uA776\uA777\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uFB00\uFB01\uFB02\uFB03\uFB04\uFB05\uFB06\uFB13\uFB14\uFB15\uFB16\uFB17\uFF41\uFF42\uFF43\uFF44\uFF45\uFF46\uFF47\uFF48\uFF49\uFF4A\uFF4B\uFF4C\uFF4D\uFF4E\uFF4F\uFF50\uFF51\uFF52\uFF53\uFF54\uFF55\uFF56\uFF57\uFF58\uFF59\uFF5A]/,
        peg$c75 = { type: "class", value: "[abcdefghijklmnopqrstuvwxyz\\xAA\\xB5\\xBA\\xDF\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE6\\xE7\\xE8\\xE9\\xEA\\xEB\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF6\\xF8\\xF9\\xFA\\xFB\\xFC\\xFD\\xFE\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E\\u017F\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199\\u019A\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD\\u01BE\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233\\u0234\\u0235\\u0236\\u0237\\u0238\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F\\u0250\\u0251\\u0252\\u0253\\u0254\\u0255\\u0256\\u0257\\u0258\\u0259\\u025A\\u025B\\u025C\\u025D\\u025E\\u025F\\u0260\\u0261\\u0262\\u0263\\u0264\\u0265\\u0266\\u0267\\u0268\\u0269\\u026A\\u026B\\u026C\\u026D\\u026E\\u026F\\u0270\\u0271\\u0272\\u0273\\u0274\\u0275\\u0276\\u0277\\u0278\\u0279\\u027A\\u027B\\u027C\\u027D\\u027E\\u027F\\u0280\\u0281\\u0282\\u0283\\u0284\\u0285\\u0286\\u0287\\u0288\\u0289\\u028A\\u028B\\u028C\\u028D\\u028E\\u028F\\u0290\\u0291\\u0292\\u0293\\u0295\\u0296\\u0297\\u0298\\u0299\\u029A\\u029B\\u029C\\u029D\\u029E\\u029F\\u02A0\\u02A1\\u02A2\\u02A3\\u02A4\\u02A5\\u02A6\\u02A7\\u02A8\\u02A9\\u02AA\\u02AB\\u02AC\\u02AD\\u02AE\\u02AF\\u0371\\u0373\\u0377\\u037B\\u037C\\u037D\\u0390\\u03AC\\u03AD\\u03AE\\u03AF\\u03B0\\u03B1\\u03B2\\u03B3\\u03B4\\u03B5\\u03B6\\u03B7\\u03B8\\u03B9\\u03BA\\u03BB\\u03BC\\u03BD\\u03BE\\u03BF\\u03C0\\u03C1\\u03C2\\u03C3\\u03C4\\u03C5\\u03C6\\u03C7\\u03C8\\u03C9\\u03CA\\u03CB\\u03CC\\u03CD\\u03CE\\u03D0\\u03D1\\u03D5\\u03D6\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF\\u03F0\\u03F1\\u03F2\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430\\u0431\\u0432\\u0433\\u0434\\u0435\\u0436\\u0437\\u0438\\u0439\\u043A\\u043B\\u043C\\u043D\\u043E\\u043F\\u0440\\u0441\\u0442\\u0443\\u0444\\u0445\\u0446\\u0447\\u0448\\u0449\\u044A\\u044B\\u044C\\u044D\\u044E\\u044F\\u0450\\u0451\\u0452\\u0453\\u0454\\u0455\\u0456\\u0457\\u0458\\u0459\\u045A\\u045B\\u045C\\u045D\\u045E\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0561\\u0562\\u0563\\u0564\\u0565\\u0566\\u0567\\u0568\\u0569\\u056A\\u056B\\u056C\\u056D\\u056E\\u056F\\u0570\\u0571\\u0572\\u0573\\u0574\\u0575\\u0576\\u0577\\u0578\\u0579\\u057A\\u057B\\u057C\\u057D\\u057E\\u057F\\u0580\\u0581\\u0582\\u0583\\u0584\\u0585\\u0586\\u0587\\u1D00\\u1D01\\u1D02\\u1D03\\u1D04\\u1D05\\u1D06\\u1D07\\u1D08\\u1D09\\u1D0A\\u1D0B\\u1D0C\\u1D0D\\u1D0E\\u1D0F\\u1D10\\u1D11\\u1D12\\u1D13\\u1D14\\u1D15\\u1D16\\u1D17\\u1D18\\u1D19\\u1D1A\\u1D1B\\u1D1C\\u1D1D\\u1D1E\\u1D1F\\u1D20\\u1D21\\u1D22\\u1D23\\u1D24\\u1D25\\u1D26\\u1D27\\u1D28\\u1D29\\u1D2A\\u1D2B\\u1D62\\u1D63\\u1D64\\u1D65\\u1D66\\u1D67\\u1D68\\u1D69\\u1D6A\\u1D6B\\u1D6C\\u1D6D\\u1D6E\\u1D6F\\u1D70\\u1D71\\u1D72\\u1D73\\u1D74\\u1D75\\u1D76\\u1D77\\u1D79\\u1D7A\\u1D7B\\u1D7C\\u1D7D\\u1D7E\\u1D7F\\u1D80\\u1D81\\u1D82\\u1D83\\u1D84\\u1D85\\u1D86\\u1D87\\u1D88\\u1D89\\u1D8A\\u1D8B\\u1D8C\\u1D8D\\u1D8E\\u1D8F\\u1D90\\u1D91\\u1D92\\u1D93\\u1D94\\u1D95\\u1D96\\u1D97\\u1D98\\u1D99\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95\\u1E96\\u1E97\\u1E98\\u1E99\\u1E9A\\u1E9B\\u1E9C\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF\\u1F00\\u1F01\\u1F02\\u1F03\\u1F04\\u1F05\\u1F06\\u1F07\\u1F10\\u1F11\\u1F12\\u1F13\\u1F14\\u1F15\\u1F20\\u1F21\\u1F22\\u1F23\\u1F24\\u1F25\\u1F26\\u1F27\\u1F30\\u1F31\\u1F32\\u1F33\\u1F34\\u1F35\\u1F36\\u1F37\\u1F40\\u1F41\\u1F42\\u1F43\\u1F44\\u1F45\\u1F50\\u1F51\\u1F52\\u1F53\\u1F54\\u1F55\\u1F56\\u1F57\\u1F60\\u1F61\\u1F62\\u1F63\\u1F64\\u1F65\\u1F66\\u1F67\\u1F70\\u1F71\\u1F72\\u1F73\\u1F74\\u1F75\\u1F76\\u1F77\\u1F78\\u1F79\\u1F7A\\u1F7B\\u1F7C\\u1F7D\\u1F80\\u1F81\\u1F82\\u1F83\\u1F84\\u1F85\\u1F86\\u1F87\\u1F90\\u1F91\\u1F92\\u1F93\\u1F94\\u1F95\\u1F96\\u1F97\\u1FA0\\u1FA1\\u1FA2\\u1FA3\\u1FA4\\u1FA5\\u1FA6\\u1FA7\\u1FB0\\u1FB1\\u1FB2\\u1FB3\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2\\u1FC3\\u1FC4\\u1FC6\\u1FC7\\u1FD0\\u1FD1\\u1FD2\\u1FD3\\u1FD6\\u1FD7\\u1FE0\\u1FE1\\u1FE2\\u1FE3\\u1FE4\\u1FE5\\u1FE6\\u1FE7\\u1FF2\\u1FF3\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146\\u2147\\u2148\\u2149\\u214E\\u2184\\u2C30\\u2C31\\u2C32\\u2C33\\u2C34\\u2C35\\u2C36\\u2C37\\u2C38\\u2C39\\u2C3A\\u2C3B\\u2C3C\\u2C3D\\u2C3E\\u2C3F\\u2C40\\u2C41\\u2C42\\u2C43\\u2C44\\u2C45\\u2C46\\u2C47\\u2C48\\u2C49\\u2C4A\\u2C4B\\u2C4C\\u2C4D\\u2C4E\\u2C4F\\u2C50\\u2C51\\u2C52\\u2C53\\u2C54\\u2C55\\u2C56\\u2C57\\u2C58\\u2C59\\u2C5A\\u2C5B\\u2C5C\\u2C5D\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76\\u2C77\\u2C78\\u2C79\\u2C7A\\u2C7B\\u2C7C\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2D00\\u2D01\\u2D02\\u2D03\\u2D04\\u2D05\\u2D06\\u2D07\\u2D08\\u2D09\\u2D0A\\u2D0B\\u2D0C\\u2D0D\\u2D0E\\u2D0F\\u2D10\\u2D11\\u2D12\\u2D13\\u2D14\\u2D15\\u2D16\\u2D17\\u2D18\\u2D19\\u2D1A\\u2D1B\\u2D1C\\u2D1D\\u2D1E\\u2D1F\\u2D20\\u2D21\\u2D22\\u2D23\\u2D24\\u2D25\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F\\uA730\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771\\uA772\\uA773\\uA774\\uA775\\uA776\\uA777\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uFB00\\uFB01\\uFB02\\uFB03\\uFB04\\uFB05\\uFB06\\uFB13\\uFB14\\uFB15\\uFB16\\uFB17\\uFF41\\uFF42\\uFF43\\uFF44\\uFF45\\uFF46\\uFF47\\uFF48\\uFF49\\uFF4A\\uFF4B\\uFF4C\\uFF4D\\uFF4E\\uFF4F\\uFF50\\uFF51\\uFF52\\uFF53\\uFF54\\uFF55\\uFF56\\uFF57\\uFF58\\uFF59\\uFF5A]", description: "[abcdefghijklmnopqrstuvwxyz\\xAA\\xB5\\xBA\\xDF\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE6\\xE7\\xE8\\xE9\\xEA\\xEB\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF6\\xF8\\xF9\\xFA\\xFB\\xFC\\xFD\\xFE\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E\\u017F\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199\\u019A\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD\\u01BE\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233\\u0234\\u0235\\u0236\\u0237\\u0238\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F\\u0250\\u0251\\u0252\\u0253\\u0254\\u0255\\u0256\\u0257\\u0258\\u0259\\u025A\\u025B\\u025C\\u025D\\u025E\\u025F\\u0260\\u0261\\u0262\\u0263\\u0264\\u0265\\u0266\\u0267\\u0268\\u0269\\u026A\\u026B\\u026C\\u026D\\u026E\\u026F\\u0270\\u0271\\u0272\\u0273\\u0274\\u0275\\u0276\\u0277\\u0278\\u0279\\u027A\\u027B\\u027C\\u027D\\u027E\\u027F\\u0280\\u0281\\u0282\\u0283\\u0284\\u0285\\u0286\\u0287\\u0288\\u0289\\u028A\\u028B\\u028C\\u028D\\u028E\\u028F\\u0290\\u0291\\u0292\\u0293\\u0295\\u0296\\u0297\\u0298\\u0299\\u029A\\u029B\\u029C\\u029D\\u029E\\u029F\\u02A0\\u02A1\\u02A2\\u02A3\\u02A4\\u02A5\\u02A6\\u02A7\\u02A8\\u02A9\\u02AA\\u02AB\\u02AC\\u02AD\\u02AE\\u02AF\\u0371\\u0373\\u0377\\u037B\\u037C\\u037D\\u0390\\u03AC\\u03AD\\u03AE\\u03AF\\u03B0\\u03B1\\u03B2\\u03B3\\u03B4\\u03B5\\u03B6\\u03B7\\u03B8\\u03B9\\u03BA\\u03BB\\u03BC\\u03BD\\u03BE\\u03BF\\u03C0\\u03C1\\u03C2\\u03C3\\u03C4\\u03C5\\u03C6\\u03C7\\u03C8\\u03C9\\u03CA\\u03CB\\u03CC\\u03CD\\u03CE\\u03D0\\u03D1\\u03D5\\u03D6\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF\\u03F0\\u03F1\\u03F2\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430\\u0431\\u0432\\u0433\\u0434\\u0435\\u0436\\u0437\\u0438\\u0439\\u043A\\u043B\\u043C\\u043D\\u043E\\u043F\\u0440\\u0441\\u0442\\u0443\\u0444\\u0445\\u0446\\u0447\\u0448\\u0449\\u044A\\u044B\\u044C\\u044D\\u044E\\u044F\\u0450\\u0451\\u0452\\u0453\\u0454\\u0455\\u0456\\u0457\\u0458\\u0459\\u045A\\u045B\\u045C\\u045D\\u045E\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0561\\u0562\\u0563\\u0564\\u0565\\u0566\\u0567\\u0568\\u0569\\u056A\\u056B\\u056C\\u056D\\u056E\\u056F\\u0570\\u0571\\u0572\\u0573\\u0574\\u0575\\u0576\\u0577\\u0578\\u0579\\u057A\\u057B\\u057C\\u057D\\u057E\\u057F\\u0580\\u0581\\u0582\\u0583\\u0584\\u0585\\u0586\\u0587\\u1D00\\u1D01\\u1D02\\u1D03\\u1D04\\u1D05\\u1D06\\u1D07\\u1D08\\u1D09\\u1D0A\\u1D0B\\u1D0C\\u1D0D\\u1D0E\\u1D0F\\u1D10\\u1D11\\u1D12\\u1D13\\u1D14\\u1D15\\u1D16\\u1D17\\u1D18\\u1D19\\u1D1A\\u1D1B\\u1D1C\\u1D1D\\u1D1E\\u1D1F\\u1D20\\u1D21\\u1D22\\u1D23\\u1D24\\u1D25\\u1D26\\u1D27\\u1D28\\u1D29\\u1D2A\\u1D2B\\u1D62\\u1D63\\u1D64\\u1D65\\u1D66\\u1D67\\u1D68\\u1D69\\u1D6A\\u1D6B\\u1D6C\\u1D6D\\u1D6E\\u1D6F\\u1D70\\u1D71\\u1D72\\u1D73\\u1D74\\u1D75\\u1D76\\u1D77\\u1D79\\u1D7A\\u1D7B\\u1D7C\\u1D7D\\u1D7E\\u1D7F\\u1D80\\u1D81\\u1D82\\u1D83\\u1D84\\u1D85\\u1D86\\u1D87\\u1D88\\u1D89\\u1D8A\\u1D8B\\u1D8C\\u1D8D\\u1D8E\\u1D8F\\u1D90\\u1D91\\u1D92\\u1D93\\u1D94\\u1D95\\u1D96\\u1D97\\u1D98\\u1D99\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95\\u1E96\\u1E97\\u1E98\\u1E99\\u1E9A\\u1E9B\\u1E9C\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF\\u1F00\\u1F01\\u1F02\\u1F03\\u1F04\\u1F05\\u1F06\\u1F07\\u1F10\\u1F11\\u1F12\\u1F13\\u1F14\\u1F15\\u1F20\\u1F21\\u1F22\\u1F23\\u1F24\\u1F25\\u1F26\\u1F27\\u1F30\\u1F31\\u1F32\\u1F33\\u1F34\\u1F35\\u1F36\\u1F37\\u1F40\\u1F41\\u1F42\\u1F43\\u1F44\\u1F45\\u1F50\\u1F51\\u1F52\\u1F53\\u1F54\\u1F55\\u1F56\\u1F57\\u1F60\\u1F61\\u1F62\\u1F63\\u1F64\\u1F65\\u1F66\\u1F67\\u1F70\\u1F71\\u1F72\\u1F73\\u1F74\\u1F75\\u1F76\\u1F77\\u1F78\\u1F79\\u1F7A\\u1F7B\\u1F7C\\u1F7D\\u1F80\\u1F81\\u1F82\\u1F83\\u1F84\\u1F85\\u1F86\\u1F87\\u1F90\\u1F91\\u1F92\\u1F93\\u1F94\\u1F95\\u1F96\\u1F97\\u1FA0\\u1FA1\\u1FA2\\u1FA3\\u1FA4\\u1FA5\\u1FA6\\u1FA7\\u1FB0\\u1FB1\\u1FB2\\u1FB3\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2\\u1FC3\\u1FC4\\u1FC6\\u1FC7\\u1FD0\\u1FD1\\u1FD2\\u1FD3\\u1FD6\\u1FD7\\u1FE0\\u1FE1\\u1FE2\\u1FE3\\u1FE4\\u1FE5\\u1FE6\\u1FE7\\u1FF2\\u1FF3\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146\\u2147\\u2148\\u2149\\u214E\\u2184\\u2C30\\u2C31\\u2C32\\u2C33\\u2C34\\u2C35\\u2C36\\u2C37\\u2C38\\u2C39\\u2C3A\\u2C3B\\u2C3C\\u2C3D\\u2C3E\\u2C3F\\u2C40\\u2C41\\u2C42\\u2C43\\u2C44\\u2C45\\u2C46\\u2C47\\u2C48\\u2C49\\u2C4A\\u2C4B\\u2C4C\\u2C4D\\u2C4E\\u2C4F\\u2C50\\u2C51\\u2C52\\u2C53\\u2C54\\u2C55\\u2C56\\u2C57\\u2C58\\u2C59\\u2C5A\\u2C5B\\u2C5C\\u2C5D\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76\\u2C77\\u2C78\\u2C79\\u2C7A\\u2C7B\\u2C7C\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2D00\\u2D01\\u2D02\\u2D03\\u2D04\\u2D05\\u2D06\\u2D07\\u2D08\\u2D09\\u2D0A\\u2D0B\\u2D0C\\u2D0D\\u2D0E\\u2D0F\\u2D10\\u2D11\\u2D12\\u2D13\\u2D14\\u2D15\\u2D16\\u2D17\\u2D18\\u2D19\\u2D1A\\u2D1B\\u2D1C\\u2D1D\\u2D1E\\u2D1F\\u2D20\\u2D21\\u2D22\\u2D23\\u2D24\\u2D25\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F\\uA730\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771\\uA772\\uA773\\uA774\\uA775\\uA776\\uA777\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uFB00\\uFB01\\uFB02\\uFB03\\uFB04\\uFB05\\uFB06\\uFB13\\uFB14\\uFB15\\uFB16\\uFB17\\uFF41\\uFF42\\uFF43\\uFF44\\uFF45\\uFF46\\uFF47\\uFF48\\uFF49\\uFF4A\\uFF4B\\uFF4C\\uFF4D\\uFF4E\\uFF4F\\uFF50\\uFF51\\uFF52\\uFF53\\uFF54\\uFF55\\uFF56\\uFF57\\uFF58\\uFF59\\uFF5A]" },
        peg$c76 = /^[\u02B0\u02B1\u02B2\u02B3\u02B4\u02B5\u02B6\u02B7\u02B8\u02B9\u02BA\u02BB\u02BC\u02BD\u02BE\u02BF\u02C0\u02C1\u02C6\u02C7\u02C8\u02C9\u02CA\u02CB\u02CC\u02CD\u02CE\u02CF\u02D0\u02D1\u02E0\u02E1\u02E2\u02E3\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1C78\u1C79\u1C7A\u1C7B\u1C7C\u1C7D\u1D2C\u1D2D\u1D2E\u1D2F\u1D30\u1D31\u1D32\u1D33\u1D34\u1D35\u1D36\u1D37\u1D38\u1D39\u1D3A\u1D3B\u1D3C\u1D3D\u1D3E\u1D3F\u1D40\u1D41\u1D42\u1D43\u1D44\u1D45\u1D46\u1D47\u1D48\u1D49\u1D4A\u1D4B\u1D4C\u1D4D\u1D4E\u1D4F\u1D50\u1D51\u1D52\u1D53\u1D54\u1D55\u1D56\u1D57\u1D58\u1D59\u1D5A\u1D5B\u1D5C\u1D5D\u1D5E\u1D5F\u1D60\u1D61\u1D78\u1D9B\u1D9C\u1D9D\u1D9E\u1D9F\u1DA0\u1DA1\u1DA2\u1DA3\u1DA4\u1DA5\u1DA6\u1DA7\u1DA8\u1DA9\u1DAA\u1DAB\u1DAC\u1DAD\u1DAE\u1DAF\u1DB0\u1DB1\u1DB2\u1DB3\u1DB4\u1DB5\u1DB6\u1DB7\u1DB8\u1DB9\u1DBA\u1DBB\u1DBC\u1DBD\u1DBE\u1DBF\u2090\u2091\u2092\u2093\u2094\u2C7D\u2D6F\u2E2F\u3005\u3031\u3032\u3033\u3034\u3035\u303B\u309D\u309E\u30FC\u30FD\u30FE\uA015\uA60C\uA67F\uA717\uA718\uA719\uA71A\uA71B\uA71C\uA71D\uA71E\uA71F\uA770\uA788\uFF70\uFF9E\uFF9F]/,
        peg$c77 = { type: "class", value: "[\\u02B0\\u02B1\\u02B2\\u02B3\\u02B4\\u02B5\\u02B6\\u02B7\\u02B8\\u02B9\\u02BA\\u02BB\\u02BC\\u02BD\\u02BE\\u02BF\\u02C0\\u02C1\\u02C6\\u02C7\\u02C8\\u02C9\\u02CA\\u02CB\\u02CC\\u02CD\\u02CE\\u02CF\\u02D0\\u02D1\\u02E0\\u02E1\\u02E2\\u02E3\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1C78\\u1C79\\u1C7A\\u1C7B\\u1C7C\\u1C7D\\u1D2C\\u1D2D\\u1D2E\\u1D2F\\u1D30\\u1D31\\u1D32\\u1D33\\u1D34\\u1D35\\u1D36\\u1D37\\u1D38\\u1D39\\u1D3A\\u1D3B\\u1D3C\\u1D3D\\u1D3E\\u1D3F\\u1D40\\u1D41\\u1D42\\u1D43\\u1D44\\u1D45\\u1D46\\u1D47\\u1D48\\u1D49\\u1D4A\\u1D4B\\u1D4C\\u1D4D\\u1D4E\\u1D4F\\u1D50\\u1D51\\u1D52\\u1D53\\u1D54\\u1D55\\u1D56\\u1D57\\u1D58\\u1D59\\u1D5A\\u1D5B\\u1D5C\\u1D5D\\u1D5E\\u1D5F\\u1D60\\u1D61\\u1D78\\u1D9B\\u1D9C\\u1D9D\\u1D9E\\u1D9F\\u1DA0\\u1DA1\\u1DA2\\u1DA3\\u1DA4\\u1DA5\\u1DA6\\u1DA7\\u1DA8\\u1DA9\\u1DAA\\u1DAB\\u1DAC\\u1DAD\\u1DAE\\u1DAF\\u1DB0\\u1DB1\\u1DB2\\u1DB3\\u1DB4\\u1DB5\\u1DB6\\u1DB7\\u1DB8\\u1DB9\\u1DBA\\u1DBB\\u1DBC\\u1DBD\\u1DBE\\u1DBF\\u2090\\u2091\\u2092\\u2093\\u2094\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031\\u3032\\u3033\\u3034\\u3035\\u303B\\u309D\\u309E\\u30FC\\u30FD\\u30FE\\uA015\\uA60C\\uA67F\\uA717\\uA718\\uA719\\uA71A\\uA71B\\uA71C\\uA71D\\uA71E\\uA71F\\uA770\\uA788\\uFF70\\uFF9E\\uFF9F]", description: "[\\u02B0\\u02B1\\u02B2\\u02B3\\u02B4\\u02B5\\u02B6\\u02B7\\u02B8\\u02B9\\u02BA\\u02BB\\u02BC\\u02BD\\u02BE\\u02BF\\u02C0\\u02C1\\u02C6\\u02C7\\u02C8\\u02C9\\u02CA\\u02CB\\u02CC\\u02CD\\u02CE\\u02CF\\u02D0\\u02D1\\u02E0\\u02E1\\u02E2\\u02E3\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1C78\\u1C79\\u1C7A\\u1C7B\\u1C7C\\u1C7D\\u1D2C\\u1D2D\\u1D2E\\u1D2F\\u1D30\\u1D31\\u1D32\\u1D33\\u1D34\\u1D35\\u1D36\\u1D37\\u1D38\\u1D39\\u1D3A\\u1D3B\\u1D3C\\u1D3D\\u1D3E\\u1D3F\\u1D40\\u1D41\\u1D42\\u1D43\\u1D44\\u1D45\\u1D46\\u1D47\\u1D48\\u1D49\\u1D4A\\u1D4B\\u1D4C\\u1D4D\\u1D4E\\u1D4F\\u1D50\\u1D51\\u1D52\\u1D53\\u1D54\\u1D55\\u1D56\\u1D57\\u1D58\\u1D59\\u1D5A\\u1D5B\\u1D5C\\u1D5D\\u1D5E\\u1D5F\\u1D60\\u1D61\\u1D78\\u1D9B\\u1D9C\\u1D9D\\u1D9E\\u1D9F\\u1DA0\\u1DA1\\u1DA2\\u1DA3\\u1DA4\\u1DA5\\u1DA6\\u1DA7\\u1DA8\\u1DA9\\u1DAA\\u1DAB\\u1DAC\\u1DAD\\u1DAE\\u1DAF\\u1DB0\\u1DB1\\u1DB2\\u1DB3\\u1DB4\\u1DB5\\u1DB6\\u1DB7\\u1DB8\\u1DB9\\u1DBA\\u1DBB\\u1DBC\\u1DBD\\u1DBE\\u1DBF\\u2090\\u2091\\u2092\\u2093\\u2094\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031\\u3032\\u3033\\u3034\\u3035\\u303B\\u309D\\u309E\\u30FC\\u30FD\\u30FE\\uA015\\uA60C\\uA67F\\uA717\\uA718\\uA719\\uA71A\\uA71B\\uA71C\\uA71D\\uA71E\\uA71F\\uA770\\uA788\\uFF70\\uFF9E\\uFF9F]" },
        peg$c78 = /^[\u01BB\u01C0\u01C1\u01C2\u01C3\u0294\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u05F0\u05F1\u05F2\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u063B\u063C\u063D\u063E\u063F\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u066E\u066F\u0671\u0672\u0673\u0674\u0675\u0676\u0677\u0678\u0679\u067A\u067B\u067C\u067D\u067E\u067F\u0680\u0681\u0682\u0683\u0684\u0685\u0686\u0687\u0688\u0689\u068A\u068B\u068C\u068D\u068E\u068F\u0690\u0691\u0692\u0693\u0694\u0695\u0696\u0697\u0698\u0699\u069A\u069B\u069C\u069D\u069E\u069F\u06A0\u06A1\u06A2\u06A3\u06A4\u06A5\u06A6\u06A7\u06A8\u06A9\u06AA\u06AB\u06AC\u06AD\u06AE\u06AF\u06B0\u06B1\u06B2\u06B3\u06B4\u06B5\u06B6\u06B7\u06B8\u06B9\u06BA\u06BB\u06BC\u06BD\u06BE\u06BF\u06C0\u06C1\u06C2\u06C3\u06C4\u06C5\u06C6\u06C7\u06C8\u06C9\u06CA\u06CB\u06CC\u06CD\u06CE\u06CF\u06D0\u06D1\u06D2\u06D3\u06D5\u06EE\u06EF\u06FA\u06FB\u06FC\u06FF\u0710\u0712\u0713\u0714\u0715\u0716\u0717\u0718\u0719\u071A\u071B\u071C\u071D\u071E\u071F\u0720\u0721\u0722\u0723\u0724\u0725\u0726\u0727\u0728\u0729\u072A\u072B\u072C\u072D\u072E\u072F\u074D\u074E\u074F\u0750\u0751\u0752\u0753\u0754\u0755\u0756\u0757\u0758\u0759\u075A\u075B\u075C\u075D\u075E\u075F\u0760\u0761\u0762\u0763\u0764\u0765\u0766\u0767\u0768\u0769\u076A\u076B\u076C\u076D\u076E\u076F\u0770\u0771\u0772\u0773\u0774\u0775\u0776\u0777\u0778\u0779\u077A\u077B\u077C\u077D\u077E\u077F\u0780\u0781\u0782\u0783\u0784\u0785\u0786\u0787\u0788\u0789\u078A\u078B\u078C\u078D\u078E\u078F\u0790\u0791\u0792\u0793\u0794\u0795\u0796\u0797\u0798\u0799\u079A\u079B\u079C\u079D\u079E\u079F\u07A0\u07A1\u07A2\u07A3\u07A4\u07A5\u07B1\u07CA\u07CB\u07CC\u07CD\u07CE\u07CF\u07D0\u07D1\u07D2\u07D3\u07D4\u07D5\u07D6\u07D7\u07D8\u07D9\u07DA\u07DB\u07DC\u07DD\u07DE\u07DF\u07E0\u07E1\u07E2\u07E3\u07E4\u07E5\u07E6\u07E7\u07E8\u07E9\u07EA\u0904\u0905\u0906\u0907\u0908\u0909\u090A\u090B\u090C\u090D\u090E\u090F\u0910\u0911\u0912\u0913\u0914\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u0929\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0931\u0932\u0933\u0934\u0935\u0936\u0937\u0938\u0939\u093D\u0950\u0958\u0959\u095A\u095B\u095C\u095D\u095E\u095F\u0960\u0961\u0972\u097B\u097C\u097D\u097E\u097F\u0985\u0986\u0987\u0988\u0989\u098A\u098B\u098C\u098F\u0990\u0993\u0994\u0995\u0996\u0997\u0998\u0999\u099A\u099B\u099C\u099D\u099E\u099F\u09A0\u09A1\u09A2\u09A3\u09A4\u09A5\u09A6\u09A7\u09A8\u09AA\u09AB\u09AC\u09AD\u09AE\u09AF\u09B0\u09B2\u09B6\u09B7\u09B8\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF\u09E0\u09E1\u09F0\u09F1\u0A05\u0A06\u0A07\u0A08\u0A09\u0A0A\u0A0F\u0A10\u0A13\u0A14\u0A15\u0A16\u0A17\u0A18\u0A19\u0A1A\u0A1B\u0A1C\u0A1D\u0A1E\u0A1F\u0A20\u0A21\u0A22\u0A23\u0A24\u0A25\u0A26\u0A27\u0A28\u0A2A\u0A2B\u0A2C\u0A2D\u0A2E\u0A2F\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59\u0A5A\u0A5B\u0A5C\u0A5E\u0A72\u0A73\u0A74\u0A85\u0A86\u0A87\u0A88\u0A89\u0A8A\u0A8B\u0A8C\u0A8D\u0A8F\u0A90\u0A91\u0A93\u0A94\u0A95\u0A96\u0A97\u0A98\u0A99\u0A9A\u0A9B\u0A9C\u0A9D\u0A9E\u0A9F\u0AA0\u0AA1\u0AA2\u0AA3\u0AA4\u0AA5\u0AA6\u0AA7\u0AA8\u0AAA\u0AAB\u0AAC\u0AAD\u0AAE\u0AAF\u0AB0\u0AB2\u0AB3\u0AB5\u0AB6\u0AB7\u0AB8\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05\u0B06\u0B07\u0B08\u0B09\u0B0A\u0B0B\u0B0C\u0B0F\u0B10\u0B13\u0B14\u0B15\u0B16\u0B17\u0B18\u0B19\u0B1A\u0B1B\u0B1C\u0B1D\u0B1E\u0B1F\u0B20\u0B21\u0B22\u0B23\u0B24\u0B25\u0B26\u0B27\u0B28\u0B2A\u0B2B\u0B2C\u0B2D\u0B2E\u0B2F\u0B30\u0B32\u0B33\u0B35\u0B36\u0B37\u0B38\u0B39\u0B3D\u0B5C\u0B5D\u0B5F\u0B60\u0B61\u0B71\u0B83\u0B85\u0B86\u0B87\u0B88\u0B89\u0B8A\u0B8E\u0B8F\u0B90\u0B92\u0B93\u0B94\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8\u0BA9\u0BAA\u0BAE\u0BAF\u0BB0\u0BB1\u0BB2\u0BB3\u0BB4\u0BB5\u0BB6\u0BB7\u0BB8\u0BB9\u0BD0\u0C05\u0C06\u0C07\u0C08\u0C09\u0C0A\u0C0B\u0C0C\u0C0E\u0C0F\u0C10\u0C12\u0C13\u0C14\u0C15\u0C16\u0C17\u0C18\u0C19\u0C1A\u0C1B\u0C1C\u0C1D\u0C1E\u0C1F\u0C20\u0C21\u0C22\u0C23\u0C24\u0C25\u0C26\u0C27\u0C28\u0C2A\u0C2B\u0C2C\u0C2D\u0C2E\u0C2F\u0C30\u0C31\u0C32\u0C33\u0C35\u0C36\u0C37\u0C38\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85\u0C86\u0C87\u0C88\u0C89\u0C8A\u0C8B\u0C8C\u0C8E\u0C8F\u0C90\u0C92\u0C93\u0C94\u0C95\u0C96\u0C97\u0C98\u0C99\u0C9A\u0C9B\u0C9C\u0C9D\u0C9E\u0C9F\u0CA0\u0CA1\u0CA2\u0CA3\u0CA4\u0CA5\u0CA6\u0CA7\u0CA8\u0CAA\u0CAB\u0CAC\u0CAD\u0CAE\u0CAF\u0CB0\u0CB1\u0CB2\u0CB3\u0CB5\u0CB6\u0CB7\u0CB8\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0D05\u0D06\u0D07\u0D08\u0D09\u0D0A\u0D0B\u0D0C\u0D0E\u0D0F\u0D10\u0D12\u0D13\u0D14\u0D15\u0D16\u0D17\u0D18\u0D19\u0D1A\u0D1B\u0D1C\u0D1D\u0D1E\u0D1F\u0D20\u0D21\u0D22\u0D23\u0D24\u0D25\u0D26\u0D27\u0D28\u0D2A\u0D2B\u0D2C\u0D2D\u0D2E\u0D2F\u0D30\u0D31\u0D32\u0D33\u0D34\u0D35\u0D36\u0D37\u0D38\u0D39\u0D3D\u0D60\u0D61\u0D7A\u0D7B\u0D7C\u0D7D\u0D7E\u0D7F\u0D85\u0D86\u0D87\u0D88\u0D89\u0D8A\u0D8B\u0D8C\u0D8D\u0D8E\u0D8F\u0D90\u0D91\u0D92\u0D93\u0D94\u0D95\u0D96\u0D9A\u0D9B\u0D9C\u0D9D\u0D9E\u0D9F\u0DA0\u0DA1\u0DA2\u0DA3\u0DA4\u0DA5\u0DA6\u0DA7\u0DA8\u0DA9\u0DAA\u0DAB\u0DAC\u0DAD\u0DAE\u0DAF\u0DB0\u0DB1\u0DB3\u0DB4\u0DB5\u0DB6\u0DB7\u0DB8\u0DB9\u0DBA\u0DBB\u0DBD\u0DC0\u0DC1\u0DC2\u0DC3\u0DC4\u0DC5\u0DC6\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E32\u0E33\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD\u0EAE\u0EAF\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EDC\u0EDD\u0F00\u0F40\u0F41\u0F42\u0F43\u0F44\u0F45\u0F46\u0F47\u0F49\u0F4A\u0F4B\u0F4C\u0F4D\u0F4E\u0F4F\u0F50\u0F51\u0F52\u0F53\u0F54\u0F55\u0F56\u0F57\u0F58\u0F59\u0F5A\u0F5B\u0F5C\u0F5D\u0F5E\u0F5F\u0F60\u0F61\u0F62\u0F63\u0F64\u0F65\u0F66\u0F67\u0F68\u0F69\u0F6A\u0F6B\u0F6C\u0F88\u0F89\u0F8A\u0F8B\u1000\u1001\u1002\u1003\u1004\u1005\u1006\u1007\u1008\u1009\u100A\u100B\u100C\u100D\u100E\u100F\u1010\u1011\u1012\u1013\u1014\u1015\u1016\u1017\u1018\u1019\u101A\u101B\u101C\u101D\u101E\u101F\u1020\u1021\u1022\u1023\u1024\u1025\u1026\u1027\u1028\u1029\u102A\u103F\u1050\u1051\u1052\u1053\u1054\u1055\u105A\u105B\u105C\u105D\u1061\u1065\u1066\u106E\u106F\u1070\u1075\u1076\u1077\u1078\u1079\u107A\u107B\u107C\u107D\u107E\u107F\u1080\u1081\u108E\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u10F7\u10F8\u10F9\u10FA\u1100\u1101\u1102\u1103\u1104\u1105\u1106\u1107\u1108\u1109\u110A\u110B\u110C\u110D\u110E\u110F\u1110\u1111\u1112\u1113\u1114\u1115\u1116\u1117\u1118\u1119\u111A\u111B\u111C\u111D\u111E\u111F\u1120\u1121\u1122\u1123\u1124\u1125\u1126\u1127\u1128\u1129\u112A\u112B\u112C\u112D\u112E\u112F\u1130\u1131\u1132\u1133\u1134\u1135\u1136\u1137\u1138\u1139\u113A\u113B\u113C\u113D\u113E\u113F\u1140\u1141\u1142\u1143\u1144\u1145\u1146\u1147\u1148\u1149\u114A\u114B\u114C\u114D\u114E\u114F\u1150\u1151\u1152\u1153\u1154\u1155\u1156\u1157\u1158\u1159\u115F\u1160\u1161\u1162\u1163\u1164\u1165\u1166\u1167\u1168\u1169\u116A\u116B\u116C\u116D\u116E\u116F\u1170\u1171\u1172\u1173\u1174\u1175\u1176\u1177\u1178\u1179\u117A\u117B\u117C\u117D\u117E\u117F\u1180\u1181\u1182\u1183\u1184\u1185\u1186\u1187\u1188\u1189\u118A\u118B\u118C\u118D\u118E\u118F\u1190\u1191\u1192\u1193\u1194\u1195\u1196\u1197\u1198\u1199\u119A\u119B\u119C\u119D\u119E\u119F\u11A0\u11A1\u11A2\u11A8\u11A9\u11AA\u11AB\u11AC\u11AD\u11AE\u11AF\u11B0\u11B1\u11B2\u11B3\u11B4\u11B5\u11B6\u11B7\u11B8\u11B9\u11BA\u11BB\u11BC\u11BD\u11BE\u11BF\u11C0\u11C1\u11C2\u11C3\u11C4\u11C5\u11C6\u11C7\u11C8\u11C9\u11CA\u11CB\u11CC\u11CD\u11CE\u11CF\u11D0\u11D1\u11D2\u11D3\u11D4\u11D5\u11D6\u11D7\u11D8\u11D9\u11DA\u11DB\u11DC\u11DD\u11DE\u11DF\u11E0\u11E1\u11E2\u11E3\u11E4\u11E5\u11E6\u11E7\u11E8\u11E9\u11EA\u11EB\u11EC\u11ED\u11EE\u11EF\u11F0\u11F1\u11F2\u11F3\u11F4\u11F5\u11F6\u11F7\u11F8\u11F9\u1200\u1201\u1202\u1203\u1204\u1205\u1206\u1207\u1208\u1209\u120A\u120B\u120C\u120D\u120E\u120F\u1210\u1211\u1212\u1213\u1214\u1215\u1216\u1217\u1218\u1219\u121A\u121B\u121C\u121D\u121E\u121F\u1220\u1221\u1222\u1223\u1224\u1225\u1226\u1227\u1228\u1229\u122A\u122B\u122C\u122D\u122E\u122F\u1230\u1231\u1232\u1233\u1234\u1235\u1236\u1237\u1238\u1239\u123A\u123B\u123C\u123D\u123E\u123F\u1240\u1241\u1242\u1243\u1244\u1245\u1246\u1247\u1248\u124A\u124B\u124C\u124D\u1250\u1251\u1252\u1253\u1254\u1255\u1256\u1258\u125A\u125B\u125C\u125D\u1260\u1261\u1262\u1263\u1264\u1265\u1266\u1267\u1268\u1269\u126A\u126B\u126C\u126D\u126E\u126F\u1270\u1271\u1272\u1273\u1274\u1275\u1276\u1277\u1278\u1279\u127A\u127B\u127C\u127D\u127E\u127F\u1280\u1281\u1282\u1283\u1284\u1285\u1286\u1287\u1288\u128A\u128B\u128C\u128D\u1290\u1291\u1292\u1293\u1294\u1295\u1296\u1297\u1298\u1299\u129A\u129B\u129C\u129D\u129E\u129F\u12A0\u12A1\u12A2\u12A3\u12A4\u12A5\u12A6\u12A7\u12A8\u12A9\u12AA\u12AB\u12AC\u12AD\u12AE\u12AF\u12B0\u12B2\u12B3\u12B4\u12B5\u12B8\u12B9\u12BA\u12BB\u12BC\u12BD\u12BE\u12C0\u12C2\u12C3\u12C4\u12C5\u12C8\u12C9\u12CA\u12CB\u12CC\u12CD\u12CE\u12CF\u12D0\u12D1\u12D2\u12D3\u12D4\u12D5\u12D6\u12D8\u12D9\u12DA\u12DB\u12DC\u12DD\u12DE\u12DF\u12E0\u12E1\u12E2\u12E3\u12E4\u12E5\u12E6\u12E7\u12E8\u12E9\u12EA\u12EB\u12EC\u12ED\u12EE\u12EF\u12F0\u12F1\u12F2\u12F3\u12F4\u12F5\u12F6\u12F7\u12F8\u12F9\u12FA\u12FB\u12FC\u12FD\u12FE\u12FF\u1300\u1301\u1302\u1303\u1304\u1305\u1306\u1307\u1308\u1309\u130A\u130B\u130C\u130D\u130E\u130F\u1310\u1312\u1313\u1314\u1315\u1318\u1319\u131A\u131B\u131C\u131D\u131E\u131F\u1320\u1321\u1322\u1323\u1324\u1325\u1326\u1327\u1328\u1329\u132A\u132B\u132C\u132D\u132E\u132F\u1330\u1331\u1332\u1333\u1334\u1335\u1336\u1337\u1338\u1339\u133A\u133B\u133C\u133D\u133E\u133F\u1340\u1341\u1342\u1343\u1344\u1345\u1346\u1347\u1348\u1349\u134A\u134B\u134C\u134D\u134E\u134F\u1350\u1351\u1352\u1353\u1354\u1355\u1356\u1357\u1358\u1359\u135A\u1380\u1381\u1382\u1383\u1384\u1385\u1386\u1387\u1388\u1389\u138A\u138B\u138C\u138D\u138E\u138F\u13A0\u13A1\u13A2\u13A3\u13A4\u13A5\u13A6\u13A7\u13A8\u13A9\u13AA\u13AB\u13AC\u13AD\u13AE\u13AF\u13B0\u13B1\u13B2\u13B3\u13B4\u13B5\u13B6\u13B7\u13B8\u13B9\u13BA\u13BB\u13BC\u13BD\u13BE\u13BF\u13C0\u13C1\u13C2\u13C3\u13C4\u13C5\u13C6\u13C7\u13C8\u13C9\u13CA\u13CB\u13CC\u13CD\u13CE\u13CF\u13D0\u13D1\u13D2\u13D3\u13D4\u13D5\u13D6\u13D7\u13D8\u13D9\u13DA\u13DB\u13DC\u13DD\u13DE\u13DF\u13E0\u13E1\u13E2\u13E3\u13E4\u13E5\u13E6\u13E7\u13E8\u13E9\u13EA\u13EB\u13EC\u13ED\u13EE\u13EF\u13F0\u13F1\u13F2\u13F3\u13F4\u1401\u1402\u1403\u1404\u1405\u1406\u1407\u1408\u1409\u140A\u140B\u140C\u140D\u140E\u140F\u1410\u1411\u1412\u1413\u1414\u1415\u1416\u1417\u1418\u1419\u141A\u141B\u141C\u141D\u141E\u141F\u1420\u1421\u1422\u1423\u1424\u1425\u1426\u1427\u1428\u1429\u142A\u142B\u142C\u142D\u142E\u142F\u1430\u1431\u1432\u1433\u1434\u1435\u1436\u1437\u1438\u1439\u143A\u143B\u143C\u143D\u143E\u143F\u1440\u1441\u1442\u1443\u1444\u1445\u1446\u1447\u1448\u1449\u144A\u144B\u144C\u144D\u144E\u144F\u1450\u1451\u1452\u1453\u1454\u1455\u1456\u1457\u1458\u1459\u145A\u145B\u145C\u145D\u145E\u145F\u1460\u1461\u1462\u1463\u1464\u1465\u1466\u1467\u1468\u1469\u146A\u146B\u146C\u146D\u146E\u146F\u1470\u1471\u1472\u1473\u1474\u1475\u1476\u1477\u1478\u1479\u147A\u147B\u147C\u147D\u147E\u147F\u1480\u1481\u1482\u1483\u1484\u1485\u1486\u1487\u1488\u1489\u148A\u148B\u148C\u148D\u148E\u148F\u1490\u1491\u1492\u1493\u1494\u1495\u1496\u1497\u1498\u1499\u149A\u149B\u149C\u149D\u149E\u149F\u14A0\u14A1\u14A2\u14A3\u14A4\u14A5\u14A6\u14A7\u14A8\u14A9\u14AA\u14AB\u14AC\u14AD\u14AE\u14AF\u14B0\u14B1\u14B2\u14B3\u14B4\u14B5\u14B6\u14B7\u14B8\u14B9\u14BA\u14BB\u14BC\u14BD\u14BE\u14BF\u14C0\u14C1\u14C2\u14C3\u14C4\u14C5\u14C6\u14C7\u14C8\u14C9\u14CA\u14CB\u14CC\u14CD\u14CE\u14CF\u14D0\u14D1\u14D2\u14D3\u14D4\u14D5\u14D6\u14D7\u14D8\u14D9\u14DA\u14DB\u14DC\u14DD\u14DE\u14DF\u14E0\u14E1\u14E2\u14E3\u14E4\u14E5\u14E6\u14E7\u14E8\u14E9\u14EA\u14EB\u14EC\u14ED\u14EE\u14EF\u14F0\u14F1\u14F2\u14F3\u14F4\u14F5\u14F6\u14F7\u14F8\u14F9\u14FA\u14FB\u14FC\u14FD\u14FE\u14FF\u1500\u1501\u1502\u1503\u1504\u1505\u1506\u1507\u1508\u1509\u150A\u150B\u150C\u150D\u150E\u150F\u1510\u1511\u1512\u1513\u1514\u1515\u1516\u1517\u1518\u1519\u151A\u151B\u151C\u151D\u151E\u151F\u1520\u1521\u1522\u1523\u1524\u1525\u1526\u1527\u1528\u1529\u152A\u152B\u152C\u152D\u152E\u152F\u1530\u1531\u1532\u1533\u1534\u1535\u1536\u1537\u1538\u1539\u153A\u153B\u153C\u153D\u153E\u153F\u1540\u1541\u1542\u1543\u1544\u1545\u1546\u1547\u1548\u1549\u154A\u154B\u154C\u154D\u154E\u154F\u1550\u1551\u1552\u1553\u1554\u1555\u1556\u1557\u1558\u1559\u155A\u155B\u155C\u155D\u155E\u155F\u1560\u1561\u1562\u1563\u1564\u1565\u1566\u1567\u1568\u1569\u156A\u156B\u156C\u156D\u156E\u156F\u1570\u1571\u1572\u1573\u1574\u1575\u1576\u1577\u1578\u1579\u157A\u157B\u157C\u157D\u157E\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u1586\u1587\u1588\u1589\u158A\u158B\u158C\u158D\u158E\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1596\u1597\u1598\u1599\u159A\u159B\u159C\u159D\u159E\u159F\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u15A7\u15A8\u15A9\u15AA\u15AB\u15AC\u15AD\u15AE\u15AF\u15B0\u15B1\u15B2\u15B3\u15B4\u15B5\u15B6\u15B7\u15B8\u15B9\u15BA\u15BB\u15BC\u15BD\u15BE\u15BF\u15C0\u15C1\u15C2\u15C3\u15C4\u15C5\u15C6\u15C7\u15C8\u15C9\u15CA\u15CB\u15CC\u15CD\u15CE\u15CF\u15D0\u15D1\u15D2\u15D3\u15D4\u15D5\u15D6\u15D7\u15D8\u15D9\u15DA\u15DB\u15DC\u15DD\u15DE\u15DF\u15E0\u15E1\u15E2\u15E3\u15E4\u15E5\u15E6\u15E7\u15E8\u15E9\u15EA\u15EB\u15EC\u15ED\u15EE\u15EF\u15F0\u15F1\u15F2\u15F3\u15F4\u15F5\u15F6\u15F7\u15F8\u15F9\u15FA\u15FB\u15FC\u15FD\u15FE\u15FF\u1600\u1601\u1602\u1603\u1604\u1605\u1606\u1607\u1608\u1609\u160A\u160B\u160C\u160D\u160E\u160F\u1610\u1611\u1612\u1613\u1614\u1615\u1616\u1617\u1618\u1619\u161A\u161B\u161C\u161D\u161E\u161F\u1620\u1621\u1622\u1623\u1624\u1625\u1626\u1627\u1628\u1629\u162A\u162B\u162C\u162D\u162E\u162F\u1630\u1631\u1632\u1633\u1634\u1635\u1636\u1637\u1638\u1639\u163A\u163B\u163C\u163D\u163E\u163F\u1640\u1641\u1642\u1643\u1644\u1645\u1646\u1647\u1648\u1649\u164A\u164B\u164C\u164D\u164E\u164F\u1650\u1651\u1652\u1653\u1654\u1655\u1656\u1657\u1658\u1659\u165A\u165B\u165C\u165D\u165E\u165F\u1660\u1661\u1662\u1663\u1664\u1665\u1666\u1667\u1668\u1669\u166A\u166B\u166C\u166F\u1670\u1671\u1672\u1673\u1674\u1675\u1676\u1681\u1682\u1683\u1684\u1685\u1686\u1687\u1688\u1689\u168A\u168B\u168C\u168D\u168E\u168F\u1690\u1691\u1692\u1693\u1694\u1695\u1696\u1697\u1698\u1699\u169A\u16A0\u16A1\u16A2\u16A3\u16A4\u16A5\u16A6\u16A7\u16A8\u16A9\u16AA\u16AB\u16AC\u16AD\u16AE\u16AF\u16B0\u16B1\u16B2\u16B3\u16B4\u16B5\u16B6\u16B7\u16B8\u16B9\u16BA\u16BB\u16BC\u16BD\u16BE\u16BF\u16C0\u16C1\u16C2\u16C3\u16C4\u16C5\u16C6\u16C7\u16C8\u16C9\u16CA\u16CB\u16CC\u16CD\u16CE\u16CF\u16D0\u16D1\u16D2\u16D3\u16D4\u16D5\u16D6\u16D7\u16D8\u16D9\u16DA\u16DB\u16DC\u16DD\u16DE\u16DF\u16E0\u16E1\u16E2\u16E3\u16E4\u16E5\u16E6\u16E7\u16E8\u16E9\u16EA\u1700\u1701\u1702\u1703\u1704\u1705\u1706\u1707\u1708\u1709\u170A\u170B\u170C\u170E\u170F\u1710\u1711\u1720\u1721\u1722\u1723\u1724\u1725\u1726\u1727\u1728\u1729\u172A\u172B\u172C\u172D\u172E\u172F\u1730\u1731\u1740\u1741\u1742\u1743\u1744\u1745\u1746\u1747\u1748\u1749\u174A\u174B\u174C\u174D\u174E\u174F\u1750\u1751\u1760\u1761\u1762\u1763\u1764\u1765\u1766\u1767\u1768\u1769\u176A\u176B\u176C\u176E\u176F\u1770\u1780\u1781\u1782\u1783\u1784\u1785\u1786\u1787\u1788\u1789\u178A\u178B\u178C\u178D\u178E\u178F\u1790\u1791\u1792\u1793\u1794\u1795\u1796\u1797\u1798\u1799\u179A\u179B\u179C\u179D\u179E\u179F\u17A0\u17A1\u17A2\u17A3\u17A4\u17A5\u17A6\u17A7\u17A8\u17A9\u17AA\u17AB\u17AC\u17AD\u17AE\u17AF\u17B0\u17B1\u17B2\u17B3\u17DC\u1820\u1821\u1822\u1823\u1824\u1825\u1826\u1827\u1828\u1829\u182A\u182B\u182C\u182D\u182E\u182F\u1830\u1831\u1832\u1833\u1834\u1835\u1836\u1837\u1838\u1839\u183A\u183B\u183C\u183D\u183E\u183F\u1840\u1841\u1842\u1844\u1845\u1846\u1847\u1848\u1849\u184A\u184B\u184C\u184D\u184E\u184F\u1850\u1851\u1852\u1853\u1854\u1855\u1856\u1857\u1858\u1859\u185A\u185B\u185C\u185D\u185E\u185F\u1860\u1861\u1862\u1863\u1864\u1865\u1866\u1867\u1868\u1869\u186A\u186B\u186C\u186D\u186E\u186F\u1870\u1871\u1872\u1873\u1874\u1875\u1876\u1877\u1880\u1881\u1882\u1883\u1884\u1885\u1886\u1887\u1888\u1889\u188A\u188B\u188C\u188D\u188E\u188F\u1890\u1891\u1892\u1893\u1894\u1895\u1896\u1897\u1898\u1899\u189A\u189B\u189C\u189D\u189E\u189F\u18A0\u18A1\u18A2\u18A3\u18A4\u18A5\u18A6\u18A7\u18A8\u18AA\u1900\u1901\u1902\u1903\u1904\u1905\u1906\u1907\u1908\u1909\u190A\u190B\u190C\u190D\u190E\u190F\u1910\u1911\u1912\u1913\u1914\u1915\u1916\u1917\u1918\u1919\u191A\u191B\u191C\u1950\u1951\u1952\u1953\u1954\u1955\u1956\u1957\u1958\u1959\u195A\u195B\u195C\u195D\u195E\u195F\u1960\u1961\u1962\u1963\u1964\u1965\u1966\u1967\u1968\u1969\u196A\u196B\u196C\u196D\u1970\u1971\u1972\u1973\u1974\u1980\u1981\u1982\u1983\u1984\u1985\u1986\u1987\u1988\u1989\u198A\u198B\u198C\u198D\u198E\u198F\u1990\u1991\u1992\u1993\u1994\u1995\u1996\u1997\u1998\u1999\u199A\u199B\u199C\u199D\u199E\u199F\u19A0\u19A1\u19A2\u19A3\u19A4\u19A5\u19A6\u19A7\u19A8\u19A9\u19C1\u19C2\u19C3\u19C4\u19C5\u19C6\u19C7\u1A00\u1A01\u1A02\u1A03\u1A04\u1A05\u1A06\u1A07\u1A08\u1A09\u1A0A\u1A0B\u1A0C\u1A0D\u1A0E\u1A0F\u1A10\u1A11\u1A12\u1A13\u1A14\u1A15\u1A16\u1B05\u1B06\u1B07\u1B08\u1B09\u1B0A\u1B0B\u1B0C\u1B0D\u1B0E\u1B0F\u1B10\u1B11\u1B12\u1B13\u1B14\u1B15\u1B16\u1B17\u1B18\u1B19\u1B1A\u1B1B\u1B1C\u1B1D\u1B1E\u1B1F\u1B20\u1B21\u1B22\u1B23\u1B24\u1B25\u1B26\u1B27\u1B28\u1B29\u1B2A\u1B2B\u1B2C\u1B2D\u1B2E\u1B2F\u1B30\u1B31\u1B32\u1B33\u1B45\u1B46\u1B47\u1B48\u1B49\u1B4A\u1B4B\u1B83\u1B84\u1B85\u1B86\u1B87\u1B88\u1B89\u1B8A\u1B8B\u1B8C\u1B8D\u1B8E\u1B8F\u1B90\u1B91\u1B92\u1B93\u1B94\u1B95\u1B96\u1B97\u1B98\u1B99\u1B9A\u1B9B\u1B9C\u1B9D\u1B9E\u1B9F\u1BA0\u1BAE\u1BAF\u1C00\u1C01\u1C02\u1C03\u1C04\u1C05\u1C06\u1C07\u1C08\u1C09\u1C0A\u1C0B\u1C0C\u1C0D\u1C0E\u1C0F\u1C10\u1C11\u1C12\u1C13\u1C14\u1C15\u1C16\u1C17\u1C18\u1C19\u1C1A\u1C1B\u1C1C\u1C1D\u1C1E\u1C1F\u1C20\u1C21\u1C22\u1C23\u1C4D\u1C4E\u1C4F\u1C5A\u1C5B\u1C5C\u1C5D\u1C5E\u1C5F\u1C60\u1C61\u1C62\u1C63\u1C64\u1C65\u1C66\u1C67\u1C68\u1C69\u1C6A\u1C6B\u1C6C\u1C6D\u1C6E\u1C6F\u1C70\u1C71\u1C72\u1C73\u1C74\u1C75\u1C76\u1C77\u2135\u2136\u2137\u2138\u2D30\u2D31\u2D32\u2D33\u2D34\u2D35\u2D36\u2D37\u2D38\u2D39\u2D3A\u2D3B\u2D3C\u2D3D\u2D3E\u2D3F\u2D40\u2D41\u2D42\u2D43\u2D44\u2D45\u2D46\u2D47\u2D48\u2D49\u2D4A\u2D4B\u2D4C\u2D4D\u2D4E\u2D4F\u2D50\u2D51\u2D52\u2D53\u2D54\u2D55\u2D56\u2D57\u2D58\u2D59\u2D5A\u2D5B\u2D5C\u2D5D\u2D5E\u2D5F\u2D60\u2D61\u2D62\u2D63\u2D64\u2D65\u2D80\u2D81\u2D82\u2D83\u2D84\u2D85\u2D86\u2D87\u2D88\u2D89\u2D8A\u2D8B\u2D8C\u2D8D\u2D8E\u2D8F\u2D90\u2D91\u2D92\u2D93\u2D94\u2D95\u2D96\u2DA0\u2DA1\u2DA2\u2DA3\u2DA4\u2DA5\u2DA6\u2DA8\u2DA9\u2DAA\u2DAB\u2DAC\u2DAD\u2DAE\u2DB0\u2DB1\u2DB2\u2DB3\u2DB4\u2DB5\u2DB6\u2DB8\u2DB9\u2DBA\u2DBB\u2DBC\u2DBD\u2DBE\u2DC0\u2DC1\u2DC2\u2DC3\u2DC4\u2DC5\u2DC6\u2DC8\u2DC9\u2DCA\u2DCB\u2DCC\u2DCD\u2DCE\u2DD0\u2DD1\u2DD2\u2DD3\u2DD4\u2DD5\u2DD6\u2DD8\u2DD9\u2DDA\u2DDB\u2DDC\u2DDD\u2DDE\u3006\u303C\u3041\u3042\u3043\u3044\u3045\u3046\u3047\u3048\u3049\u304A\u304B\u304C\u304D\u304E\u304F\u3050\u3051\u3052\u3053\u3054\u3055\u3056\u3057\u3058\u3059\u305A\u305B\u305C\u305D\u305E\u305F\u3060\u3061\u3062\u3063\u3064\u3065\u3066\u3067\u3068\u3069\u306A\u306B\u306C\u306D\u306E\u306F\u3070\u3071\u3072\u3073\u3074\u3075\u3076\u3077\u3078\u3079\u307A\u307B\u307C\u307D\u307E\u307F\u3080\u3081\u3082\u3083\u3084\u3085\u3086\u3087\u3088\u3089\u308A\u308B\u308C\u308D\u308E\u308F\u3090\u3091\u3092\u3093\u3094\u3095\u3096\u309F\u30A1\u30A2\u30A3\u30A4\u30A5\u30A6\u30A7\u30A8\u30A9\u30AA\u30AB\u30AC\u30AD\u30AE\u30AF\u30B0\u30B1\u30B2\u30B3\u30B4\u30B5\u30B6\u30B7\u30B8\u30B9\u30BA\u30BB\u30BC\u30BD\u30BE\u30BF\u30C0\u30C1\u30C2\u30C3\u30C4\u30C5\u30C6\u30C7\u30C8\u30C9\u30CA\u30CB\u30CC\u30CD\u30CE\u30CF\u30D0\u30D1\u30D2\u30D3\u30D4\u30D5\u30D6\u30D7\u30D8\u30D9\u30DA\u30DB\u30DC\u30DD\u30DE\u30DF\u30E0\u30E1\u30E2\u30E3\u30E4\u30E5\u30E6\u30E7\u30E8\u30E9\u30EA\u30EB\u30EC\u30ED\u30EE\u30EF\u30F0\u30F1\u30F2\u30F3\u30F4\u30F5\u30F6\u30F7\u30F8\u30F9\u30FA\u30FF\u3105\u3106\u3107\u3108\u3109\u310A\u310B\u310C\u310D\u310E\u310F\u3110\u3111\u3112\u3113\u3114\u3115\u3116\u3117\u3118\u3119\u311A\u311B\u311C\u311D\u311E\u311F\u3120\u3121\u3122\u3123\u3124\u3125\u3126\u3127\u3128\u3129\u312A\u312B\u312C\u312D\u3131\u3132\u3133\u3134\u3135\u3136\u3137\u3138\u3139\u313A\u313B\u313C\u313D\u313E\u313F\u3140\u3141\u3142\u3143\u3144\u3145\u3146\u3147\u3148\u3149\u314A\u314B\u314C\u314D\u314E\u314F\u3150\u3151\u3152\u3153\u3154\u3155\u3156\u3157\u3158\u3159\u315A\u315B\u315C\u315D\u315E\u315F\u3160\u3161\u3162\u3163\u3164\u3165\u3166\u3167\u3168\u3169\u316A\u316B\u316C\u316D\u316E\u316F\u3170\u3171\u3172\u3173\u3174\u3175\u3176\u3177\u3178\u3179\u317A\u317B\u317C\u317D\u317E\u317F\u3180\u3181\u3182\u3183\u3184\u3185\u3186\u3187\u3188\u3189\u318A\u318B\u318C\u318D\u318E\u31A0\u31A1\u31A2\u31A3\u31A4\u31A5\u31A6\u31A7\u31A8\u31A9\u31AA\u31AB\u31AC\u31AD\u31AE\u31AF\u31B0\u31B1\u31B2\u31B3\u31B4\u31B5\u31B6\u31B7\u31F0\u31F1\u31F2\u31F3\u31F4\u31F5\u31F6\u31F7\u31F8\u31F9\u31FA\u31FB\u31FC\u31FD\u31FE\u31FF\u3400\u4DB5\u4E00\u9FC3\uA000\uA001\uA002\uA003\uA004\uA005\uA006\uA007\uA008\uA009\uA00A\uA00B\uA00C\uA00D\uA00E\uA00F\uA010\uA011\uA012\uA013\uA014\uA016\uA017\uA018\uA019\uA01A\uA01B\uA01C\uA01D\uA01E\uA01F\uA020\uA021\uA022\uA023\uA024\uA025\uA026\uA027\uA028\uA029\uA02A\uA02B\uA02C\uA02D\uA02E\uA02F\uA030\uA031\uA032\uA033\uA034\uA035\uA036\uA037\uA038\uA039\uA03A\uA03B\uA03C\uA03D\uA03E\uA03F\uA040\uA041\uA042\uA043\uA044\uA045\uA046\uA047\uA048\uA049\uA04A\uA04B\uA04C\uA04D\uA04E\uA04F\uA050\uA051\uA052\uA053\uA054\uA055\uA056\uA057\uA058\uA059\uA05A\uA05B\uA05C\uA05D\uA05E\uA05F\uA060\uA061\uA062\uA063\uA064\uA065\uA066\uA067\uA068\uA069\uA06A\uA06B\uA06C\uA06D\uA06E\uA06F\uA070\uA071\uA072\uA073\uA074\uA075\uA076\uA077\uA078\uA079\uA07A\uA07B\uA07C\uA07D\uA07E\uA07F\uA080\uA081\uA082\uA083\uA084\uA085\uA086\uA087\uA088\uA089\uA08A\uA08B\uA08C\uA08D\uA08E\uA08F\uA090\uA091\uA092\uA093\uA094\uA095\uA096\uA097\uA098\uA099\uA09A\uA09B\uA09C\uA09D\uA09E\uA09F\uA0A0\uA0A1\uA0A2\uA0A3\uA0A4\uA0A5\uA0A6\uA0A7\uA0A8\uA0A9\uA0AA\uA0AB\uA0AC\uA0AD\uA0AE\uA0AF\uA0B0\uA0B1\uA0B2\uA0B3\uA0B4\uA0B5\uA0B6\uA0B7\uA0B8\uA0B9\uA0BA\uA0BB\uA0BC\uA0BD\uA0BE\uA0BF\uA0C0\uA0C1\uA0C2\uA0C3\uA0C4\uA0C5\uA0C6\uA0C7\uA0C8\uA0C9\uA0CA\uA0CB\uA0CC\uA0CD\uA0CE\uA0CF\uA0D0\uA0D1\uA0D2\uA0D3\uA0D4\uA0D5\uA0D6\uA0D7\uA0D8\uA0D9\uA0DA\uA0DB\uA0DC\uA0DD\uA0DE\uA0DF\uA0E0\uA0E1\uA0E2\uA0E3\uA0E4\uA0E5\uA0E6\uA0E7\uA0E8\uA0E9\uA0EA\uA0EB\uA0EC\uA0ED\uA0EE\uA0EF\uA0F0\uA0F1\uA0F2\uA0F3\uA0F4\uA0F5\uA0F6\uA0F7\uA0F8\uA0F9\uA0FA\uA0FB\uA0FC\uA0FD\uA0FE\uA0FF\uA100\uA101\uA102\uA103\uA104\uA105\uA106\uA107\uA108\uA109\uA10A\uA10B\uA10C\uA10D\uA10E\uA10F\uA110\uA111\uA112\uA113\uA114\uA115\uA116\uA117\uA118\uA119\uA11A\uA11B\uA11C\uA11D\uA11E\uA11F\uA120\uA121\uA122\uA123\uA124\uA125\uA126\uA127\uA128\uA129\uA12A\uA12B\uA12C\uA12D\uA12E\uA12F\uA130\uA131\uA132\uA133\uA134\uA135\uA136\uA137\uA138\uA139\uA13A\uA13B\uA13C\uA13D\uA13E\uA13F\uA140\uA141\uA142\uA143\uA144\uA145\uA146\uA147\uA148\uA149\uA14A\uA14B\uA14C\uA14D\uA14E\uA14F\uA150\uA151\uA152\uA153\uA154\uA155\uA156\uA157\uA158\uA159\uA15A\uA15B\uA15C\uA15D\uA15E\uA15F\uA160\uA161\uA162\uA163\uA164\uA165\uA166\uA167\uA168\uA169\uA16A\uA16B\uA16C\uA16D\uA16E\uA16F\uA170\uA171\uA172\uA173\uA174\uA175\uA176\uA177\uA178\uA179\uA17A\uA17B\uA17C\uA17D\uA17E\uA17F\uA180\uA181\uA182\uA183\uA184\uA185\uA186\uA187\uA188\uA189\uA18A\uA18B\uA18C\uA18D\uA18E\uA18F\uA190\uA191\uA192\uA193\uA194\uA195\uA196\uA197\uA198\uA199\uA19A\uA19B\uA19C\uA19D\uA19E\uA19F\uA1A0\uA1A1\uA1A2\uA1A3\uA1A4\uA1A5\uA1A6\uA1A7\uA1A8\uA1A9\uA1AA\uA1AB\uA1AC\uA1AD\uA1AE\uA1AF\uA1B0\uA1B1\uA1B2\uA1B3\uA1B4\uA1B5\uA1B6\uA1B7\uA1B8\uA1B9\uA1BA\uA1BB\uA1BC\uA1BD\uA1BE\uA1BF\uA1C0\uA1C1\uA1C2\uA1C3\uA1C4\uA1C5\uA1C6\uA1C7\uA1C8\uA1C9\uA1CA\uA1CB\uA1CC\uA1CD\uA1CE\uA1CF\uA1D0\uA1D1\uA1D2\uA1D3\uA1D4\uA1D5\uA1D6\uA1D7\uA1D8\uA1D9\uA1DA\uA1DB\uA1DC\uA1DD\uA1DE\uA1DF\uA1E0\uA1E1\uA1E2\uA1E3\uA1E4\uA1E5\uA1E6\uA1E7\uA1E8\uA1E9\uA1EA\uA1EB\uA1EC\uA1ED\uA1EE\uA1EF\uA1F0\uA1F1\uA1F2\uA1F3\uA1F4\uA1F5\uA1F6\uA1F7\uA1F8\uA1F9\uA1FA\uA1FB\uA1FC\uA1FD\uA1FE\uA1FF\uA200\uA201\uA202\uA203\uA204\uA205\uA206\uA207\uA208\uA209\uA20A\uA20B\uA20C\uA20D\uA20E\uA20F\uA210\uA211\uA212\uA213\uA214\uA215\uA216\uA217\uA218\uA219\uA21A\uA21B\uA21C\uA21D\uA21E\uA21F\uA220\uA221\uA222\uA223\uA224\uA225\uA226\uA227\uA228\uA229\uA22A\uA22B\uA22C\uA22D\uA22E\uA22F\uA230\uA231\uA232\uA233\uA234\uA235\uA236\uA237\uA238\uA239\uA23A\uA23B\uA23C\uA23D\uA23E\uA23F\uA240\uA241\uA242\uA243\uA244\uA245\uA246\uA247\uA248\uA249\uA24A\uA24B\uA24C\uA24D\uA24E\uA24F\uA250\uA251\uA252\uA253\uA254\uA255\uA256\uA257\uA258\uA259\uA25A\uA25B\uA25C\uA25D\uA25E\uA25F\uA260\uA261\uA262\uA263\uA264\uA265\uA266\uA267\uA268\uA269\uA26A\uA26B\uA26C\uA26D\uA26E\uA26F\uA270\uA271\uA272\uA273\uA274\uA275\uA276\uA277\uA278\uA279\uA27A\uA27B\uA27C\uA27D\uA27E\uA27F\uA280\uA281\uA282\uA283\uA284\uA285\uA286\uA287\uA288\uA289\uA28A\uA28B\uA28C\uA28D\uA28E\uA28F\uA290\uA291\uA292\uA293\uA294\uA295\uA296\uA297\uA298\uA299\uA29A\uA29B\uA29C\uA29D\uA29E\uA29F\uA2A0\uA2A1\uA2A2\uA2A3\uA2A4\uA2A5\uA2A6\uA2A7\uA2A8\uA2A9\uA2AA\uA2AB\uA2AC\uA2AD\uA2AE\uA2AF\uA2B0\uA2B1\uA2B2\uA2B3\uA2B4\uA2B5\uA2B6\uA2B7\uA2B8\uA2B9\uA2BA\uA2BB\uA2BC\uA2BD\uA2BE\uA2BF\uA2C0\uA2C1\uA2C2\uA2C3\uA2C4\uA2C5\uA2C6\uA2C7\uA2C8\uA2C9\uA2CA\uA2CB\uA2CC\uA2CD\uA2CE\uA2CF\uA2D0\uA2D1\uA2D2\uA2D3\uA2D4\uA2D5\uA2D6\uA2D7\uA2D8\uA2D9\uA2DA\uA2DB\uA2DC\uA2DD\uA2DE\uA2DF\uA2E0\uA2E1\uA2E2\uA2E3\uA2E4\uA2E5\uA2E6\uA2E7\uA2E8\uA2E9\uA2EA\uA2EB\uA2EC\uA2ED\uA2EE\uA2EF\uA2F0\uA2F1\uA2F2\uA2F3\uA2F4\uA2F5\uA2F6\uA2F7\uA2F8\uA2F9\uA2FA\uA2FB\uA2FC\uA2FD\uA2FE\uA2FF\uA300\uA301\uA302\uA303\uA304\uA305\uA306\uA307\uA308\uA309\uA30A\uA30B\uA30C\uA30D\uA30E\uA30F\uA310\uA311\uA312\uA313\uA314\uA315\uA316\uA317\uA318\uA319\uA31A\uA31B\uA31C\uA31D\uA31E\uA31F\uA320\uA321\uA322\uA323\uA324\uA325\uA326\uA327\uA328\uA329\uA32A\uA32B\uA32C\uA32D\uA32E\uA32F\uA330\uA331\uA332\uA333\uA334\uA335\uA336\uA337\uA338\uA339\uA33A\uA33B\uA33C\uA33D\uA33E\uA33F\uA340\uA341\uA342\uA343\uA344\uA345\uA346\uA347\uA348\uA349\uA34A\uA34B\uA34C\uA34D\uA34E\uA34F\uA350\uA351\uA352\uA353\uA354\uA355\uA356\uA357\uA358\uA359\uA35A\uA35B\uA35C\uA35D\uA35E\uA35F\uA360\uA361\uA362\uA363\uA364\uA365\uA366\uA367\uA368\uA369\uA36A\uA36B\uA36C\uA36D\uA36E\uA36F\uA370\uA371\uA372\uA373\uA374\uA375\uA376\uA377\uA378\uA379\uA37A\uA37B\uA37C\uA37D\uA37E\uA37F\uA380\uA381\uA382\uA383\uA384\uA385\uA386\uA387\uA388\uA389\uA38A\uA38B\uA38C\uA38D\uA38E\uA38F\uA390\uA391\uA392\uA393\uA394\uA395\uA396\uA397\uA398\uA399\uA39A\uA39B\uA39C\uA39D\uA39E\uA39F\uA3A0\uA3A1\uA3A2\uA3A3\uA3A4\uA3A5\uA3A6\uA3A7\uA3A8\uA3A9\uA3AA\uA3AB\uA3AC\uA3AD\uA3AE\uA3AF\uA3B0\uA3B1\uA3B2\uA3B3\uA3B4\uA3B5\uA3B6\uA3B7\uA3B8\uA3B9\uA3BA\uA3BB\uA3BC\uA3BD\uA3BE\uA3BF\uA3C0\uA3C1\uA3C2\uA3C3\uA3C4\uA3C5\uA3C6\uA3C7\uA3C8\uA3C9\uA3CA\uA3CB\uA3CC\uA3CD\uA3CE\uA3CF\uA3D0\uA3D1\uA3D2\uA3D3\uA3D4\uA3D5\uA3D6\uA3D7\uA3D8\uA3D9\uA3DA\uA3DB\uA3DC\uA3DD\uA3DE\uA3DF\uA3E0\uA3E1\uA3E2\uA3E3\uA3E4\uA3E5\uA3E6\uA3E7\uA3E8\uA3E9\uA3EA\uA3EB\uA3EC\uA3ED\uA3EE\uA3EF\uA3F0\uA3F1\uA3F2\uA3F3\uA3F4\uA3F5\uA3F6\uA3F7\uA3F8\uA3F9\uA3FA\uA3FB\uA3FC\uA3FD\uA3FE\uA3FF\uA400\uA401\uA402\uA403\uA404\uA405\uA406\uA407\uA408\uA409\uA40A\uA40B\uA40C\uA40D\uA40E\uA40F\uA410\uA411\uA412\uA413\uA414\uA415\uA416\uA417\uA418\uA419\uA41A\uA41B\uA41C\uA41D\uA41E\uA41F\uA420\uA421\uA422\uA423\uA424\uA425\uA426\uA427\uA428\uA429\uA42A\uA42B\uA42C\uA42D\uA42E\uA42F\uA430\uA431\uA432\uA433\uA434\uA435\uA436\uA437\uA438\uA439\uA43A\uA43B\uA43C\uA43D\uA43E\uA43F\uA440\uA441\uA442\uA443\uA444\uA445\uA446\uA447\uA448\uA449\uA44A\uA44B\uA44C\uA44D\uA44E\uA44F\uA450\uA451\uA452\uA453\uA454\uA455\uA456\uA457\uA458\uA459\uA45A\uA45B\uA45C\uA45D\uA45E\uA45F\uA460\uA461\uA462\uA463\uA464\uA465\uA466\uA467\uA468\uA469\uA46A\uA46B\uA46C\uA46D\uA46E\uA46F\uA470\uA471\uA472\uA473\uA474\uA475\uA476\uA477\uA478\uA479\uA47A\uA47B\uA47C\uA47D\uA47E\uA47F\uA480\uA481\uA482\uA483\uA484\uA485\uA486\uA487\uA488\uA489\uA48A\uA48B\uA48C\uA500\uA501\uA502\uA503\uA504\uA505\uA506\uA507\uA508\uA509\uA50A\uA50B\uA50C\uA50D\uA50E\uA50F\uA510\uA511\uA512\uA513\uA514\uA515\uA516\uA517\uA518\uA519\uA51A\uA51B\uA51C\uA51D\uA51E\uA51F\uA520\uA521\uA522\uA523\uA524\uA525\uA526\uA527\uA528\uA529\uA52A\uA52B\uA52C\uA52D\uA52E\uA52F\uA530\uA531\uA532\uA533\uA534\uA535\uA536\uA537\uA538\uA539\uA53A\uA53B\uA53C\uA53D\uA53E\uA53F\uA540\uA541\uA542\uA543\uA544\uA545\uA546\uA547\uA548\uA549\uA54A\uA54B\uA54C\uA54D\uA54E\uA54F\uA550\uA551\uA552\uA553\uA554\uA555\uA556\uA557\uA558\uA559\uA55A\uA55B\uA55C\uA55D\uA55E\uA55F\uA560\uA561\uA562\uA563\uA564\uA565\uA566\uA567\uA568\uA569\uA56A\uA56B\uA56C\uA56D\uA56E\uA56F\uA570\uA571\uA572\uA573\uA574\uA575\uA576\uA577\uA578\uA579\uA57A\uA57B\uA57C\uA57D\uA57E\uA57F\uA580\uA581\uA582\uA583\uA584\uA585\uA586\uA587\uA588\uA589\uA58A\uA58B\uA58C\uA58D\uA58E\uA58F\uA590\uA591\uA592\uA593\uA594\uA595\uA596\uA597\uA598\uA599\uA59A\uA59B\uA59C\uA59D\uA59E\uA59F\uA5A0\uA5A1\uA5A2\uA5A3\uA5A4\uA5A5\uA5A6\uA5A7\uA5A8\uA5A9\uA5AA\uA5AB\uA5AC\uA5AD\uA5AE\uA5AF\uA5B0\uA5B1\uA5B2\uA5B3\uA5B4\uA5B5\uA5B6\uA5B7\uA5B8\uA5B9\uA5BA\uA5BB\uA5BC\uA5BD\uA5BE\uA5BF\uA5C0\uA5C1\uA5C2\uA5C3\uA5C4\uA5C5\uA5C6\uA5C7\uA5C8\uA5C9\uA5CA\uA5CB\uA5CC\uA5CD\uA5CE\uA5CF\uA5D0\uA5D1\uA5D2\uA5D3\uA5D4\uA5D5\uA5D6\uA5D7\uA5D8\uA5D9\uA5DA\uA5DB\uA5DC\uA5DD\uA5DE\uA5DF\uA5E0\uA5E1\uA5E2\uA5E3\uA5E4\uA5E5\uA5E6\uA5E7\uA5E8\uA5E9\uA5EA\uA5EB\uA5EC\uA5ED\uA5EE\uA5EF\uA5F0\uA5F1\uA5F2\uA5F3\uA5F4\uA5F5\uA5F6\uA5F7\uA5F8\uA5F9\uA5FA\uA5FB\uA5FC\uA5FD\uA5FE\uA5FF\uA600\uA601\uA602\uA603\uA604\uA605\uA606\uA607\uA608\uA609\uA60A\uA60B\uA610\uA611\uA612\uA613\uA614\uA615\uA616\uA617\uA618\uA619\uA61A\uA61B\uA61C\uA61D\uA61E\uA61F\uA62A\uA62B\uA66E\uA7FB\uA7FC\uA7FD\uA7FE\uA7FF\uA800\uA801\uA803\uA804\uA805\uA807\uA808\uA809\uA80A\uA80C\uA80D\uA80E\uA80F\uA810\uA811\uA812\uA813\uA814\uA815\uA816\uA817\uA818\uA819\uA81A\uA81B\uA81C\uA81D\uA81E\uA81F\uA820\uA821\uA822\uA840\uA841\uA842\uA843\uA844\uA845\uA846\uA847\uA848\uA849\uA84A\uA84B\uA84C\uA84D\uA84E\uA84F\uA850\uA851\uA852\uA853\uA854\uA855\uA856\uA857\uA858\uA859\uA85A\uA85B\uA85C\uA85D\uA85E\uA85F\uA860\uA861\uA862\uA863\uA864\uA865\uA866\uA867\uA868\uA869\uA86A\uA86B\uA86C\uA86D\uA86E\uA86F\uA870\uA871\uA872\uA873\uA882\uA883\uA884\uA885\uA886\uA887\uA888\uA889\uA88A\uA88B\uA88C\uA88D\uA88E\uA88F\uA890\uA891\uA892\uA893\uA894\uA895\uA896\uA897\uA898\uA899\uA89A\uA89B\uA89C\uA89D\uA89E\uA89F\uA8A0\uA8A1\uA8A2\uA8A3\uA8A4\uA8A5\uA8A6\uA8A7\uA8A8\uA8A9\uA8AA\uA8AB\uA8AC\uA8AD\uA8AE\uA8AF\uA8B0\uA8B1\uA8B2\uA8B3\uA90A\uA90B\uA90C\uA90D\uA90E\uA90F\uA910\uA911\uA912\uA913\uA914\uA915\uA916\uA917\uA918\uA919\uA91A\uA91B\uA91C\uA91D\uA91E\uA91F\uA920\uA921\uA922\uA923\uA924\uA925\uA930\uA931\uA932\uA933\uA934\uA935\uA936\uA937\uA938\uA939\uA93A\uA93B\uA93C\uA93D\uA93E\uA93F\uA940\uA941\uA942\uA943\uA944\uA945\uA946\uAA00\uAA01\uAA02\uAA03\uAA04\uAA05\uAA06\uAA07\uAA08\uAA09\uAA0A\uAA0B\uAA0C\uAA0D\uAA0E\uAA0F\uAA10\uAA11\uAA12\uAA13\uAA14\uAA15\uAA16\uAA17\uAA18\uAA19\uAA1A\uAA1B\uAA1C\uAA1D\uAA1E\uAA1F\uAA20\uAA21\uAA22\uAA23\uAA24\uAA25\uAA26\uAA27\uAA28\uAA40\uAA41\uAA42\uAA44\uAA45\uAA46\uAA47\uAA48\uAA49\uAA4A\uAA4B\uAC00\uD7A3\uF900\uF901\uF902\uF903\uF904\uF905\uF906\uF907\uF908\uF909\uF90A\uF90B\uF90C\uF90D\uF90E\uF90F\uF910\uF911\uF912\uF913\uF914\uF915\uF916\uF917\uF918\uF919\uF91A\uF91B\uF91C\uF91D\uF91E\uF91F\uF920\uF921\uF922\uF923\uF924\uF925\uF926\uF927\uF928\uF929\uF92A\uF92B\uF92C\uF92D\uF92E\uF92F\uF930\uF931\uF932\uF933\uF934\uF935\uF936\uF937\uF938\uF939\uF93A\uF93B\uF93C\uF93D\uF93E\uF93F\uF940\uF941\uF942\uF943\uF944\uF945\uF946\uF947\uF948\uF949\uF94A\uF94B\uF94C\uF94D\uF94E\uF94F\uF950\uF951\uF952\uF953\uF954\uF955\uF956\uF957\uF958\uF959\uF95A\uF95B\uF95C\uF95D\uF95E\uF95F\uF960\uF961\uF962\uF963\uF964\uF965\uF966\uF967\uF968\uF969\uF96A\uF96B\uF96C\uF96D\uF96E\uF96F\uF970\uF971\uF972\uF973\uF974\uF975\uF976\uF977\uF978\uF979\uF97A\uF97B\uF97C\uF97D\uF97E\uF97F\uF980\uF981\uF982\uF983\uF984\uF985\uF986\uF987\uF988\uF989\uF98A\uF98B\uF98C\uF98D\uF98E\uF98F\uF990\uF991\uF992\uF993\uF994\uF995\uF996\uF997\uF998\uF999\uF99A\uF99B\uF99C\uF99D\uF99E\uF99F\uF9A0\uF9A1\uF9A2\uF9A3\uF9A4\uF9A5\uF9A6\uF9A7\uF9A8\uF9A9\uF9AA\uF9AB\uF9AC\uF9AD\uF9AE\uF9AF\uF9B0\uF9B1\uF9B2\uF9B3\uF9B4\uF9B5\uF9B6\uF9B7\uF9B8\uF9B9\uF9BA\uF9BB\uF9BC\uF9BD\uF9BE\uF9BF\uF9C0\uF9C1\uF9C2\uF9C3\uF9C4\uF9C5\uF9C6\uF9C7\uF9C8\uF9C9\uF9CA\uF9CB\uF9CC\uF9CD\uF9CE\uF9CF\uF9D0\uF9D1\uF9D2\uF9D3\uF9D4\uF9D5\uF9D6\uF9D7\uF9D8\uF9D9\uF9DA\uF9DB\uF9DC\uF9DD\uF9DE\uF9DF\uF9E0\uF9E1\uF9E2\uF9E3\uF9E4\uF9E5\uF9E6\uF9E7\uF9E8\uF9E9\uF9EA\uF9EB\uF9EC\uF9ED\uF9EE\uF9EF\uF9F0\uF9F1\uF9F2\uF9F3\uF9F4\uF9F5\uF9F6\uF9F7\uF9F8\uF9F9\uF9FA\uF9FB\uF9FC\uF9FD\uF9FE\uF9FF\uFA00\uFA01\uFA02\uFA03\uFA04\uFA05\uFA06\uFA07\uFA08\uFA09\uFA0A\uFA0B\uFA0C\uFA0D\uFA0E\uFA0F\uFA10\uFA11\uFA12\uFA13\uFA14\uFA15\uFA16\uFA17\uFA18\uFA19\uFA1A\uFA1B\uFA1C\uFA1D\uFA1E\uFA1F\uFA20\uFA21\uFA22\uFA23\uFA24\uFA25\uFA26\uFA27\uFA28\uFA29\uFA2A\uFA2B\uFA2C\uFA2D\uFA30\uFA31\uFA32\uFA33\uFA34\uFA35\uFA36\uFA37\uFA38\uFA39\uFA3A\uFA3B\uFA3C\uFA3D\uFA3E\uFA3F\uFA40\uFA41\uFA42\uFA43\uFA44\uFA45\uFA46\uFA47\uFA48\uFA49\uFA4A\uFA4B\uFA4C\uFA4D\uFA4E\uFA4F\uFA50\uFA51\uFA52\uFA53\uFA54\uFA55\uFA56\uFA57\uFA58\uFA59\uFA5A\uFA5B\uFA5C\uFA5D\uFA5E\uFA5F\uFA60\uFA61\uFA62\uFA63\uFA64\uFA65\uFA66\uFA67\uFA68\uFA69\uFA6A\uFA70\uFA71\uFA72\uFA73\uFA74\uFA75\uFA76\uFA77\uFA78\uFA79\uFA7A\uFA7B\uFA7C\uFA7D\uFA7E\uFA7F\uFA80\uFA81\uFA82\uFA83\uFA84\uFA85\uFA86\uFA87\uFA88\uFA89\uFA8A\uFA8B\uFA8C\uFA8D\uFA8E\uFA8F\uFA90\uFA91\uFA92\uFA93\uFA94\uFA95\uFA96\uFA97\uFA98\uFA99\uFA9A\uFA9B\uFA9C\uFA9D\uFA9E\uFA9F\uFAA0\uFAA1\uFAA2\uFAA3\uFAA4\uFAA5\uFAA6\uFAA7\uFAA8\uFAA9\uFAAA\uFAAB\uFAAC\uFAAD\uFAAE\uFAAF\uFAB0\uFAB1\uFAB2\uFAB3\uFAB4\uFAB5\uFAB6\uFAB7\uFAB8\uFAB9\uFABA\uFABB\uFABC\uFABD\uFABE\uFABF\uFAC0\uFAC1\uFAC2\uFAC3\uFAC4\uFAC5\uFAC6\uFAC7\uFAC8\uFAC9\uFACA\uFACB\uFACC\uFACD\uFACE\uFACF\uFAD0\uFAD1\uFAD2\uFAD3\uFAD4\uFAD5\uFAD6\uFAD7\uFAD8\uFAD9\uFB1D\uFB1F\uFB20\uFB21\uFB22\uFB23\uFB24\uFB25\uFB26\uFB27\uFB28\uFB2A\uFB2B\uFB2C\uFB2D\uFB2E\uFB2F\uFB30\uFB31\uFB32\uFB33\uFB34\uFB35\uFB36\uFB38\uFB39\uFB3A\uFB3B\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46\uFB47\uFB48\uFB49\uFB4A\uFB4B\uFB4C\uFB4D\uFB4E\uFB4F\uFB50\uFB51\uFB52\uFB53\uFB54\uFB55\uFB56\uFB57\uFB58\uFB59\uFB5A\uFB5B\uFB5C\uFB5D\uFB5E\uFB5F\uFB60\uFB61\uFB62\uFB63\uFB64\uFB65\uFB66\uFB67\uFB68\uFB69\uFB6A\uFB6B\uFB6C\uFB6D\uFB6E\uFB6F\uFB70\uFB71\uFB72\uFB73\uFB74\uFB75\uFB76\uFB77\uFB78\uFB79\uFB7A\uFB7B\uFB7C\uFB7D\uFB7E\uFB7F\uFB80\uFB81\uFB82\uFB83\uFB84\uFB85\uFB86\uFB87\uFB88\uFB89\uFB8A\uFB8B\uFB8C\uFB8D\uFB8E\uFB8F\uFB90\uFB91\uFB92\uFB93\uFB94\uFB95\uFB96\uFB97\uFB98\uFB99\uFB9A\uFB9B\uFB9C\uFB9D\uFB9E\uFB9F\uFBA0\uFBA1\uFBA2\uFBA3\uFBA4\uFBA5\uFBA6\uFBA7\uFBA8\uFBA9\uFBAA\uFBAB\uFBAC\uFBAD\uFBAE\uFBAF\uFBB0\uFBB1\uFBD3\uFBD4\uFBD5\uFBD6\uFBD7\uFBD8\uFBD9\uFBDA\uFBDB\uFBDC\uFBDD\uFBDE\uFBDF\uFBE0\uFBE1\uFBE2\uFBE3\uFBE4\uFBE5\uFBE6\uFBE7\uFBE8\uFBE9\uFBEA\uFBEB\uFBEC\uFBED\uFBEE\uFBEF\uFBF0\uFBF1\uFBF2\uFBF3\uFBF4\uFBF5\uFBF6\uFBF7\uFBF8\uFBF9\uFBFA\uFBFB\uFBFC\uFBFD\uFBFE\uFBFF\uFC00\uFC01\uFC02\uFC03\uFC04\uFC05\uFC06\uFC07\uFC08\uFC09\uFC0A\uFC0B\uFC0C\uFC0D\uFC0E\uFC0F\uFC10\uFC11\uFC12\uFC13\uFC14\uFC15\uFC16\uFC17\uFC18\uFC19\uFC1A\uFC1B\uFC1C\uFC1D\uFC1E\uFC1F\uFC20\uFC21\uFC22\uFC23\uFC24\uFC25\uFC26\uFC27\uFC28\uFC29\uFC2A\uFC2B\uFC2C\uFC2D\uFC2E\uFC2F\uFC30\uFC31\uFC32\uFC33\uFC34\uFC35\uFC36\uFC37\uFC38\uFC39\uFC3A\uFC3B\uFC3C\uFC3D\uFC3E\uFC3F\uFC40\uFC41\uFC42\uFC43\uFC44\uFC45\uFC46\uFC47\uFC48\uFC49\uFC4A\uFC4B\uFC4C\uFC4D\uFC4E\uFC4F\uFC50\uFC51\uFC52\uFC53\uFC54\uFC55\uFC56\uFC57\uFC58\uFC59\uFC5A\uFC5B\uFC5C\uFC5D\uFC5E\uFC5F\uFC60\uFC61\uFC62\uFC63\uFC64\uFC65\uFC66\uFC67\uFC68\uFC69\uFC6A\uFC6B\uFC6C\uFC6D\uFC6E\uFC6F\uFC70\uFC71\uFC72\uFC73\uFC74\uFC75\uFC76\uFC77\uFC78\uFC79\uFC7A\uFC7B\uFC7C\uFC7D\uFC7E\uFC7F\uFC80\uFC81\uFC82\uFC83\uFC84\uFC85\uFC86\uFC87\uFC88\uFC89\uFC8A\uFC8B\uFC8C\uFC8D\uFC8E\uFC8F\uFC90\uFC91\uFC92\uFC93\uFC94\uFC95\uFC96\uFC97\uFC98\uFC99\uFC9A\uFC9B\uFC9C\uFC9D\uFC9E\uFC9F\uFCA0\uFCA1\uFCA2\uFCA3\uFCA4\uFCA5\uFCA6\uFCA7\uFCA8\uFCA9\uFCAA\uFCAB\uFCAC\uFCAD\uFCAE\uFCAF\uFCB0\uFCB1\uFCB2\uFCB3\uFCB4\uFCB5\uFCB6\uFCB7\uFCB8\uFCB9\uFCBA\uFCBB\uFCBC\uFCBD\uFCBE\uFCBF\uFCC0\uFCC1\uFCC2\uFCC3\uFCC4\uFCC5\uFCC6\uFCC7\uFCC8\uFCC9\uFCCA\uFCCB\uFCCC\uFCCD\uFCCE\uFCCF\uFCD0\uFCD1\uFCD2\uFCD3\uFCD4\uFCD5\uFCD6\uFCD7\uFCD8\uFCD9\uFCDA\uFCDB\uFCDC\uFCDD\uFCDE\uFCDF\uFCE0\uFCE1\uFCE2\uFCE3\uFCE4\uFCE5\uFCE6\uFCE7\uFCE8\uFCE9\uFCEA\uFCEB\uFCEC\uFCED\uFCEE\uFCEF\uFCF0\uFCF1\uFCF2\uFCF3\uFCF4\uFCF5\uFCF6\uFCF7\uFCF8\uFCF9\uFCFA\uFCFB\uFCFC\uFCFD\uFCFE\uFCFF\uFD00\uFD01\uFD02\uFD03\uFD04\uFD05\uFD06\uFD07\uFD08\uFD09\uFD0A\uFD0B\uFD0C\uFD0D\uFD0E\uFD0F\uFD10\uFD11\uFD12\uFD13\uFD14\uFD15\uFD16\uFD17\uFD18\uFD19\uFD1A\uFD1B\uFD1C\uFD1D\uFD1E\uFD1F\uFD20\uFD21\uFD22\uFD23\uFD24\uFD25\uFD26\uFD27\uFD28\uFD29\uFD2A\uFD2B\uFD2C\uFD2D\uFD2E\uFD2F\uFD30\uFD31\uFD32\uFD33\uFD34\uFD35\uFD36\uFD37\uFD38\uFD39\uFD3A\uFD3B\uFD3C\uFD3D\uFD50\uFD51\uFD52\uFD53\uFD54\uFD55\uFD56\uFD57\uFD58\uFD59\uFD5A\uFD5B\uFD5C\uFD5D\uFD5E\uFD5F\uFD60\uFD61\uFD62\uFD63\uFD64\uFD65\uFD66\uFD67\uFD68\uFD69\uFD6A\uFD6B\uFD6C\uFD6D\uFD6E\uFD6F\uFD70\uFD71\uFD72\uFD73\uFD74\uFD75\uFD76\uFD77\uFD78\uFD79\uFD7A\uFD7B\uFD7C\uFD7D\uFD7E\uFD7F\uFD80\uFD81\uFD82\uFD83\uFD84\uFD85\uFD86\uFD87\uFD88\uFD89\uFD8A\uFD8B\uFD8C\uFD8D\uFD8E\uFD8F\uFD92\uFD93\uFD94\uFD95\uFD96\uFD97\uFD98\uFD99\uFD9A\uFD9B\uFD9C\uFD9D\uFD9E\uFD9F\uFDA0\uFDA1\uFDA2\uFDA3\uFDA4\uFDA5\uFDA6\uFDA7\uFDA8\uFDA9\uFDAA\uFDAB\uFDAC\uFDAD\uFDAE\uFDAF\uFDB0\uFDB1\uFDB2\uFDB3\uFDB4\uFDB5\uFDB6\uFDB7\uFDB8\uFDB9\uFDBA\uFDBB\uFDBC\uFDBD\uFDBE\uFDBF\uFDC0\uFDC1\uFDC2\uFDC3\uFDC4\uFDC5\uFDC6\uFDC7\uFDF0\uFDF1\uFDF2\uFDF3\uFDF4\uFDF5\uFDF6\uFDF7\uFDF8\uFDF9\uFDFA\uFDFB\uFE70\uFE71\uFE72\uFE73\uFE74\uFE76\uFE77\uFE78\uFE79\uFE7A\uFE7B\uFE7C\uFE7D\uFE7E\uFE7F\uFE80\uFE81\uFE82\uFE83\uFE84\uFE85\uFE86\uFE87\uFE88\uFE89\uFE8A\uFE8B\uFE8C\uFE8D\uFE8E\uFE8F\uFE90\uFE91\uFE92\uFE93\uFE94\uFE95\uFE96\uFE97\uFE98\uFE99\uFE9A\uFE9B\uFE9C\uFE9D\uFE9E\uFE9F\uFEA0\uFEA1\uFEA2\uFEA3\uFEA4\uFEA5\uFEA6\uFEA7\uFEA8\uFEA9\uFEAA\uFEAB\uFEAC\uFEAD\uFEAE\uFEAF\uFEB0\uFEB1\uFEB2\uFEB3\uFEB4\uFEB5\uFEB6\uFEB7\uFEB8\uFEB9\uFEBA\uFEBB\uFEBC\uFEBD\uFEBE\uFEBF\uFEC0\uFEC1\uFEC2\uFEC3\uFEC4\uFEC5\uFEC6\uFEC7\uFEC8\uFEC9\uFECA\uFECB\uFECC\uFECD\uFECE\uFECF\uFED0\uFED1\uFED2\uFED3\uFED4\uFED5\uFED6\uFED7\uFED8\uFED9\uFEDA\uFEDB\uFEDC\uFEDD\uFEDE\uFEDF\uFEE0\uFEE1\uFEE2\uFEE3\uFEE4\uFEE5\uFEE6\uFEE7\uFEE8\uFEE9\uFEEA\uFEEB\uFEEC\uFEED\uFEEE\uFEEF\uFEF0\uFEF1\uFEF2\uFEF3\uFEF4\uFEF5\uFEF6\uFEF7\uFEF8\uFEF9\uFEFA\uFEFB\uFEFC\uFF66\uFF67\uFF68\uFF69\uFF6A\uFF6B\uFF6C\uFF6D\uFF6E\uFF6F\uFF71\uFF72\uFF73\uFF74\uFF75\uFF76\uFF77\uFF78\uFF79\uFF7A\uFF7B\uFF7C\uFF7D\uFF7E\uFF7F\uFF80\uFF81\uFF82\uFF83\uFF84\uFF85\uFF86\uFF87\uFF88\uFF89\uFF8A\uFF8B\uFF8C\uFF8D\uFF8E\uFF8F\uFF90\uFF91\uFF92\uFF93\uFF94\uFF95\uFF96\uFF97\uFF98\uFF99\uFF9A\uFF9B\uFF9C\uFF9D\uFFA0\uFFA1\uFFA2\uFFA3\uFFA4\uFFA5\uFFA6\uFFA7\uFFA8\uFFA9\uFFAA\uFFAB\uFFAC\uFFAD\uFFAE\uFFAF\uFFB0\uFFB1\uFFB2\uFFB3\uFFB4\uFFB5\uFFB6\uFFB7\uFFB8\uFFB9\uFFBA\uFFBB\uFFBC\uFFBD\uFFBE\uFFC2\uFFC3\uFFC4\uFFC5\uFFC6\uFFC7\uFFCA\uFFCB\uFFCC\uFFCD\uFFCE\uFFCF\uFFD2\uFFD3\uFFD4\uFFD5\uFFD6\uFFD7\uFFDA\uFFDB\uFFDC]/,
        peg$c79 = { type: "class", value: "[\\u01BB\\u01C0\\u01C1\\u01C2\\u01C3\\u0294\\u05D0\\u05D1\\u05D2\\u05D3\\u05D4\\u05D5\\u05D6\\u05D7\\u05D8\\u05D9\\u05DA\\u05DB\\u05DC\\u05DD\\u05DE\\u05DF\\u05E0\\u05E1\\u05E2\\u05E3\\u05E4\\u05E5\\u05E6\\u05E7\\u05E8\\u05E9\\u05EA\\u05F0\\u05F1\\u05F2\\u0621\\u0622\\u0623\\u0624\\u0625\\u0626\\u0627\\u0628\\u0629\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u0630\\u0631\\u0632\\u0633\\u0634\\u0635\\u0636\\u0637\\u0638\\u0639\\u063A\\u063B\\u063C\\u063D\\u063E\\u063F\\u0641\\u0642\\u0643\\u0644\\u0645\\u0646\\u0647\\u0648\\u0649\\u064A\\u066E\\u066F\\u0671\\u0672\\u0673\\u0674\\u0675\\u0676\\u0677\\u0678\\u0679\\u067A\\u067B\\u067C\\u067D\\u067E\\u067F\\u0680\\u0681\\u0682\\u0683\\u0684\\u0685\\u0686\\u0687\\u0688\\u0689\\u068A\\u068B\\u068C\\u068D\\u068E\\u068F\\u0690\\u0691\\u0692\\u0693\\u0694\\u0695\\u0696\\u0697\\u0698\\u0699\\u069A\\u069B\\u069C\\u069D\\u069E\\u069F\\u06A0\\u06A1\\u06A2\\u06A3\\u06A4\\u06A5\\u06A6\\u06A7\\u06A8\\u06A9\\u06AA\\u06AB\\u06AC\\u06AD\\u06AE\\u06AF\\u06B0\\u06B1\\u06B2\\u06B3\\u06B4\\u06B5\\u06B6\\u06B7\\u06B8\\u06B9\\u06BA\\u06BB\\u06BC\\u06BD\\u06BE\\u06BF\\u06C0\\u06C1\\u06C2\\u06C3\\u06C4\\u06C5\\u06C6\\u06C7\\u06C8\\u06C9\\u06CA\\u06CB\\u06CC\\u06CD\\u06CE\\u06CF\\u06D0\\u06D1\\u06D2\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA\\u06FB\\u06FC\\u06FF\\u0710\\u0712\\u0713\\u0714\\u0715\\u0716\\u0717\\u0718\\u0719\\u071A\\u071B\\u071C\\u071D\\u071E\\u071F\\u0720\\u0721\\u0722\\u0723\\u0724\\u0725\\u0726\\u0727\\u0728\\u0729\\u072A\\u072B\\u072C\\u072D\\u072E\\u072F\\u074D\\u074E\\u074F\\u0750\\u0751\\u0752\\u0753\\u0754\\u0755\\u0756\\u0757\\u0758\\u0759\\u075A\\u075B\\u075C\\u075D\\u075E\\u075F\\u0760\\u0761\\u0762\\u0763\\u0764\\u0765\\u0766\\u0767\\u0768\\u0769\\u076A\\u076B\\u076C\\u076D\\u076E\\u076F\\u0770\\u0771\\u0772\\u0773\\u0774\\u0775\\u0776\\u0777\\u0778\\u0779\\u077A\\u077B\\u077C\\u077D\\u077E\\u077F\\u0780\\u0781\\u0782\\u0783\\u0784\\u0785\\u0786\\u0787\\u0788\\u0789\\u078A\\u078B\\u078C\\u078D\\u078E\\u078F\\u0790\\u0791\\u0792\\u0793\\u0794\\u0795\\u0796\\u0797\\u0798\\u0799\\u079A\\u079B\\u079C\\u079D\\u079E\\u079F\\u07A0\\u07A1\\u07A2\\u07A3\\u07A4\\u07A5\\u07B1\\u07CA\\u07CB\\u07CC\\u07CD\\u07CE\\u07CF\\u07D0\\u07D1\\u07D2\\u07D3\\u07D4\\u07D5\\u07D6\\u07D7\\u07D8\\u07D9\\u07DA\\u07DB\\u07DC\\u07DD\\u07DE\\u07DF\\u07E0\\u07E1\\u07E2\\u07E3\\u07E4\\u07E5\\u07E6\\u07E7\\u07E8\\u07E9\\u07EA\\u0904\\u0905\\u0906\\u0907\\u0908\\u0909\\u090A\\u090B\\u090C\\u090D\\u090E\\u090F\\u0910\\u0911\\u0912\\u0913\\u0914\\u0915\\u0916\\u0917\\u0918\\u0919\\u091A\\u091B\\u091C\\u091D\\u091E\\u091F\\u0920\\u0921\\u0922\\u0923\\u0924\\u0925\\u0926\\u0927\\u0928\\u0929\\u092A\\u092B\\u092C\\u092D\\u092E\\u092F\\u0930\\u0931\\u0932\\u0933\\u0934\\u0935\\u0936\\u0937\\u0938\\u0939\\u093D\\u0950\\u0958\\u0959\\u095A\\u095B\\u095C\\u095D\\u095E\\u095F\\u0960\\u0961\\u0972\\u097B\\u097C\\u097D\\u097E\\u097F\\u0985\\u0986\\u0987\\u0988\\u0989\\u098A\\u098B\\u098C\\u098F\\u0990\\u0993\\u0994\\u0995\\u0996\\u0997\\u0998\\u0999\\u099A\\u099B\\u099C\\u099D\\u099E\\u099F\\u09A0\\u09A1\\u09A2\\u09A3\\u09A4\\u09A5\\u09A6\\u09A7\\u09A8\\u09AA\\u09AB\\u09AC\\u09AD\\u09AE\\u09AF\\u09B0\\u09B2\\u09B6\\u09B7\\u09B8\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF\\u09E0\\u09E1\\u09F0\\u09F1\\u0A05\\u0A06\\u0A07\\u0A08\\u0A09\\u0A0A\\u0A0F\\u0A10\\u0A13\\u0A14\\u0A15\\u0A16\\u0A17\\u0A18\\u0A19\\u0A1A\\u0A1B\\u0A1C\\u0A1D\\u0A1E\\u0A1F\\u0A20\\u0A21\\u0A22\\u0A23\\u0A24\\u0A25\\u0A26\\u0A27\\u0A28\\u0A2A\\u0A2B\\u0A2C\\u0A2D\\u0A2E\\u0A2F\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59\\u0A5A\\u0A5B\\u0A5C\\u0A5E\\u0A72\\u0A73\\u0A74\\u0A85\\u0A86\\u0A87\\u0A88\\u0A89\\u0A8A\\u0A8B\\u0A8C\\u0A8D\\u0A8F\\u0A90\\u0A91\\u0A93\\u0A94\\u0A95\\u0A96\\u0A97\\u0A98\\u0A99\\u0A9A\\u0A9B\\u0A9C\\u0A9D\\u0A9E\\u0A9F\\u0AA0\\u0AA1\\u0AA2\\u0AA3\\u0AA4\\u0AA5\\u0AA6\\u0AA7\\u0AA8\\u0AAA\\u0AAB\\u0AAC\\u0AAD\\u0AAE\\u0AAF\\u0AB0\\u0AB2\\u0AB3\\u0AB5\\u0AB6\\u0AB7\\u0AB8\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05\\u0B06\\u0B07\\u0B08\\u0B09\\u0B0A\\u0B0B\\u0B0C\\u0B0F\\u0B10\\u0B13\\u0B14\\u0B15\\u0B16\\u0B17\\u0B18\\u0B19\\u0B1A\\u0B1B\\u0B1C\\u0B1D\\u0B1E\\u0B1F\\u0B20\\u0B21\\u0B22\\u0B23\\u0B24\\u0B25\\u0B26\\u0B27\\u0B28\\u0B2A\\u0B2B\\u0B2C\\u0B2D\\u0B2E\\u0B2F\\u0B30\\u0B32\\u0B33\\u0B35\\u0B36\\u0B37\\u0B38\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F\\u0B60\\u0B61\\u0B71\\u0B83\\u0B85\\u0B86\\u0B87\\u0B88\\u0B89\\u0B8A\\u0B8E\\u0B8F\\u0B90\\u0B92\\u0B93\\u0B94\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8\\u0BA9\\u0BAA\\u0BAE\\u0BAF\\u0BB0\\u0BB1\\u0BB2\\u0BB3\\u0BB4\\u0BB5\\u0BB6\\u0BB7\\u0BB8\\u0BB9\\u0BD0\\u0C05\\u0C06\\u0C07\\u0C08\\u0C09\\u0C0A\\u0C0B\\u0C0C\\u0C0E\\u0C0F\\u0C10\\u0C12\\u0C13\\u0C14\\u0C15\\u0C16\\u0C17\\u0C18\\u0C19\\u0C1A\\u0C1B\\u0C1C\\u0C1D\\u0C1E\\u0C1F\\u0C20\\u0C21\\u0C22\\u0C23\\u0C24\\u0C25\\u0C26\\u0C27\\u0C28\\u0C2A\\u0C2B\\u0C2C\\u0C2D\\u0C2E\\u0C2F\\u0C30\\u0C31\\u0C32\\u0C33\\u0C35\\u0C36\\u0C37\\u0C38\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85\\u0C86\\u0C87\\u0C88\\u0C89\\u0C8A\\u0C8B\\u0C8C\\u0C8E\\u0C8F\\u0C90\\u0C92\\u0C93\\u0C94\\u0C95\\u0C96\\u0C97\\u0C98\\u0C99\\u0C9A\\u0C9B\\u0C9C\\u0C9D\\u0C9E\\u0C9F\\u0CA0\\u0CA1\\u0CA2\\u0CA3\\u0CA4\\u0CA5\\u0CA6\\u0CA7\\u0CA8\\u0CAA\\u0CAB\\u0CAC\\u0CAD\\u0CAE\\u0CAF\\u0CB0\\u0CB1\\u0CB2\\u0CB3\\u0CB5\\u0CB6\\u0CB7\\u0CB8\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05\\u0D06\\u0D07\\u0D08\\u0D09\\u0D0A\\u0D0B\\u0D0C\\u0D0E\\u0D0F\\u0D10\\u0D12\\u0D13\\u0D14\\u0D15\\u0D16\\u0D17\\u0D18\\u0D19\\u0D1A\\u0D1B\\u0D1C\\u0D1D\\u0D1E\\u0D1F\\u0D20\\u0D21\\u0D22\\u0D23\\u0D24\\u0D25\\u0D26\\u0D27\\u0D28\\u0D2A\\u0D2B\\u0D2C\\u0D2D\\u0D2E\\u0D2F\\u0D30\\u0D31\\u0D32\\u0D33\\u0D34\\u0D35\\u0D36\\u0D37\\u0D38\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A\\u0D7B\\u0D7C\\u0D7D\\u0D7E\\u0D7F\\u0D85\\u0D86\\u0D87\\u0D88\\u0D89\\u0D8A\\u0D8B\\u0D8C\\u0D8D\\u0D8E\\u0D8F\\u0D90\\u0D91\\u0D92\\u0D93\\u0D94\\u0D95\\u0D96\\u0D9A\\u0D9B\\u0D9C\\u0D9D\\u0D9E\\u0D9F\\u0DA0\\u0DA1\\u0DA2\\u0DA3\\u0DA4\\u0DA5\\u0DA6\\u0DA7\\u0DA8\\u0DA9\\u0DAA\\u0DAB\\u0DAC\\u0DAD\\u0DAE\\u0DAF\\u0DB0\\u0DB1\\u0DB3\\u0DB4\\u0DB5\\u0DB6\\u0DB7\\u0DB8\\u0DB9\\u0DBA\\u0DBB\\u0DBD\\u0DC0\\u0DC1\\u0DC2\\u0DC3\\u0DC4\\u0DC5\\u0DC6\\u0E01\\u0E02\\u0E03\\u0E04\\u0E05\\u0E06\\u0E07\\u0E08\\u0E09\\u0E0A\\u0E0B\\u0E0C\\u0E0D\\u0E0E\\u0E0F\\u0E10\\u0E11\\u0E12\\u0E13\\u0E14\\u0E15\\u0E16\\u0E17\\u0E18\\u0E19\\u0E1A\\u0E1B\\u0E1C\\u0E1D\\u0E1E\\u0E1F\\u0E20\\u0E21\\u0E22\\u0E23\\u0E24\\u0E25\\u0E26\\u0E27\\u0E28\\u0E29\\u0E2A\\u0E2B\\u0E2C\\u0E2D\\u0E2E\\u0E2F\\u0E30\\u0E32\\u0E33\\u0E40\\u0E41\\u0E42\\u0E43\\u0E44\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94\\u0E95\\u0E96\\u0E97\\u0E99\\u0E9A\\u0E9B\\u0E9C\\u0E9D\\u0E9E\\u0E9F\\u0EA1\\u0EA2\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD\\u0EAE\\u0EAF\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0\\u0EC1\\u0EC2\\u0EC3\\u0EC4\\u0EDC\\u0EDD\\u0F00\\u0F40\\u0F41\\u0F42\\u0F43\\u0F44\\u0F45\\u0F46\\u0F47\\u0F49\\u0F4A\\u0F4B\\u0F4C\\u0F4D\\u0F4E\\u0F4F\\u0F50\\u0F51\\u0F52\\u0F53\\u0F54\\u0F55\\u0F56\\u0F57\\u0F58\\u0F59\\u0F5A\\u0F5B\\u0F5C\\u0F5D\\u0F5E\\u0F5F\\u0F60\\u0F61\\u0F62\\u0F63\\u0F64\\u0F65\\u0F66\\u0F67\\u0F68\\u0F69\\u0F6A\\u0F6B\\u0F6C\\u0F88\\u0F89\\u0F8A\\u0F8B\\u1000\\u1001\\u1002\\u1003\\u1004\\u1005\\u1006\\u1007\\u1008\\u1009\\u100A\\u100B\\u100C\\u100D\\u100E\\u100F\\u1010\\u1011\\u1012\\u1013\\u1014\\u1015\\u1016\\u1017\\u1018\\u1019\\u101A\\u101B\\u101C\\u101D\\u101E\\u101F\\u1020\\u1021\\u1022\\u1023\\u1024\\u1025\\u1026\\u1027\\u1028\\u1029\\u102A\\u103F\\u1050\\u1051\\u1052\\u1053\\u1054\\u1055\\u105A\\u105B\\u105C\\u105D\\u1061\\u1065\\u1066\\u106E\\u106F\\u1070\\u1075\\u1076\\u1077\\u1078\\u1079\\u107A\\u107B\\u107C\\u107D\\u107E\\u107F\\u1080\\u1081\\u108E\\u10D0\\u10D1\\u10D2\\u10D3\\u10D4\\u10D5\\u10D6\\u10D7\\u10D8\\u10D9\\u10DA\\u10DB\\u10DC\\u10DD\\u10DE\\u10DF\\u10E0\\u10E1\\u10E2\\u10E3\\u10E4\\u10E5\\u10E6\\u10E7\\u10E8\\u10E9\\u10EA\\u10EB\\u10EC\\u10ED\\u10EE\\u10EF\\u10F0\\u10F1\\u10F2\\u10F3\\u10F4\\u10F5\\u10F6\\u10F7\\u10F8\\u10F9\\u10FA\\u1100\\u1101\\u1102\\u1103\\u1104\\u1105\\u1106\\u1107\\u1108\\u1109\\u110A\\u110B\\u110C\\u110D\\u110E\\u110F\\u1110\\u1111\\u1112\\u1113\\u1114\\u1115\\u1116\\u1117\\u1118\\u1119\\u111A\\u111B\\u111C\\u111D\\u111E\\u111F\\u1120\\u1121\\u1122\\u1123\\u1124\\u1125\\u1126\\u1127\\u1128\\u1129\\u112A\\u112B\\u112C\\u112D\\u112E\\u112F\\u1130\\u1131\\u1132\\u1133\\u1134\\u1135\\u1136\\u1137\\u1138\\u1139\\u113A\\u113B\\u113C\\u113D\\u113E\\u113F\\u1140\\u1141\\u1142\\u1143\\u1144\\u1145\\u1146\\u1147\\u1148\\u1149\\u114A\\u114B\\u114C\\u114D\\u114E\\u114F\\u1150\\u1151\\u1152\\u1153\\u1154\\u1155\\u1156\\u1157\\u1158\\u1159\\u115F\\u1160\\u1161\\u1162\\u1163\\u1164\\u1165\\u1166\\u1167\\u1168\\u1169\\u116A\\u116B\\u116C\\u116D\\u116E\\u116F\\u1170\\u1171\\u1172\\u1173\\u1174\\u1175\\u1176\\u1177\\u1178\\u1179\\u117A\\u117B\\u117C\\u117D\\u117E\\u117F\\u1180\\u1181\\u1182\\u1183\\u1184\\u1185\\u1186\\u1187\\u1188\\u1189\\u118A\\u118B\\u118C\\u118D\\u118E\\u118F\\u1190\\u1191\\u1192\\u1193\\u1194\\u1195\\u1196\\u1197\\u1198\\u1199\\u119A\\u119B\\u119C\\u119D\\u119E\\u119F\\u11A0\\u11A1\\u11A2\\u11A8\\u11A9\\u11AA\\u11AB\\u11AC\\u11AD\\u11AE\\u11AF\\u11B0\\u11B1\\u11B2\\u11B3\\u11B4\\u11B5\\u11B6\\u11B7\\u11B8\\u11B9\\u11BA\\u11BB\\u11BC\\u11BD\\u11BE\\u11BF\\u11C0\\u11C1\\u11C2\\u11C3\\u11C4\\u11C5\\u11C6\\u11C7\\u11C8\\u11C9\\u11CA\\u11CB\\u11CC\\u11CD\\u11CE\\u11CF\\u11D0\\u11D1\\u11D2\\u11D3\\u11D4\\u11D5\\u11D6\\u11D7\\u11D8\\u11D9\\u11DA\\u11DB\\u11DC\\u11DD\\u11DE\\u11DF\\u11E0\\u11E1\\u11E2\\u11E3\\u11E4\\u11E5\\u11E6\\u11E7\\u11E8\\u11E9\\u11EA\\u11EB\\u11EC\\u11ED\\u11EE\\u11EF\\u11F0\\u11F1\\u11F2\\u11F3\\u11F4\\u11F5\\u11F6\\u11F7\\u11F8\\u11F9\\u1200\\u1201\\u1202\\u1203\\u1204\\u1205\\u1206\\u1207\\u1208\\u1209\\u120A\\u120B\\u120C\\u120D\\u120E\\u120F\\u1210\\u1211\\u1212\\u1213\\u1214\\u1215\\u1216\\u1217\\u1218\\u1219\\u121A\\u121B\\u121C\\u121D\\u121E\\u121F\\u1220\\u1221\\u1222\\u1223\\u1224\\u1225\\u1226\\u1227\\u1228\\u1229\\u122A\\u122B\\u122C\\u122D\\u122E\\u122F\\u1230\\u1231\\u1232\\u1233\\u1234\\u1235\\u1236\\u1237\\u1238\\u1239\\u123A\\u123B\\u123C\\u123D\\u123E\\u123F\\u1240\\u1241\\u1242\\u1243\\u1244\\u1245\\u1246\\u1247\\u1248\\u124A\\u124B\\u124C\\u124D\\u1250\\u1251\\u1252\\u1253\\u1254\\u1255\\u1256\\u1258\\u125A\\u125B\\u125C\\u125D\\u1260\\u1261\\u1262\\u1263\\u1264\\u1265\\u1266\\u1267\\u1268\\u1269\\u126A\\u126B\\u126C\\u126D\\u126E\\u126F\\u1270\\u1271\\u1272\\u1273\\u1274\\u1275\\u1276\\u1277\\u1278\\u1279\\u127A\\u127B\\u127C\\u127D\\u127E\\u127F\\u1280\\u1281\\u1282\\u1283\\u1284\\u1285\\u1286\\u1287\\u1288\\u128A\\u128B\\u128C\\u128D\\u1290\\u1291\\u1292\\u1293\\u1294\\u1295\\u1296\\u1297\\u1298\\u1299\\u129A\\u129B\\u129C\\u129D\\u129E\\u129F\\u12A0\\u12A1\\u12A2\\u12A3\\u12A4\\u12A5\\u12A6\\u12A7\\u12A8\\u12A9\\u12AA\\u12AB\\u12AC\\u12AD\\u12AE\\u12AF\\u12B0\\u12B2\\u12B3\\u12B4\\u12B5\\u12B8\\u12B9\\u12BA\\u12BB\\u12BC\\u12BD\\u12BE\\u12C0\\u12C2\\u12C3\\u12C4\\u12C5\\u12C8\\u12C9\\u12CA\\u12CB\\u12CC\\u12CD\\u12CE\\u12CF\\u12D0\\u12D1\\u12D2\\u12D3\\u12D4\\u12D5\\u12D6\\u12D8\\u12D9\\u12DA\\u12DB\\u12DC\\u12DD\\u12DE\\u12DF\\u12E0\\u12E1\\u12E2\\u12E3\\u12E4\\u12E5\\u12E6\\u12E7\\u12E8\\u12E9\\u12EA\\u12EB\\u12EC\\u12ED\\u12EE\\u12EF\\u12F0\\u12F1\\u12F2\\u12F3\\u12F4\\u12F5\\u12F6\\u12F7\\u12F8\\u12F9\\u12FA\\u12FB\\u12FC\\u12FD\\u12FE\\u12FF\\u1300\\u1301\\u1302\\u1303\\u1304\\u1305\\u1306\\u1307\\u1308\\u1309\\u130A\\u130B\\u130C\\u130D\\u130E\\u130F\\u1310\\u1312\\u1313\\u1314\\u1315\\u1318\\u1319\\u131A\\u131B\\u131C\\u131D\\u131E\\u131F\\u1320\\u1321\\u1322\\u1323\\u1324\\u1325\\u1326\\u1327\\u1328\\u1329\\u132A\\u132B\\u132C\\u132D\\u132E\\u132F\\u1330\\u1331\\u1332\\u1333\\u1334\\u1335\\u1336\\u1337\\u1338\\u1339\\u133A\\u133B\\u133C\\u133D\\u133E\\u133F\\u1340\\u1341\\u1342\\u1343\\u1344\\u1345\\u1346\\u1347\\u1348\\u1349\\u134A\\u134B\\u134C\\u134D\\u134E\\u134F\\u1350\\u1351\\u1352\\u1353\\u1354\\u1355\\u1356\\u1357\\u1358\\u1359\\u135A\\u1380\\u1381\\u1382\\u1383\\u1384\\u1385\\u1386\\u1387\\u1388\\u1389\\u138A\\u138B\\u138C\\u138D\\u138E\\u138F\\u13A0\\u13A1\\u13A2\\u13A3\\u13A4\\u13A5\\u13A6\\u13A7\\u13A8\\u13A9\\u13AA\\u13AB\\u13AC\\u13AD\\u13AE\\u13AF\\u13B0\\u13B1\\u13B2\\u13B3\\u13B4\\u13B5\\u13B6\\u13B7\\u13B8\\u13B9\\u13BA\\u13BB\\u13BC\\u13BD\\u13BE\\u13BF\\u13C0\\u13C1\\u13C2\\u13C3\\u13C4\\u13C5\\u13C6\\u13C7\\u13C8\\u13C9\\u13CA\\u13CB\\u13CC\\u13CD\\u13CE\\u13CF\\u13D0\\u13D1\\u13D2\\u13D3\\u13D4\\u13D5\\u13D6\\u13D7\\u13D8\\u13D9\\u13DA\\u13DB\\u13DC\\u13DD\\u13DE\\u13DF\\u13E0\\u13E1\\u13E2\\u13E3\\u13E4\\u13E5\\u13E6\\u13E7\\u13E8\\u13E9\\u13EA\\u13EB\\u13EC\\u13ED\\u13EE\\u13EF\\u13F0\\u13F1\\u13F2\\u13F3\\u13F4\\u1401\\u1402\\u1403\\u1404\\u1405\\u1406\\u1407\\u1408\\u1409\\u140A\\u140B\\u140C\\u140D\\u140E\\u140F\\u1410\\u1411\\u1412\\u1413\\u1414\\u1415\\u1416\\u1417\\u1418\\u1419\\u141A\\u141B\\u141C\\u141D\\u141E\\u141F\\u1420\\u1421\\u1422\\u1423\\u1424\\u1425\\u1426\\u1427\\u1428\\u1429\\u142A\\u142B\\u142C\\u142D\\u142E\\u142F\\u1430\\u1431\\u1432\\u1433\\u1434\\u1435\\u1436\\u1437\\u1438\\u1439\\u143A\\u143B\\u143C\\u143D\\u143E\\u143F\\u1440\\u1441\\u1442\\u1443\\u1444\\u1445\\u1446\\u1447\\u1448\\u1449\\u144A\\u144B\\u144C\\u144D\\u144E\\u144F\\u1450\\u1451\\u1452\\u1453\\u1454\\u1455\\u1456\\u1457\\u1458\\u1459\\u145A\\u145B\\u145C\\u145D\\u145E\\u145F\\u1460\\u1461\\u1462\\u1463\\u1464\\u1465\\u1466\\u1467\\u1468\\u1469\\u146A\\u146B\\u146C\\u146D\\u146E\\u146F\\u1470\\u1471\\u1472\\u1473\\u1474\\u1475\\u1476\\u1477\\u1478\\u1479\\u147A\\u147B\\u147C\\u147D\\u147E\\u147F\\u1480\\u1481\\u1482\\u1483\\u1484\\u1485\\u1486\\u1487\\u1488\\u1489\\u148A\\u148B\\u148C\\u148D\\u148E\\u148F\\u1490\\u1491\\u1492\\u1493\\u1494\\u1495\\u1496\\u1497\\u1498\\u1499\\u149A\\u149B\\u149C\\u149D\\u149E\\u149F\\u14A0\\u14A1\\u14A2\\u14A3\\u14A4\\u14A5\\u14A6\\u14A7\\u14A8\\u14A9\\u14AA\\u14AB\\u14AC\\u14AD\\u14AE\\u14AF\\u14B0\\u14B1\\u14B2\\u14B3\\u14B4\\u14B5\\u14B6\\u14B7\\u14B8\\u14B9\\u14BA\\u14BB\\u14BC\\u14BD\\u14BE\\u14BF\\u14C0\\u14C1\\u14C2\\u14C3\\u14C4\\u14C5\\u14C6\\u14C7\\u14C8\\u14C9\\u14CA\\u14CB\\u14CC\\u14CD\\u14CE\\u14CF\\u14D0\\u14D1\\u14D2\\u14D3\\u14D4\\u14D5\\u14D6\\u14D7\\u14D8\\u14D9\\u14DA\\u14DB\\u14DC\\u14DD\\u14DE\\u14DF\\u14E0\\u14E1\\u14E2\\u14E3\\u14E4\\u14E5\\u14E6\\u14E7\\u14E8\\u14E9\\u14EA\\u14EB\\u14EC\\u14ED\\u14EE\\u14EF\\u14F0\\u14F1\\u14F2\\u14F3\\u14F4\\u14F5\\u14F6\\u14F7\\u14F8\\u14F9\\u14FA\\u14FB\\u14FC\\u14FD\\u14FE\\u14FF\\u1500\\u1501\\u1502\\u1503\\u1504\\u1505\\u1506\\u1507\\u1508\\u1509\\u150A\\u150B\\u150C\\u150D\\u150E\\u150F\\u1510\\u1511\\u1512\\u1513\\u1514\\u1515\\u1516\\u1517\\u1518\\u1519\\u151A\\u151B\\u151C\\u151D\\u151E\\u151F\\u1520\\u1521\\u1522\\u1523\\u1524\\u1525\\u1526\\u1527\\u1528\\u1529\\u152A\\u152B\\u152C\\u152D\\u152E\\u152F\\u1530\\u1531\\u1532\\u1533\\u1534\\u1535\\u1536\\u1537\\u1538\\u1539\\u153A\\u153B\\u153C\\u153D\\u153E\\u153F\\u1540\\u1541\\u1542\\u1543\\u1544\\u1545\\u1546\\u1547\\u1548\\u1549\\u154A\\u154B\\u154C\\u154D\\u154E\\u154F\\u1550\\u1551\\u1552\\u1553\\u1554\\u1555\\u1556\\u1557\\u1558\\u1559\\u155A\\u155B\\u155C\\u155D\\u155E\\u155F\\u1560\\u1561\\u1562\\u1563\\u1564\\u1565\\u1566\\u1567\\u1568\\u1569\\u156A\\u156B\\u156C\\u156D\\u156E\\u156F\\u1570\\u1571\\u1572\\u1573\\u1574\\u1575\\u1576\\u1577\\u1578\\u1579\\u157A\\u157B\\u157C\\u157D\\u157E\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u1586\\u1587\\u1588\\u1589\\u158A\\u158B\\u158C\\u158D\\u158E\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1596\\u1597\\u1598\\u1599\\u159A\\u159B\\u159C\\u159D\\u159E\\u159F\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u15A7\\u15A8\\u15A9\\u15AA\\u15AB\\u15AC\\u15AD\\u15AE\\u15AF\\u15B0\\u15B1\\u15B2\\u15B3\\u15B4\\u15B5\\u15B6\\u15B7\\u15B8\\u15B9\\u15BA\\u15BB\\u15BC\\u15BD\\u15BE\\u15BF\\u15C0\\u15C1\\u15C2\\u15C3\\u15C4\\u15C5\\u15C6\\u15C7\\u15C8\\u15C9\\u15CA\\u15CB\\u15CC\\u15CD\\u15CE\\u15CF\\u15D0\\u15D1\\u15D2\\u15D3\\u15D4\\u15D5\\u15D6\\u15D7\\u15D8\\u15D9\\u15DA\\u15DB\\u15DC\\u15DD\\u15DE\\u15DF\\u15E0\\u15E1\\u15E2\\u15E3\\u15E4\\u15E5\\u15E6\\u15E7\\u15E8\\u15E9\\u15EA\\u15EB\\u15EC\\u15ED\\u15EE\\u15EF\\u15F0\\u15F1\\u15F2\\u15F3\\u15F4\\u15F5\\u15F6\\u15F7\\u15F8\\u15F9\\u15FA\\u15FB\\u15FC\\u15FD\\u15FE\\u15FF\\u1600\\u1601\\u1602\\u1603\\u1604\\u1605\\u1606\\u1607\\u1608\\u1609\\u160A\\u160B\\u160C\\u160D\\u160E\\u160F\\u1610\\u1611\\u1612\\u1613\\u1614\\u1615\\u1616\\u1617\\u1618\\u1619\\u161A\\u161B\\u161C\\u161D\\u161E\\u161F\\u1620\\u1621\\u1622\\u1623\\u1624\\u1625\\u1626\\u1627\\u1628\\u1629\\u162A\\u162B\\u162C\\u162D\\u162E\\u162F\\u1630\\u1631\\u1632\\u1633\\u1634\\u1635\\u1636\\u1637\\u1638\\u1639\\u163A\\u163B\\u163C\\u163D\\u163E\\u163F\\u1640\\u1641\\u1642\\u1643\\u1644\\u1645\\u1646\\u1647\\u1648\\u1649\\u164A\\u164B\\u164C\\u164D\\u164E\\u164F\\u1650\\u1651\\u1652\\u1653\\u1654\\u1655\\u1656\\u1657\\u1658\\u1659\\u165A\\u165B\\u165C\\u165D\\u165E\\u165F\\u1660\\u1661\\u1662\\u1663\\u1664\\u1665\\u1666\\u1667\\u1668\\u1669\\u166A\\u166B\\u166C\\u166F\\u1670\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1681\\u1682\\u1683\\u1684\\u1685\\u1686\\u1687\\u1688\\u1689\\u168A\\u168B\\u168C\\u168D\\u168E\\u168F\\u1690\\u1691\\u1692\\u1693\\u1694\\u1695\\u1696\\u1697\\u1698\\u1699\\u169A\\u16A0\\u16A1\\u16A2\\u16A3\\u16A4\\u16A5\\u16A6\\u16A7\\u16A8\\u16A9\\u16AA\\u16AB\\u16AC\\u16AD\\u16AE\\u16AF\\u16B0\\u16B1\\u16B2\\u16B3\\u16B4\\u16B5\\u16B6\\u16B7\\u16B8\\u16B9\\u16BA\\u16BB\\u16BC\\u16BD\\u16BE\\u16BF\\u16C0\\u16C1\\u16C2\\u16C3\\u16C4\\u16C5\\u16C6\\u16C7\\u16C8\\u16C9\\u16CA\\u16CB\\u16CC\\u16CD\\u16CE\\u16CF\\u16D0\\u16D1\\u16D2\\u16D3\\u16D4\\u16D5\\u16D6\\u16D7\\u16D8\\u16D9\\u16DA\\u16DB\\u16DC\\u16DD\\u16DE\\u16DF\\u16E0\\u16E1\\u16E2\\u16E3\\u16E4\\u16E5\\u16E6\\u16E7\\u16E8\\u16E9\\u16EA\\u1700\\u1701\\u1702\\u1703\\u1704\\u1705\\u1706\\u1707\\u1708\\u1709\\u170A\\u170B\\u170C\\u170E\\u170F\\u1710\\u1711\\u1720\\u1721\\u1722\\u1723\\u1724\\u1725\\u1726\\u1727\\u1728\\u1729\\u172A\\u172B\\u172C\\u172D\\u172E\\u172F\\u1730\\u1731\\u1740\\u1741\\u1742\\u1743\\u1744\\u1745\\u1746\\u1747\\u1748\\u1749\\u174A\\u174B\\u174C\\u174D\\u174E\\u174F\\u1750\\u1751\\u1760\\u1761\\u1762\\u1763\\u1764\\u1765\\u1766\\u1767\\u1768\\u1769\\u176A\\u176B\\u176C\\u176E\\u176F\\u1770\\u1780\\u1781\\u1782\\u1783\\u1784\\u1785\\u1786\\u1787\\u1788\\u1789\\u178A\\u178B\\u178C\\u178D\\u178E\\u178F\\u1790\\u1791\\u1792\\u1793\\u1794\\u1795\\u1796\\u1797\\u1798\\u1799\\u179A\\u179B\\u179C\\u179D\\u179E\\u179F\\u17A0\\u17A1\\u17A2\\u17A3\\u17A4\\u17A5\\u17A6\\u17A7\\u17A8\\u17A9\\u17AA\\u17AB\\u17AC\\u17AD\\u17AE\\u17AF\\u17B0\\u17B1\\u17B2\\u17B3\\u17DC\\u1820\\u1821\\u1822\\u1823\\u1824\\u1825\\u1826\\u1827\\u1828\\u1829\\u182A\\u182B\\u182C\\u182D\\u182E\\u182F\\u1830\\u1831\\u1832\\u1833\\u1834\\u1835\\u1836\\u1837\\u1838\\u1839\\u183A\\u183B\\u183C\\u183D\\u183E\\u183F\\u1840\\u1841\\u1842\\u1844\\u1845\\u1846\\u1847\\u1848\\u1849\\u184A\\u184B\\u184C\\u184D\\u184E\\u184F\\u1850\\u1851\\u1852\\u1853\\u1854\\u1855\\u1856\\u1857\\u1858\\u1859\\u185A\\u185B\\u185C\\u185D\\u185E\\u185F\\u1860\\u1861\\u1862\\u1863\\u1864\\u1865\\u1866\\u1867\\u1868\\u1869\\u186A\\u186B\\u186C\\u186D\\u186E\\u186F\\u1870\\u1871\\u1872\\u1873\\u1874\\u1875\\u1876\\u1877\\u1880\\u1881\\u1882\\u1883\\u1884\\u1885\\u1886\\u1887\\u1888\\u1889\\u188A\\u188B\\u188C\\u188D\\u188E\\u188F\\u1890\\u1891\\u1892\\u1893\\u1894\\u1895\\u1896\\u1897\\u1898\\u1899\\u189A\\u189B\\u189C\\u189D\\u189E\\u189F\\u18A0\\u18A1\\u18A2\\u18A3\\u18A4\\u18A5\\u18A6\\u18A7\\u18A8\\u18AA\\u1900\\u1901\\u1902\\u1903\\u1904\\u1905\\u1906\\u1907\\u1908\\u1909\\u190A\\u190B\\u190C\\u190D\\u190E\\u190F\\u1910\\u1911\\u1912\\u1913\\u1914\\u1915\\u1916\\u1917\\u1918\\u1919\\u191A\\u191B\\u191C\\u1950\\u1951\\u1952\\u1953\\u1954\\u1955\\u1956\\u1957\\u1958\\u1959\\u195A\\u195B\\u195C\\u195D\\u195E\\u195F\\u1960\\u1961\\u1962\\u1963\\u1964\\u1965\\u1966\\u1967\\u1968\\u1969\\u196A\\u196B\\u196C\\u196D\\u1970\\u1971\\u1972\\u1973\\u1974\\u1980\\u1981\\u1982\\u1983\\u1984\\u1985\\u1986\\u1987\\u1988\\u1989\\u198A\\u198B\\u198C\\u198D\\u198E\\u198F\\u1990\\u1991\\u1992\\u1993\\u1994\\u1995\\u1996\\u1997\\u1998\\u1999\\u199A\\u199B\\u199C\\u199D\\u199E\\u199F\\u19A0\\u19A1\\u19A2\\u19A3\\u19A4\\u19A5\\u19A6\\u19A7\\u19A8\\u19A9\\u19C1\\u19C2\\u19C3\\u19C4\\u19C5\\u19C6\\u19C7\\u1A00\\u1A01\\u1A02\\u1A03\\u1A04\\u1A05\\u1A06\\u1A07\\u1A08\\u1A09\\u1A0A\\u1A0B\\u1A0C\\u1A0D\\u1A0E\\u1A0F\\u1A10\\u1A11\\u1A12\\u1A13\\u1A14\\u1A15\\u1A16\\u1B05\\u1B06\\u1B07\\u1B08\\u1B09\\u1B0A\\u1B0B\\u1B0C\\u1B0D\\u1B0E\\u1B0F\\u1B10\\u1B11\\u1B12\\u1B13\\u1B14\\u1B15\\u1B16\\u1B17\\u1B18\\u1B19\\u1B1A\\u1B1B\\u1B1C\\u1B1D\\u1B1E\\u1B1F\\u1B20\\u1B21\\u1B22\\u1B23\\u1B24\\u1B25\\u1B26\\u1B27\\u1B28\\u1B29\\u1B2A\\u1B2B\\u1B2C\\u1B2D\\u1B2E\\u1B2F\\u1B30\\u1B31\\u1B32\\u1B33\\u1B45\\u1B46\\u1B47\\u1B48\\u1B49\\u1B4A\\u1B4B\\u1B83\\u1B84\\u1B85\\u1B86\\u1B87\\u1B88\\u1B89\\u1B8A\\u1B8B\\u1B8C\\u1B8D\\u1B8E\\u1B8F\\u1B90\\u1B91\\u1B92\\u1B93\\u1B94\\u1B95\\u1B96\\u1B97\\u1B98\\u1B99\\u1B9A\\u1B9B\\u1B9C\\u1B9D\\u1B9E\\u1B9F\\u1BA0\\u1BAE\\u1BAF\\u1C00\\u1C01\\u1C02\\u1C03\\u1C04\\u1C05\\u1C06\\u1C07\\u1C08\\u1C09\\u1C0A\\u1C0B\\u1C0C\\u1C0D\\u1C0E\\u1C0F\\u1C10\\u1C11\\u1C12\\u1C13\\u1C14\\u1C15\\u1C16\\u1C17\\u1C18\\u1C19\\u1C1A\\u1C1B\\u1C1C\\u1C1D\\u1C1E\\u1C1F\\u1C20\\u1C21\\u1C22\\u1C23\\u1C4D\\u1C4E\\u1C4F\\u1C5A\\u1C5B\\u1C5C\\u1C5D\\u1C5E\\u1C5F\\u1C60\\u1C61\\u1C62\\u1C63\\u1C64\\u1C65\\u1C66\\u1C67\\u1C68\\u1C69\\u1C6A\\u1C6B\\u1C6C\\u1C6D\\u1C6E\\u1C6F\\u1C70\\u1C71\\u1C72\\u1C73\\u1C74\\u1C75\\u1C76\\u1C77\\u2135\\u2136\\u2137\\u2138\\u2D30\\u2D31\\u2D32\\u2D33\\u2D34\\u2D35\\u2D36\\u2D37\\u2D38\\u2D39\\u2D3A\\u2D3B\\u2D3C\\u2D3D\\u2D3E\\u2D3F\\u2D40\\u2D41\\u2D42\\u2D43\\u2D44\\u2D45\\u2D46\\u2D47\\u2D48\\u2D49\\u2D4A\\u2D4B\\u2D4C\\u2D4D\\u2D4E\\u2D4F\\u2D50\\u2D51\\u2D52\\u2D53\\u2D54\\u2D55\\u2D56\\u2D57\\u2D58\\u2D59\\u2D5A\\u2D5B\\u2D5C\\u2D5D\\u2D5E\\u2D5F\\u2D60\\u2D61\\u2D62\\u2D63\\u2D64\\u2D65\\u2D80\\u2D81\\u2D82\\u2D83\\u2D84\\u2D85\\u2D86\\u2D87\\u2D88\\u2D89\\u2D8A\\u2D8B\\u2D8C\\u2D8D\\u2D8E\\u2D8F\\u2D90\\u2D91\\u2D92\\u2D93\\u2D94\\u2D95\\u2D96\\u2DA0\\u2DA1\\u2DA2\\u2DA3\\u2DA4\\u2DA5\\u2DA6\\u2DA8\\u2DA9\\u2DAA\\u2DAB\\u2DAC\\u2DAD\\u2DAE\\u2DB0\\u2DB1\\u2DB2\\u2DB3\\u2DB4\\u2DB5\\u2DB6\\u2DB8\\u2DB9\\u2DBA\\u2DBB\\u2DBC\\u2DBD\\u2DBE\\u2DC0\\u2DC1\\u2DC2\\u2DC3\\u2DC4\\u2DC5\\u2DC6\\u2DC8\\u2DC9\\u2DCA\\u2DCB\\u2DCC\\u2DCD\\u2DCE\\u2DD0\\u2DD1\\u2DD2\\u2DD3\\u2DD4\\u2DD5\\u2DD6\\u2DD8\\u2DD9\\u2DDA\\u2DDB\\u2DDC\\u2DDD\\u2DDE\\u3006\\u303C\\u3041\\u3042\\u3043\\u3044\\u3045\\u3046\\u3047\\u3048\\u3049\\u304A\\u304B\\u304C\\u304D\\u304E\\u304F\\u3050\\u3051\\u3052\\u3053\\u3054\\u3055\\u3056\\u3057\\u3058\\u3059\\u305A\\u305B\\u305C\\u305D\\u305E\\u305F\\u3060\\u3061\\u3062\\u3063\\u3064\\u3065\\u3066\\u3067\\u3068\\u3069\\u306A\\u306B\\u306C\\u306D\\u306E\\u306F\\u3070\\u3071\\u3072\\u3073\\u3074\\u3075\\u3076\\u3077\\u3078\\u3079\\u307A\\u307B\\u307C\\u307D\\u307E\\u307F\\u3080\\u3081\\u3082\\u3083\\u3084\\u3085\\u3086\\u3087\\u3088\\u3089\\u308A\\u308B\\u308C\\u308D\\u308E\\u308F\\u3090\\u3091\\u3092\\u3093\\u3094\\u3095\\u3096\\u309F\\u30A1\\u30A2\\u30A3\\u30A4\\u30A5\\u30A6\\u30A7\\u30A8\\u30A9\\u30AA\\u30AB\\u30AC\\u30AD\\u30AE\\u30AF\\u30B0\\u30B1\\u30B2\\u30B3\\u30B4\\u30B5\\u30B6\\u30B7\\u30B8\\u30B9\\u30BA\\u30BB\\u30BC\\u30BD\\u30BE\\u30BF\\u30C0\\u30C1\\u30C2\\u30C3\\u30C4\\u30C5\\u30C6\\u30C7\\u30C8\\u30C9\\u30CA\\u30CB\\u30CC\\u30CD\\u30CE\\u30CF\\u30D0\\u30D1\\u30D2\\u30D3\\u30D4\\u30D5\\u30D6\\u30D7\\u30D8\\u30D9\\u30DA\\u30DB\\u30DC\\u30DD\\u30DE\\u30DF\\u30E0\\u30E1\\u30E2\\u30E3\\u30E4\\u30E5\\u30E6\\u30E7\\u30E8\\u30E9\\u30EA\\u30EB\\u30EC\\u30ED\\u30EE\\u30EF\\u30F0\\u30F1\\u30F2\\u30F3\\u30F4\\u30F5\\u30F6\\u30F7\\u30F8\\u30F9\\u30FA\\u30FF\\u3105\\u3106\\u3107\\u3108\\u3109\\u310A\\u310B\\u310C\\u310D\\u310E\\u310F\\u3110\\u3111\\u3112\\u3113\\u3114\\u3115\\u3116\\u3117\\u3118\\u3119\\u311A\\u311B\\u311C\\u311D\\u311E\\u311F\\u3120\\u3121\\u3122\\u3123\\u3124\\u3125\\u3126\\u3127\\u3128\\u3129\\u312A\\u312B\\u312C\\u312D\\u3131\\u3132\\u3133\\u3134\\u3135\\u3136\\u3137\\u3138\\u3139\\u313A\\u313B\\u313C\\u313D\\u313E\\u313F\\u3140\\u3141\\u3142\\u3143\\u3144\\u3145\\u3146\\u3147\\u3148\\u3149\\u314A\\u314B\\u314C\\u314D\\u314E\\u314F\\u3150\\u3151\\u3152\\u3153\\u3154\\u3155\\u3156\\u3157\\u3158\\u3159\\u315A\\u315B\\u315C\\u315D\\u315E\\u315F\\u3160\\u3161\\u3162\\u3163\\u3164\\u3165\\u3166\\u3167\\u3168\\u3169\\u316A\\u316B\\u316C\\u316D\\u316E\\u316F\\u3170\\u3171\\u3172\\u3173\\u3174\\u3175\\u3176\\u3177\\u3178\\u3179\\u317A\\u317B\\u317C\\u317D\\u317E\\u317F\\u3180\\u3181\\u3182\\u3183\\u3184\\u3185\\u3186\\u3187\\u3188\\u3189\\u318A\\u318B\\u318C\\u318D\\u318E\\u31A0\\u31A1\\u31A2\\u31A3\\u31A4\\u31A5\\u31A6\\u31A7\\u31A8\\u31A9\\u31AA\\u31AB\\u31AC\\u31AD\\u31AE\\u31AF\\u31B0\\u31B1\\u31B2\\u31B3\\u31B4\\u31B5\\u31B6\\u31B7\\u31F0\\u31F1\\u31F2\\u31F3\\u31F4\\u31F5\\u31F6\\u31F7\\u31F8\\u31F9\\u31FA\\u31FB\\u31FC\\u31FD\\u31FE\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000\\uA001\\uA002\\uA003\\uA004\\uA005\\uA006\\uA007\\uA008\\uA009\\uA00A\\uA00B\\uA00C\\uA00D\\uA00E\\uA00F\\uA010\\uA011\\uA012\\uA013\\uA014\\uA016\\uA017\\uA018\\uA019\\uA01A\\uA01B\\uA01C\\uA01D\\uA01E\\uA01F\\uA020\\uA021\\uA022\\uA023\\uA024\\uA025\\uA026\\uA027\\uA028\\uA029\\uA02A\\uA02B\\uA02C\\uA02D\\uA02E\\uA02F\\uA030\\uA031\\uA032\\uA033\\uA034\\uA035\\uA036\\uA037\\uA038\\uA039\\uA03A\\uA03B\\uA03C\\uA03D\\uA03E\\uA03F\\uA040\\uA041\\uA042\\uA043\\uA044\\uA045\\uA046\\uA047\\uA048\\uA049\\uA04A\\uA04B\\uA04C\\uA04D\\uA04E\\uA04F\\uA050\\uA051\\uA052\\uA053\\uA054\\uA055\\uA056\\uA057\\uA058\\uA059\\uA05A\\uA05B\\uA05C\\uA05D\\uA05E\\uA05F\\uA060\\uA061\\uA062\\uA063\\uA064\\uA065\\uA066\\uA067\\uA068\\uA069\\uA06A\\uA06B\\uA06C\\uA06D\\uA06E\\uA06F\\uA070\\uA071\\uA072\\uA073\\uA074\\uA075\\uA076\\uA077\\uA078\\uA079\\uA07A\\uA07B\\uA07C\\uA07D\\uA07E\\uA07F\\uA080\\uA081\\uA082\\uA083\\uA084\\uA085\\uA086\\uA087\\uA088\\uA089\\uA08A\\uA08B\\uA08C\\uA08D\\uA08E\\uA08F\\uA090\\uA091\\uA092\\uA093\\uA094\\uA095\\uA096\\uA097\\uA098\\uA099\\uA09A\\uA09B\\uA09C\\uA09D\\uA09E\\uA09F\\uA0A0\\uA0A1\\uA0A2\\uA0A3\\uA0A4\\uA0A5\\uA0A6\\uA0A7\\uA0A8\\uA0A9\\uA0AA\\uA0AB\\uA0AC\\uA0AD\\uA0AE\\uA0AF\\uA0B0\\uA0B1\\uA0B2\\uA0B3\\uA0B4\\uA0B5\\uA0B6\\uA0B7\\uA0B8\\uA0B9\\uA0BA\\uA0BB\\uA0BC\\uA0BD\\uA0BE\\uA0BF\\uA0C0\\uA0C1\\uA0C2\\uA0C3\\uA0C4\\uA0C5\\uA0C6\\uA0C7\\uA0C8\\uA0C9\\uA0CA\\uA0CB\\uA0CC\\uA0CD\\uA0CE\\uA0CF\\uA0D0\\uA0D1\\uA0D2\\uA0D3\\uA0D4\\uA0D5\\uA0D6\\uA0D7\\uA0D8\\uA0D9\\uA0DA\\uA0DB\\uA0DC\\uA0DD\\uA0DE\\uA0DF\\uA0E0\\uA0E1\\uA0E2\\uA0E3\\uA0E4\\uA0E5\\uA0E6\\uA0E7\\uA0E8\\uA0E9\\uA0EA\\uA0EB\\uA0EC\\uA0ED\\uA0EE\\uA0EF\\uA0F0\\uA0F1\\uA0F2\\uA0F3\\uA0F4\\uA0F5\\uA0F6\\uA0F7\\uA0F8\\uA0F9\\uA0FA\\uA0FB\\uA0FC\\uA0FD\\uA0FE\\uA0FF\\uA100\\uA101\\uA102\\uA103\\uA104\\uA105\\uA106\\uA107\\uA108\\uA109\\uA10A\\uA10B\\uA10C\\uA10D\\uA10E\\uA10F\\uA110\\uA111\\uA112\\uA113\\uA114\\uA115\\uA116\\uA117\\uA118\\uA119\\uA11A\\uA11B\\uA11C\\uA11D\\uA11E\\uA11F\\uA120\\uA121\\uA122\\uA123\\uA124\\uA125\\uA126\\uA127\\uA128\\uA129\\uA12A\\uA12B\\uA12C\\uA12D\\uA12E\\uA12F\\uA130\\uA131\\uA132\\uA133\\uA134\\uA135\\uA136\\uA137\\uA138\\uA139\\uA13A\\uA13B\\uA13C\\uA13D\\uA13E\\uA13F\\uA140\\uA141\\uA142\\uA143\\uA144\\uA145\\uA146\\uA147\\uA148\\uA149\\uA14A\\uA14B\\uA14C\\uA14D\\uA14E\\uA14F\\uA150\\uA151\\uA152\\uA153\\uA154\\uA155\\uA156\\uA157\\uA158\\uA159\\uA15A\\uA15B\\uA15C\\uA15D\\uA15E\\uA15F\\uA160\\uA161\\uA162\\uA163\\uA164\\uA165\\uA166\\uA167\\uA168\\uA169\\uA16A\\uA16B\\uA16C\\uA16D\\uA16E\\uA16F\\uA170\\uA171\\uA172\\uA173\\uA174\\uA175\\uA176\\uA177\\uA178\\uA179\\uA17A\\uA17B\\uA17C\\uA17D\\uA17E\\uA17F\\uA180\\uA181\\uA182\\uA183\\uA184\\uA185\\uA186\\uA187\\uA188\\uA189\\uA18A\\uA18B\\uA18C\\uA18D\\uA18E\\uA18F\\uA190\\uA191\\uA192\\uA193\\uA194\\uA195\\uA196\\uA197\\uA198\\uA199\\uA19A\\uA19B\\uA19C\\uA19D\\uA19E\\uA19F\\uA1A0\\uA1A1\\uA1A2\\uA1A3\\uA1A4\\uA1A5\\uA1A6\\uA1A7\\uA1A8\\uA1A9\\uA1AA\\uA1AB\\uA1AC\\uA1AD\\uA1AE\\uA1AF\\uA1B0\\uA1B1\\uA1B2\\uA1B3\\uA1B4\\uA1B5\\uA1B6\\uA1B7\\uA1B8\\uA1B9\\uA1BA\\uA1BB\\uA1BC\\uA1BD\\uA1BE\\uA1BF\\uA1C0\\uA1C1\\uA1C2\\uA1C3\\uA1C4\\uA1C5\\uA1C6\\uA1C7\\uA1C8\\uA1C9\\uA1CA\\uA1CB\\uA1CC\\uA1CD\\uA1CE\\uA1CF\\uA1D0\\uA1D1\\uA1D2\\uA1D3\\uA1D4\\uA1D5\\uA1D6\\uA1D7\\uA1D8\\uA1D9\\uA1DA\\uA1DB\\uA1DC\\uA1DD\\uA1DE\\uA1DF\\uA1E0\\uA1E1\\uA1E2\\uA1E3\\uA1E4\\uA1E5\\uA1E6\\uA1E7\\uA1E8\\uA1E9\\uA1EA\\uA1EB\\uA1EC\\uA1ED\\uA1EE\\uA1EF\\uA1F0\\uA1F1\\uA1F2\\uA1F3\\uA1F4\\uA1F5\\uA1F6\\uA1F7\\uA1F8\\uA1F9\\uA1FA\\uA1FB\\uA1FC\\uA1FD\\uA1FE\\uA1FF\\uA200\\uA201\\uA202\\uA203\\uA204\\uA205\\uA206\\uA207\\uA208\\uA209\\uA20A\\uA20B\\uA20C\\uA20D\\uA20E\\uA20F\\uA210\\uA211\\uA212\\uA213\\uA214\\uA215\\uA216\\uA217\\uA218\\uA219\\uA21A\\uA21B\\uA21C\\uA21D\\uA21E\\uA21F\\uA220\\uA221\\uA222\\uA223\\uA224\\uA225\\uA226\\uA227\\uA228\\uA229\\uA22A\\uA22B\\uA22C\\uA22D\\uA22E\\uA22F\\uA230\\uA231\\uA232\\uA233\\uA234\\uA235\\uA236\\uA237\\uA238\\uA239\\uA23A\\uA23B\\uA23C\\uA23D\\uA23E\\uA23F\\uA240\\uA241\\uA242\\uA243\\uA244\\uA245\\uA246\\uA247\\uA248\\uA249\\uA24A\\uA24B\\uA24C\\uA24D\\uA24E\\uA24F\\uA250\\uA251\\uA252\\uA253\\uA254\\uA255\\uA256\\uA257\\uA258\\uA259\\uA25A\\uA25B\\uA25C\\uA25D\\uA25E\\uA25F\\uA260\\uA261\\uA262\\uA263\\uA264\\uA265\\uA266\\uA267\\uA268\\uA269\\uA26A\\uA26B\\uA26C\\uA26D\\uA26E\\uA26F\\uA270\\uA271\\uA272\\uA273\\uA274\\uA275\\uA276\\uA277\\uA278\\uA279\\uA27A\\uA27B\\uA27C\\uA27D\\uA27E\\uA27F\\uA280\\uA281\\uA282\\uA283\\uA284\\uA285\\uA286\\uA287\\uA288\\uA289\\uA28A\\uA28B\\uA28C\\uA28D\\uA28E\\uA28F\\uA290\\uA291\\uA292\\uA293\\uA294\\uA295\\uA296\\uA297\\uA298\\uA299\\uA29A\\uA29B\\uA29C\\uA29D\\uA29E\\uA29F\\uA2A0\\uA2A1\\uA2A2\\uA2A3\\uA2A4\\uA2A5\\uA2A6\\uA2A7\\uA2A8\\uA2A9\\uA2AA\\uA2AB\\uA2AC\\uA2AD\\uA2AE\\uA2AF\\uA2B0\\uA2B1\\uA2B2\\uA2B3\\uA2B4\\uA2B5\\uA2B6\\uA2B7\\uA2B8\\uA2B9\\uA2BA\\uA2BB\\uA2BC\\uA2BD\\uA2BE\\uA2BF\\uA2C0\\uA2C1\\uA2C2\\uA2C3\\uA2C4\\uA2C5\\uA2C6\\uA2C7\\uA2C8\\uA2C9\\uA2CA\\uA2CB\\uA2CC\\uA2CD\\uA2CE\\uA2CF\\uA2D0\\uA2D1\\uA2D2\\uA2D3\\uA2D4\\uA2D5\\uA2D6\\uA2D7\\uA2D8\\uA2D9\\uA2DA\\uA2DB\\uA2DC\\uA2DD\\uA2DE\\uA2DF\\uA2E0\\uA2E1\\uA2E2\\uA2E3\\uA2E4\\uA2E5\\uA2E6\\uA2E7\\uA2E8\\uA2E9\\uA2EA\\uA2EB\\uA2EC\\uA2ED\\uA2EE\\uA2EF\\uA2F0\\uA2F1\\uA2F2\\uA2F3\\uA2F4\\uA2F5\\uA2F6\\uA2F7\\uA2F8\\uA2F9\\uA2FA\\uA2FB\\uA2FC\\uA2FD\\uA2FE\\uA2FF\\uA300\\uA301\\uA302\\uA303\\uA304\\uA305\\uA306\\uA307\\uA308\\uA309\\uA30A\\uA30B\\uA30C\\uA30D\\uA30E\\uA30F\\uA310\\uA311\\uA312\\uA313\\uA314\\uA315\\uA316\\uA317\\uA318\\uA319\\uA31A\\uA31B\\uA31C\\uA31D\\uA31E\\uA31F\\uA320\\uA321\\uA322\\uA323\\uA324\\uA325\\uA326\\uA327\\uA328\\uA329\\uA32A\\uA32B\\uA32C\\uA32D\\uA32E\\uA32F\\uA330\\uA331\\uA332\\uA333\\uA334\\uA335\\uA336\\uA337\\uA338\\uA339\\uA33A\\uA33B\\uA33C\\uA33D\\uA33E\\uA33F\\uA340\\uA341\\uA342\\uA343\\uA344\\uA345\\uA346\\uA347\\uA348\\uA349\\uA34A\\uA34B\\uA34C\\uA34D\\uA34E\\uA34F\\uA350\\uA351\\uA352\\uA353\\uA354\\uA355\\uA356\\uA357\\uA358\\uA359\\uA35A\\uA35B\\uA35C\\uA35D\\uA35E\\uA35F\\uA360\\uA361\\uA362\\uA363\\uA364\\uA365\\uA366\\uA367\\uA368\\uA369\\uA36A\\uA36B\\uA36C\\uA36D\\uA36E\\uA36F\\uA370\\uA371\\uA372\\uA373\\uA374\\uA375\\uA376\\uA377\\uA378\\uA379\\uA37A\\uA37B\\uA37C\\uA37D\\uA37E\\uA37F\\uA380\\uA381\\uA382\\uA383\\uA384\\uA385\\uA386\\uA387\\uA388\\uA389\\uA38A\\uA38B\\uA38C\\uA38D\\uA38E\\uA38F\\uA390\\uA391\\uA392\\uA393\\uA394\\uA395\\uA396\\uA397\\uA398\\uA399\\uA39A\\uA39B\\uA39C\\uA39D\\uA39E\\uA39F\\uA3A0\\uA3A1\\uA3A2\\uA3A3\\uA3A4\\uA3A5\\uA3A6\\uA3A7\\uA3A8\\uA3A9\\uA3AA\\uA3AB\\uA3AC\\uA3AD\\uA3AE\\uA3AF\\uA3B0\\uA3B1\\uA3B2\\uA3B3\\uA3B4\\uA3B5\\uA3B6\\uA3B7\\uA3B8\\uA3B9\\uA3BA\\uA3BB\\uA3BC\\uA3BD\\uA3BE\\uA3BF\\uA3C0\\uA3C1\\uA3C2\\uA3C3\\uA3C4\\uA3C5\\uA3C6\\uA3C7\\uA3C8\\uA3C9\\uA3CA\\uA3CB\\uA3CC\\uA3CD\\uA3CE\\uA3CF\\uA3D0\\uA3D1\\uA3D2\\uA3D3\\uA3D4\\uA3D5\\uA3D6\\uA3D7\\uA3D8\\uA3D9\\uA3DA\\uA3DB\\uA3DC\\uA3DD\\uA3DE\\uA3DF\\uA3E0\\uA3E1\\uA3E2\\uA3E3\\uA3E4\\uA3E5\\uA3E6\\uA3E7\\uA3E8\\uA3E9\\uA3EA\\uA3EB\\uA3EC\\uA3ED\\uA3EE\\uA3EF\\uA3F0\\uA3F1\\uA3F2\\uA3F3\\uA3F4\\uA3F5\\uA3F6\\uA3F7\\uA3F8\\uA3F9\\uA3FA\\uA3FB\\uA3FC\\uA3FD\\uA3FE\\uA3FF\\uA400\\uA401\\uA402\\uA403\\uA404\\uA405\\uA406\\uA407\\uA408\\uA409\\uA40A\\uA40B\\uA40C\\uA40D\\uA40E\\uA40F\\uA410\\uA411\\uA412\\uA413\\uA414\\uA415\\uA416\\uA417\\uA418\\uA419\\uA41A\\uA41B\\uA41C\\uA41D\\uA41E\\uA41F\\uA420\\uA421\\uA422\\uA423\\uA424\\uA425\\uA426\\uA427\\uA428\\uA429\\uA42A\\uA42B\\uA42C\\uA42D\\uA42E\\uA42F\\uA430\\uA431\\uA432\\uA433\\uA434\\uA435\\uA436\\uA437\\uA438\\uA439\\uA43A\\uA43B\\uA43C\\uA43D\\uA43E\\uA43F\\uA440\\uA441\\uA442\\uA443\\uA444\\uA445\\uA446\\uA447\\uA448\\uA449\\uA44A\\uA44B\\uA44C\\uA44D\\uA44E\\uA44F\\uA450\\uA451\\uA452\\uA453\\uA454\\uA455\\uA456\\uA457\\uA458\\uA459\\uA45A\\uA45B\\uA45C\\uA45D\\uA45E\\uA45F\\uA460\\uA461\\uA462\\uA463\\uA464\\uA465\\uA466\\uA467\\uA468\\uA469\\uA46A\\uA46B\\uA46C\\uA46D\\uA46E\\uA46F\\uA470\\uA471\\uA472\\uA473\\uA474\\uA475\\uA476\\uA477\\uA478\\uA479\\uA47A\\uA47B\\uA47C\\uA47D\\uA47E\\uA47F\\uA480\\uA481\\uA482\\uA483\\uA484\\uA485\\uA486\\uA487\\uA488\\uA489\\uA48A\\uA48B\\uA48C\\uA500\\uA501\\uA502\\uA503\\uA504\\uA505\\uA506\\uA507\\uA508\\uA509\\uA50A\\uA50B\\uA50C\\uA50D\\uA50E\\uA50F\\uA510\\uA511\\uA512\\uA513\\uA514\\uA515\\uA516\\uA517\\uA518\\uA519\\uA51A\\uA51B\\uA51C\\uA51D\\uA51E\\uA51F\\uA520\\uA521\\uA522\\uA523\\uA524\\uA525\\uA526\\uA527\\uA528\\uA529\\uA52A\\uA52B\\uA52C\\uA52D\\uA52E\\uA52F\\uA530\\uA531\\uA532\\uA533\\uA534\\uA535\\uA536\\uA537\\uA538\\uA539\\uA53A\\uA53B\\uA53C\\uA53D\\uA53E\\uA53F\\uA540\\uA541\\uA542\\uA543\\uA544\\uA545\\uA546\\uA547\\uA548\\uA549\\uA54A\\uA54B\\uA54C\\uA54D\\uA54E\\uA54F\\uA550\\uA551\\uA552\\uA553\\uA554\\uA555\\uA556\\uA557\\uA558\\uA559\\uA55A\\uA55B\\uA55C\\uA55D\\uA55E\\uA55F\\uA560\\uA561\\uA562\\uA563\\uA564\\uA565\\uA566\\uA567\\uA568\\uA569\\uA56A\\uA56B\\uA56C\\uA56D\\uA56E\\uA56F\\uA570\\uA571\\uA572\\uA573\\uA574\\uA575\\uA576\\uA577\\uA578\\uA579\\uA57A\\uA57B\\uA57C\\uA57D\\uA57E\\uA57F\\uA580\\uA581\\uA582\\uA583\\uA584\\uA585\\uA586\\uA587\\uA588\\uA589\\uA58A\\uA58B\\uA58C\\uA58D\\uA58E\\uA58F\\uA590\\uA591\\uA592\\uA593\\uA594\\uA595\\uA596\\uA597\\uA598\\uA599\\uA59A\\uA59B\\uA59C\\uA59D\\uA59E\\uA59F\\uA5A0\\uA5A1\\uA5A2\\uA5A3\\uA5A4\\uA5A5\\uA5A6\\uA5A7\\uA5A8\\uA5A9\\uA5AA\\uA5AB\\uA5AC\\uA5AD\\uA5AE\\uA5AF\\uA5B0\\uA5B1\\uA5B2\\uA5B3\\uA5B4\\uA5B5\\uA5B6\\uA5B7\\uA5B8\\uA5B9\\uA5BA\\uA5BB\\uA5BC\\uA5BD\\uA5BE\\uA5BF\\uA5C0\\uA5C1\\uA5C2\\uA5C3\\uA5C4\\uA5C5\\uA5C6\\uA5C7\\uA5C8\\uA5C9\\uA5CA\\uA5CB\\uA5CC\\uA5CD\\uA5CE\\uA5CF\\uA5D0\\uA5D1\\uA5D2\\uA5D3\\uA5D4\\uA5D5\\uA5D6\\uA5D7\\uA5D8\\uA5D9\\uA5DA\\uA5DB\\uA5DC\\uA5DD\\uA5DE\\uA5DF\\uA5E0\\uA5E1\\uA5E2\\uA5E3\\uA5E4\\uA5E5\\uA5E6\\uA5E7\\uA5E8\\uA5E9\\uA5EA\\uA5EB\\uA5EC\\uA5ED\\uA5EE\\uA5EF\\uA5F0\\uA5F1\\uA5F2\\uA5F3\\uA5F4\\uA5F5\\uA5F6\\uA5F7\\uA5F8\\uA5F9\\uA5FA\\uA5FB\\uA5FC\\uA5FD\\uA5FE\\uA5FF\\uA600\\uA601\\uA602\\uA603\\uA604\\uA605\\uA606\\uA607\\uA608\\uA609\\uA60A\\uA60B\\uA610\\uA611\\uA612\\uA613\\uA614\\uA615\\uA616\\uA617\\uA618\\uA619\\uA61A\\uA61B\\uA61C\\uA61D\\uA61E\\uA61F\\uA62A\\uA62B\\uA66E\\uA7FB\\uA7FC\\uA7FD\\uA7FE\\uA7FF\\uA800\\uA801\\uA803\\uA804\\uA805\\uA807\\uA808\\uA809\\uA80A\\uA80C\\uA80D\\uA80E\\uA80F\\uA810\\uA811\\uA812\\uA813\\uA814\\uA815\\uA816\\uA817\\uA818\\uA819\\uA81A\\uA81B\\uA81C\\uA81D\\uA81E\\uA81F\\uA820\\uA821\\uA822\\uA840\\uA841\\uA842\\uA843\\uA844\\uA845\\uA846\\uA847\\uA848\\uA849\\uA84A\\uA84B\\uA84C\\uA84D\\uA84E\\uA84F\\uA850\\uA851\\uA852\\uA853\\uA854\\uA855\\uA856\\uA857\\uA858\\uA859\\uA85A\\uA85B\\uA85C\\uA85D\\uA85E\\uA85F\\uA860\\uA861\\uA862\\uA863\\uA864\\uA865\\uA866\\uA867\\uA868\\uA869\\uA86A\\uA86B\\uA86C\\uA86D\\uA86E\\uA86F\\uA870\\uA871\\uA872\\uA873\\uA882\\uA883\\uA884\\uA885\\uA886\\uA887\\uA888\\uA889\\uA88A\\uA88B\\uA88C\\uA88D\\uA88E\\uA88F\\uA890\\uA891\\uA892\\uA893\\uA894\\uA895\\uA896\\uA897\\uA898\\uA899\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\uA8A1\\uA8A2\\uA8A3\\uA8A4\\uA8A5\\uA8A6\\uA8A7\\uA8A8\\uA8A9\\uA8AA\\uA8AB\\uA8AC\\uA8AD\\uA8AE\\uA8AF\\uA8B0\\uA8B1\\uA8B2\\uA8B3\\uA90A\\uA90B\\uA90C\\uA90D\\uA90E\\uA90F\\uA910\\uA911\\uA912\\uA913\\uA914\\uA915\\uA916\\uA917\\uA918\\uA919\\uA91A\\uA91B\\uA91C\\uA91D\\uA91E\\uA91F\\uA920\\uA921\\uA922\\uA923\\uA924\\uA925\\uA930\\uA931\\uA932\\uA933\\uA934\\uA935\\uA936\\uA937\\uA938\\uA939\\uA93A\\uA93B\\uA93C\\uA93D\\uA93E\\uA93F\\uA940\\uA941\\uA942\\uA943\\uA944\\uA945\\uA946\\uAA00\\uAA01\\uAA02\\uAA03\\uAA04\\uAA05\\uAA06\\uAA07\\uAA08\\uAA09\\uAA0A\\uAA0B\\uAA0C\\uAA0D\\uAA0E\\uAA0F\\uAA10\\uAA11\\uAA12\\uAA13\\uAA14\\uAA15\\uAA16\\uAA17\\uAA18\\uAA19\\uAA1A\\uAA1B\\uAA1C\\uAA1D\\uAA1E\\uAA1F\\uAA20\\uAA21\\uAA22\\uAA23\\uAA24\\uAA25\\uAA26\\uAA27\\uAA28\\uAA40\\uAA41\\uAA42\\uAA44\\uAA45\\uAA46\\uAA47\\uAA48\\uAA49\\uAA4A\\uAA4B\\uAC00\\uD7A3\\uF900\\uF901\\uF902\\uF903\\uF904\\uF905\\uF906\\uF907\\uF908\\uF909\\uF90A\\uF90B\\uF90C\\uF90D\\uF90E\\uF90F\\uF910\\uF911\\uF912\\uF913\\uF914\\uF915\\uF916\\uF917\\uF918\\uF919\\uF91A\\uF91B\\uF91C\\uF91D\\uF91E\\uF91F\\uF920\\uF921\\uF922\\uF923\\uF924\\uF925\\uF926\\uF927\\uF928\\uF929\\uF92A\\uF92B\\uF92C\\uF92D\\uF92E\\uF92F\\uF930\\uF931\\uF932\\uF933\\uF934\\uF935\\uF936\\uF937\\uF938\\uF939\\uF93A\\uF93B\\uF93C\\uF93D\\uF93E\\uF93F\\uF940\\uF941\\uF942\\uF943\\uF944\\uF945\\uF946\\uF947\\uF948\\uF949\\uF94A\\uF94B\\uF94C\\uF94D\\uF94E\\uF94F\\uF950\\uF951\\uF952\\uF953\\uF954\\uF955\\uF956\\uF957\\uF958\\uF959\\uF95A\\uF95B\\uF95C\\uF95D\\uF95E\\uF95F\\uF960\\uF961\\uF962\\uF963\\uF964\\uF965\\uF966\\uF967\\uF968\\uF969\\uF96A\\uF96B\\uF96C\\uF96D\\uF96E\\uF96F\\uF970\\uF971\\uF972\\uF973\\uF974\\uF975\\uF976\\uF977\\uF978\\uF979\\uF97A\\uF97B\\uF97C\\uF97D\\uF97E\\uF97F\\uF980\\uF981\\uF982\\uF983\\uF984\\uF985\\uF986\\uF987\\uF988\\uF989\\uF98A\\uF98B\\uF98C\\uF98D\\uF98E\\uF98F\\uF990\\uF991\\uF992\\uF993\\uF994\\uF995\\uF996\\uF997\\uF998\\uF999\\uF99A\\uF99B\\uF99C\\uF99D\\uF99E\\uF99F\\uF9A0\\uF9A1\\uF9A2\\uF9A3\\uF9A4\\uF9A5\\uF9A6\\uF9A7\\uF9A8\\uF9A9\\uF9AA\\uF9AB\\uF9AC\\uF9AD\\uF9AE\\uF9AF\\uF9B0\\uF9B1\\uF9B2\\uF9B3\\uF9B4\\uF9B5\\uF9B6\\uF9B7\\uF9B8\\uF9B9\\uF9BA\\uF9BB\\uF9BC\\uF9BD\\uF9BE\\uF9BF\\uF9C0\\uF9C1\\uF9C2\\uF9C3\\uF9C4\\uF9C5\\uF9C6\\uF9C7\\uF9C8\\uF9C9\\uF9CA\\uF9CB\\uF9CC\\uF9CD\\uF9CE\\uF9CF\\uF9D0\\uF9D1\\uF9D2\\uF9D3\\uF9D4\\uF9D5\\uF9D6\\uF9D7\\uF9D8\\uF9D9\\uF9DA\\uF9DB\\uF9DC\\uF9DD\\uF9DE\\uF9DF\\uF9E0\\uF9E1\\uF9E2\\uF9E3\\uF9E4\\uF9E5\\uF9E6\\uF9E7\\uF9E8\\uF9E9\\uF9EA\\uF9EB\\uF9EC\\uF9ED\\uF9EE\\uF9EF\\uF9F0\\uF9F1\\uF9F2\\uF9F3\\uF9F4\\uF9F5\\uF9F6\\uF9F7\\uF9F8\\uF9F9\\uF9FA\\uF9FB\\uF9FC\\uF9FD\\uF9FE\\uF9FF\\uFA00\\uFA01\\uFA02\\uFA03\\uFA04\\uFA05\\uFA06\\uFA07\\uFA08\\uFA09\\uFA0A\\uFA0B\\uFA0C\\uFA0D\\uFA0E\\uFA0F\\uFA10\\uFA11\\uFA12\\uFA13\\uFA14\\uFA15\\uFA16\\uFA17\\uFA18\\uFA19\\uFA1A\\uFA1B\\uFA1C\\uFA1D\\uFA1E\\uFA1F\\uFA20\\uFA21\\uFA22\\uFA23\\uFA24\\uFA25\\uFA26\\uFA27\\uFA28\\uFA29\\uFA2A\\uFA2B\\uFA2C\\uFA2D\\uFA30\\uFA31\\uFA32\\uFA33\\uFA34\\uFA35\\uFA36\\uFA37\\uFA38\\uFA39\\uFA3A\\uFA3B\\uFA3C\\uFA3D\\uFA3E\\uFA3F\\uFA40\\uFA41\\uFA42\\uFA43\\uFA44\\uFA45\\uFA46\\uFA47\\uFA48\\uFA49\\uFA4A\\uFA4B\\uFA4C\\uFA4D\\uFA4E\\uFA4F\\uFA50\\uFA51\\uFA52\\uFA53\\uFA54\\uFA55\\uFA56\\uFA57\\uFA58\\uFA59\\uFA5A\\uFA5B\\uFA5C\\uFA5D\\uFA5E\\uFA5F\\uFA60\\uFA61\\uFA62\\uFA63\\uFA64\\uFA65\\uFA66\\uFA67\\uFA68\\uFA69\\uFA6A\\uFA70\\uFA71\\uFA72\\uFA73\\uFA74\\uFA75\\uFA76\\uFA77\\uFA78\\uFA79\\uFA7A\\uFA7B\\uFA7C\\uFA7D\\uFA7E\\uFA7F\\uFA80\\uFA81\\uFA82\\uFA83\\uFA84\\uFA85\\uFA86\\uFA87\\uFA88\\uFA89\\uFA8A\\uFA8B\\uFA8C\\uFA8D\\uFA8E\\uFA8F\\uFA90\\uFA91\\uFA92\\uFA93\\uFA94\\uFA95\\uFA96\\uFA97\\uFA98\\uFA99\\uFA9A\\uFA9B\\uFA9C\\uFA9D\\uFA9E\\uFA9F\\uFAA0\\uFAA1\\uFAA2\\uFAA3\\uFAA4\\uFAA5\\uFAA6\\uFAA7\\uFAA8\\uFAA9\\uFAAA\\uFAAB\\uFAAC\\uFAAD\\uFAAE\\uFAAF\\uFAB0\\uFAB1\\uFAB2\\uFAB3\\uFAB4\\uFAB5\\uFAB6\\uFAB7\\uFAB8\\uFAB9\\uFABA\\uFABB\\uFABC\\uFABD\\uFABE\\uFABF\\uFAC0\\uFAC1\\uFAC2\\uFAC3\\uFAC4\\uFAC5\\uFAC6\\uFAC7\\uFAC8\\uFAC9\\uFACA\\uFACB\\uFACC\\uFACD\\uFACE\\uFACF\\uFAD0\\uFAD1\\uFAD2\\uFAD3\\uFAD4\\uFAD5\\uFAD6\\uFAD7\\uFAD8\\uFAD9\\uFB1D\\uFB1F\\uFB20\\uFB21\\uFB22\\uFB23\\uFB24\\uFB25\\uFB26\\uFB27\\uFB28\\uFB2A\\uFB2B\\uFB2C\\uFB2D\\uFB2E\\uFB2F\\uFB30\\uFB31\\uFB32\\uFB33\\uFB34\\uFB35\\uFB36\\uFB38\\uFB39\\uFB3A\\uFB3B\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46\\uFB47\\uFB48\\uFB49\\uFB4A\\uFB4B\\uFB4C\\uFB4D\\uFB4E\\uFB4F\\uFB50\\uFB51\\uFB52\\uFB53\\uFB54\\uFB55\\uFB56\\uFB57\\uFB58\\uFB59\\uFB5A\\uFB5B\\uFB5C\\uFB5D\\uFB5E\\uFB5F\\uFB60\\uFB61\\uFB62\\uFB63\\uFB64\\uFB65\\uFB66\\uFB67\\uFB68\\uFB69\\uFB6A\\uFB6B\\uFB6C\\uFB6D\\uFB6E\\uFB6F\\uFB70\\uFB71\\uFB72\\uFB73\\uFB74\\uFB75\\uFB76\\uFB77\\uFB78\\uFB79\\uFB7A\\uFB7B\\uFB7C\\uFB7D\\uFB7E\\uFB7F\\uFB80\\uFB81\\uFB82\\uFB83\\uFB84\\uFB85\\uFB86\\uFB87\\uFB88\\uFB89\\uFB8A\\uFB8B\\uFB8C\\uFB8D\\uFB8E\\uFB8F\\uFB90\\uFB91\\uFB92\\uFB93\\uFB94\\uFB95\\uFB96\\uFB97\\uFB98\\uFB99\\uFB9A\\uFB9B\\uFB9C\\uFB9D\\uFB9E\\uFB9F\\uFBA0\\uFBA1\\uFBA2\\uFBA3\\uFBA4\\uFBA5\\uFBA6\\uFBA7\\uFBA8\\uFBA9\\uFBAA\\uFBAB\\uFBAC\\uFBAD\\uFBAE\\uFBAF\\uFBB0\\uFBB1\\uFBD3\\uFBD4\\uFBD5\\uFBD6\\uFBD7\\uFBD8\\uFBD9\\uFBDA\\uFBDB\\uFBDC\\uFBDD\\uFBDE\\uFBDF\\uFBE0\\uFBE1\\uFBE2\\uFBE3\\uFBE4\\uFBE5\\uFBE6\\uFBE7\\uFBE8\\uFBE9\\uFBEA\\uFBEB\\uFBEC\\uFBED\\uFBEE\\uFBEF\\uFBF0\\uFBF1\\uFBF2\\uFBF3\\uFBF4\\uFBF5\\uFBF6\\uFBF7\\uFBF8\\uFBF9\\uFBFA\\uFBFB\\uFBFC\\uFBFD\\uFBFE\\uFBFF\\uFC00\\uFC01\\uFC02\\uFC03\\uFC04\\uFC05\\uFC06\\uFC07\\uFC08\\uFC09\\uFC0A\\uFC0B\\uFC0C\\uFC0D\\uFC0E\\uFC0F\\uFC10\\uFC11\\uFC12\\uFC13\\uFC14\\uFC15\\uFC16\\uFC17\\uFC18\\uFC19\\uFC1A\\uFC1B\\uFC1C\\uFC1D\\uFC1E\\uFC1F\\uFC20\\uFC21\\uFC22\\uFC23\\uFC24\\uFC25\\uFC26\\uFC27\\uFC28\\uFC29\\uFC2A\\uFC2B\\uFC2C\\uFC2D\\uFC2E\\uFC2F\\uFC30\\uFC31\\uFC32\\uFC33\\uFC34\\uFC35\\uFC36\\uFC37\\uFC38\\uFC39\\uFC3A\\uFC3B\\uFC3C\\uFC3D\\uFC3E\\uFC3F\\uFC40\\uFC41\\uFC42\\uFC43\\uFC44\\uFC45\\uFC46\\uFC47\\uFC48\\uFC49\\uFC4A\\uFC4B\\uFC4C\\uFC4D\\uFC4E\\uFC4F\\uFC50\\uFC51\\uFC52\\uFC53\\uFC54\\uFC55\\uFC56\\uFC57\\uFC58\\uFC59\\uFC5A\\uFC5B\\uFC5C\\uFC5D\\uFC5E\\uFC5F\\uFC60\\uFC61\\uFC62\\uFC63\\uFC64\\uFC65\\uFC66\\uFC67\\uFC68\\uFC69\\uFC6A\\uFC6B\\uFC6C\\uFC6D\\uFC6E\\uFC6F\\uFC70\\uFC71\\uFC72\\uFC73\\uFC74\\uFC75\\uFC76\\uFC77\\uFC78\\uFC79\\uFC7A\\uFC7B\\uFC7C\\uFC7D\\uFC7E\\uFC7F\\uFC80\\uFC81\\uFC82\\uFC83\\uFC84\\uFC85\\uFC86\\uFC87\\uFC88\\uFC89\\uFC8A\\uFC8B\\uFC8C\\uFC8D\\uFC8E\\uFC8F\\uFC90\\uFC91\\uFC92\\uFC93\\uFC94\\uFC95\\uFC96\\uFC97\\uFC98\\uFC99\\uFC9A\\uFC9B\\uFC9C\\uFC9D\\uFC9E\\uFC9F\\uFCA0\\uFCA1\\uFCA2\\uFCA3\\uFCA4\\uFCA5\\uFCA6\\uFCA7\\uFCA8\\uFCA9\\uFCAA\\uFCAB\\uFCAC\\uFCAD\\uFCAE\\uFCAF\\uFCB0\\uFCB1\\uFCB2\\uFCB3\\uFCB4\\uFCB5\\uFCB6\\uFCB7\\uFCB8\\uFCB9\\uFCBA\\uFCBB\\uFCBC\\uFCBD\\uFCBE\\uFCBF\\uFCC0\\uFCC1\\uFCC2\\uFCC3\\uFCC4\\uFCC5\\uFCC6\\uFCC7\\uFCC8\\uFCC9\\uFCCA\\uFCCB\\uFCCC\\uFCCD\\uFCCE\\uFCCF\\uFCD0\\uFCD1\\uFCD2\\uFCD3\\uFCD4\\uFCD5\\uFCD6\\uFCD7\\uFCD8\\uFCD9\\uFCDA\\uFCDB\\uFCDC\\uFCDD\\uFCDE\\uFCDF\\uFCE0\\uFCE1\\uFCE2\\uFCE3\\uFCE4\\uFCE5\\uFCE6\\uFCE7\\uFCE8\\uFCE9\\uFCEA\\uFCEB\\uFCEC\\uFCED\\uFCEE\\uFCEF\\uFCF0\\uFCF1\\uFCF2\\uFCF3\\uFCF4\\uFCF5\\uFCF6\\uFCF7\\uFCF8\\uFCF9\\uFCFA\\uFCFB\\uFCFC\\uFCFD\\uFCFE\\uFCFF\\uFD00\\uFD01\\uFD02\\uFD03\\uFD04\\uFD05\\uFD06\\uFD07\\uFD08\\uFD09\\uFD0A\\uFD0B\\uFD0C\\uFD0D\\uFD0E\\uFD0F\\uFD10\\uFD11\\uFD12\\uFD13\\uFD14\\uFD15\\uFD16\\uFD17\\uFD18\\uFD19\\uFD1A\\uFD1B\\uFD1C\\uFD1D\\uFD1E\\uFD1F\\uFD20\\uFD21\\uFD22\\uFD23\\uFD24\\uFD25\\uFD26\\uFD27\\uFD28\\uFD29\\uFD2A\\uFD2B\\uFD2C\\uFD2D\\uFD2E\\uFD2F\\uFD30\\uFD31\\uFD32\\uFD33\\uFD34\\uFD35\\uFD36\\uFD37\\uFD38\\uFD39\\uFD3A\\uFD3B\\uFD3C\\uFD3D\\uFD50\\uFD51\\uFD52\\uFD53\\uFD54\\uFD55\\uFD56\\uFD57\\uFD58\\uFD59\\uFD5A\\uFD5B\\uFD5C\\uFD5D\\uFD5E\\uFD5F\\uFD60\\uFD61\\uFD62\\uFD63\\uFD64\\uFD65\\uFD66\\uFD67\\uFD68\\uFD69\\uFD6A\\uFD6B\\uFD6C\\uFD6D\\uFD6E\\uFD6F\\uFD70\\uFD71\\uFD72\\uFD73\\uFD74\\uFD75\\uFD76\\uFD77\\uFD78\\uFD79\\uFD7A\\uFD7B\\uFD7C\\uFD7D\\uFD7E\\uFD7F\\uFD80\\uFD81\\uFD82\\uFD83\\uFD84\\uFD85\\uFD86\\uFD87\\uFD88\\uFD89\\uFD8A\\uFD8B\\uFD8C\\uFD8D\\uFD8E\\uFD8F\\uFD92\\uFD93\\uFD94\\uFD95\\uFD96\\uFD97\\uFD98\\uFD99\\uFD9A\\uFD9B\\uFD9C\\uFD9D\\uFD9E\\uFD9F\\uFDA0\\uFDA1\\uFDA2\\uFDA3\\uFDA4\\uFDA5\\uFDA6\\uFDA7\\uFDA8\\uFDA9\\uFDAA\\uFDAB\\uFDAC\\uFDAD\\uFDAE\\uFDAF\\uFDB0\\uFDB1\\uFDB2\\uFDB3\\uFDB4\\uFDB5\\uFDB6\\uFDB7\\uFDB8\\uFDB9\\uFDBA\\uFDBB\\uFDBC\\uFDBD\\uFDBE\\uFDBF\\uFDC0\\uFDC1\\uFDC2\\uFDC3\\uFDC4\\uFDC5\\uFDC6\\uFDC7\\uFDF0\\uFDF1\\uFDF2\\uFDF3\\uFDF4\\uFDF5\\uFDF6\\uFDF7\\uFDF8\\uFDF9\\uFDFA\\uFDFB\\uFE70\\uFE71\\uFE72\\uFE73\\uFE74\\uFE76\\uFE77\\uFE78\\uFE79\\uFE7A\\uFE7B\\uFE7C\\uFE7D\\uFE7E\\uFE7F\\uFE80\\uFE81\\uFE82\\uFE83\\uFE84\\uFE85\\uFE86\\uFE87\\uFE88\\uFE89\\uFE8A\\uFE8B\\uFE8C\\uFE8D\\uFE8E\\uFE8F\\uFE90\\uFE91\\uFE92\\uFE93\\uFE94\\uFE95\\uFE96\\uFE97\\uFE98\\uFE99\\uFE9A\\uFE9B\\uFE9C\\uFE9D\\uFE9E\\uFE9F\\uFEA0\\uFEA1\\uFEA2\\uFEA3\\uFEA4\\uFEA5\\uFEA6\\uFEA7\\uFEA8\\uFEA9\\uFEAA\\uFEAB\\uFEAC\\uFEAD\\uFEAE\\uFEAF\\uFEB0\\uFEB1\\uFEB2\\uFEB3\\uFEB4\\uFEB5\\uFEB6\\uFEB7\\uFEB8\\uFEB9\\uFEBA\\uFEBB\\uFEBC\\uFEBD\\uFEBE\\uFEBF\\uFEC0\\uFEC1\\uFEC2\\uFEC3\\uFEC4\\uFEC5\\uFEC6\\uFEC7\\uFEC8\\uFEC9\\uFECA\\uFECB\\uFECC\\uFECD\\uFECE\\uFECF\\uFED0\\uFED1\\uFED2\\uFED3\\uFED4\\uFED5\\uFED6\\uFED7\\uFED8\\uFED9\\uFEDA\\uFEDB\\uFEDC\\uFEDD\\uFEDE\\uFEDF\\uFEE0\\uFEE1\\uFEE2\\uFEE3\\uFEE4\\uFEE5\\uFEE6\\uFEE7\\uFEE8\\uFEE9\\uFEEA\\uFEEB\\uFEEC\\uFEED\\uFEEE\\uFEEF\\uFEF0\\uFEF1\\uFEF2\\uFEF3\\uFEF4\\uFEF5\\uFEF6\\uFEF7\\uFEF8\\uFEF9\\uFEFA\\uFEFB\\uFEFC\\uFF66\\uFF67\\uFF68\\uFF69\\uFF6A\\uFF6B\\uFF6C\\uFF6D\\uFF6E\\uFF6F\\uFF71\\uFF72\\uFF73\\uFF74\\uFF75\\uFF76\\uFF77\\uFF78\\uFF79\\uFF7A\\uFF7B\\uFF7C\\uFF7D\\uFF7E\\uFF7F\\uFF80\\uFF81\\uFF82\\uFF83\\uFF84\\uFF85\\uFF86\\uFF87\\uFF88\\uFF89\\uFF8A\\uFF8B\\uFF8C\\uFF8D\\uFF8E\\uFF8F\\uFF90\\uFF91\\uFF92\\uFF93\\uFF94\\uFF95\\uFF96\\uFF97\\uFF98\\uFF99\\uFF9A\\uFF9B\\uFF9C\\uFF9D\\uFFA0\\uFFA1\\uFFA2\\uFFA3\\uFFA4\\uFFA5\\uFFA6\\uFFA7\\uFFA8\\uFFA9\\uFFAA\\uFFAB\\uFFAC\\uFFAD\\uFFAE\\uFFAF\\uFFB0\\uFFB1\\uFFB2\\uFFB3\\uFFB4\\uFFB5\\uFFB6\\uFFB7\\uFFB8\\uFFB9\\uFFBA\\uFFBB\\uFFBC\\uFFBD\\uFFBE\\uFFC2\\uFFC3\\uFFC4\\uFFC5\\uFFC6\\uFFC7\\uFFCA\\uFFCB\\uFFCC\\uFFCD\\uFFCE\\uFFCF\\uFFD2\\uFFD3\\uFFD4\\uFFD5\\uFFD6\\uFFD7\\uFFDA\\uFFDB\\uFFDC]", description: "[\\u01BB\\u01C0\\u01C1\\u01C2\\u01C3\\u0294\\u05D0\\u05D1\\u05D2\\u05D3\\u05D4\\u05D5\\u05D6\\u05D7\\u05D8\\u05D9\\u05DA\\u05DB\\u05DC\\u05DD\\u05DE\\u05DF\\u05E0\\u05E1\\u05E2\\u05E3\\u05E4\\u05E5\\u05E6\\u05E7\\u05E8\\u05E9\\u05EA\\u05F0\\u05F1\\u05F2\\u0621\\u0622\\u0623\\u0624\\u0625\\u0626\\u0627\\u0628\\u0629\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u0630\\u0631\\u0632\\u0633\\u0634\\u0635\\u0636\\u0637\\u0638\\u0639\\u063A\\u063B\\u063C\\u063D\\u063E\\u063F\\u0641\\u0642\\u0643\\u0644\\u0645\\u0646\\u0647\\u0648\\u0649\\u064A\\u066E\\u066F\\u0671\\u0672\\u0673\\u0674\\u0675\\u0676\\u0677\\u0678\\u0679\\u067A\\u067B\\u067C\\u067D\\u067E\\u067F\\u0680\\u0681\\u0682\\u0683\\u0684\\u0685\\u0686\\u0687\\u0688\\u0689\\u068A\\u068B\\u068C\\u068D\\u068E\\u068F\\u0690\\u0691\\u0692\\u0693\\u0694\\u0695\\u0696\\u0697\\u0698\\u0699\\u069A\\u069B\\u069C\\u069D\\u069E\\u069F\\u06A0\\u06A1\\u06A2\\u06A3\\u06A4\\u06A5\\u06A6\\u06A7\\u06A8\\u06A9\\u06AA\\u06AB\\u06AC\\u06AD\\u06AE\\u06AF\\u06B0\\u06B1\\u06B2\\u06B3\\u06B4\\u06B5\\u06B6\\u06B7\\u06B8\\u06B9\\u06BA\\u06BB\\u06BC\\u06BD\\u06BE\\u06BF\\u06C0\\u06C1\\u06C2\\u06C3\\u06C4\\u06C5\\u06C6\\u06C7\\u06C8\\u06C9\\u06CA\\u06CB\\u06CC\\u06CD\\u06CE\\u06CF\\u06D0\\u06D1\\u06D2\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA\\u06FB\\u06FC\\u06FF\\u0710\\u0712\\u0713\\u0714\\u0715\\u0716\\u0717\\u0718\\u0719\\u071A\\u071B\\u071C\\u071D\\u071E\\u071F\\u0720\\u0721\\u0722\\u0723\\u0724\\u0725\\u0726\\u0727\\u0728\\u0729\\u072A\\u072B\\u072C\\u072D\\u072E\\u072F\\u074D\\u074E\\u074F\\u0750\\u0751\\u0752\\u0753\\u0754\\u0755\\u0756\\u0757\\u0758\\u0759\\u075A\\u075B\\u075C\\u075D\\u075E\\u075F\\u0760\\u0761\\u0762\\u0763\\u0764\\u0765\\u0766\\u0767\\u0768\\u0769\\u076A\\u076B\\u076C\\u076D\\u076E\\u076F\\u0770\\u0771\\u0772\\u0773\\u0774\\u0775\\u0776\\u0777\\u0778\\u0779\\u077A\\u077B\\u077C\\u077D\\u077E\\u077F\\u0780\\u0781\\u0782\\u0783\\u0784\\u0785\\u0786\\u0787\\u0788\\u0789\\u078A\\u078B\\u078C\\u078D\\u078E\\u078F\\u0790\\u0791\\u0792\\u0793\\u0794\\u0795\\u0796\\u0797\\u0798\\u0799\\u079A\\u079B\\u079C\\u079D\\u079E\\u079F\\u07A0\\u07A1\\u07A2\\u07A3\\u07A4\\u07A5\\u07B1\\u07CA\\u07CB\\u07CC\\u07CD\\u07CE\\u07CF\\u07D0\\u07D1\\u07D2\\u07D3\\u07D4\\u07D5\\u07D6\\u07D7\\u07D8\\u07D9\\u07DA\\u07DB\\u07DC\\u07DD\\u07DE\\u07DF\\u07E0\\u07E1\\u07E2\\u07E3\\u07E4\\u07E5\\u07E6\\u07E7\\u07E8\\u07E9\\u07EA\\u0904\\u0905\\u0906\\u0907\\u0908\\u0909\\u090A\\u090B\\u090C\\u090D\\u090E\\u090F\\u0910\\u0911\\u0912\\u0913\\u0914\\u0915\\u0916\\u0917\\u0918\\u0919\\u091A\\u091B\\u091C\\u091D\\u091E\\u091F\\u0920\\u0921\\u0922\\u0923\\u0924\\u0925\\u0926\\u0927\\u0928\\u0929\\u092A\\u092B\\u092C\\u092D\\u092E\\u092F\\u0930\\u0931\\u0932\\u0933\\u0934\\u0935\\u0936\\u0937\\u0938\\u0939\\u093D\\u0950\\u0958\\u0959\\u095A\\u095B\\u095C\\u095D\\u095E\\u095F\\u0960\\u0961\\u0972\\u097B\\u097C\\u097D\\u097E\\u097F\\u0985\\u0986\\u0987\\u0988\\u0989\\u098A\\u098B\\u098C\\u098F\\u0990\\u0993\\u0994\\u0995\\u0996\\u0997\\u0998\\u0999\\u099A\\u099B\\u099C\\u099D\\u099E\\u099F\\u09A0\\u09A1\\u09A2\\u09A3\\u09A4\\u09A5\\u09A6\\u09A7\\u09A8\\u09AA\\u09AB\\u09AC\\u09AD\\u09AE\\u09AF\\u09B0\\u09B2\\u09B6\\u09B7\\u09B8\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF\\u09E0\\u09E1\\u09F0\\u09F1\\u0A05\\u0A06\\u0A07\\u0A08\\u0A09\\u0A0A\\u0A0F\\u0A10\\u0A13\\u0A14\\u0A15\\u0A16\\u0A17\\u0A18\\u0A19\\u0A1A\\u0A1B\\u0A1C\\u0A1D\\u0A1E\\u0A1F\\u0A20\\u0A21\\u0A22\\u0A23\\u0A24\\u0A25\\u0A26\\u0A27\\u0A28\\u0A2A\\u0A2B\\u0A2C\\u0A2D\\u0A2E\\u0A2F\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59\\u0A5A\\u0A5B\\u0A5C\\u0A5E\\u0A72\\u0A73\\u0A74\\u0A85\\u0A86\\u0A87\\u0A88\\u0A89\\u0A8A\\u0A8B\\u0A8C\\u0A8D\\u0A8F\\u0A90\\u0A91\\u0A93\\u0A94\\u0A95\\u0A96\\u0A97\\u0A98\\u0A99\\u0A9A\\u0A9B\\u0A9C\\u0A9D\\u0A9E\\u0A9F\\u0AA0\\u0AA1\\u0AA2\\u0AA3\\u0AA4\\u0AA5\\u0AA6\\u0AA7\\u0AA8\\u0AAA\\u0AAB\\u0AAC\\u0AAD\\u0AAE\\u0AAF\\u0AB0\\u0AB2\\u0AB3\\u0AB5\\u0AB6\\u0AB7\\u0AB8\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05\\u0B06\\u0B07\\u0B08\\u0B09\\u0B0A\\u0B0B\\u0B0C\\u0B0F\\u0B10\\u0B13\\u0B14\\u0B15\\u0B16\\u0B17\\u0B18\\u0B19\\u0B1A\\u0B1B\\u0B1C\\u0B1D\\u0B1E\\u0B1F\\u0B20\\u0B21\\u0B22\\u0B23\\u0B24\\u0B25\\u0B26\\u0B27\\u0B28\\u0B2A\\u0B2B\\u0B2C\\u0B2D\\u0B2E\\u0B2F\\u0B30\\u0B32\\u0B33\\u0B35\\u0B36\\u0B37\\u0B38\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F\\u0B60\\u0B61\\u0B71\\u0B83\\u0B85\\u0B86\\u0B87\\u0B88\\u0B89\\u0B8A\\u0B8E\\u0B8F\\u0B90\\u0B92\\u0B93\\u0B94\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8\\u0BA9\\u0BAA\\u0BAE\\u0BAF\\u0BB0\\u0BB1\\u0BB2\\u0BB3\\u0BB4\\u0BB5\\u0BB6\\u0BB7\\u0BB8\\u0BB9\\u0BD0\\u0C05\\u0C06\\u0C07\\u0C08\\u0C09\\u0C0A\\u0C0B\\u0C0C\\u0C0E\\u0C0F\\u0C10\\u0C12\\u0C13\\u0C14\\u0C15\\u0C16\\u0C17\\u0C18\\u0C19\\u0C1A\\u0C1B\\u0C1C\\u0C1D\\u0C1E\\u0C1F\\u0C20\\u0C21\\u0C22\\u0C23\\u0C24\\u0C25\\u0C26\\u0C27\\u0C28\\u0C2A\\u0C2B\\u0C2C\\u0C2D\\u0C2E\\u0C2F\\u0C30\\u0C31\\u0C32\\u0C33\\u0C35\\u0C36\\u0C37\\u0C38\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85\\u0C86\\u0C87\\u0C88\\u0C89\\u0C8A\\u0C8B\\u0C8C\\u0C8E\\u0C8F\\u0C90\\u0C92\\u0C93\\u0C94\\u0C95\\u0C96\\u0C97\\u0C98\\u0C99\\u0C9A\\u0C9B\\u0C9C\\u0C9D\\u0C9E\\u0C9F\\u0CA0\\u0CA1\\u0CA2\\u0CA3\\u0CA4\\u0CA5\\u0CA6\\u0CA7\\u0CA8\\u0CAA\\u0CAB\\u0CAC\\u0CAD\\u0CAE\\u0CAF\\u0CB0\\u0CB1\\u0CB2\\u0CB3\\u0CB5\\u0CB6\\u0CB7\\u0CB8\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05\\u0D06\\u0D07\\u0D08\\u0D09\\u0D0A\\u0D0B\\u0D0C\\u0D0E\\u0D0F\\u0D10\\u0D12\\u0D13\\u0D14\\u0D15\\u0D16\\u0D17\\u0D18\\u0D19\\u0D1A\\u0D1B\\u0D1C\\u0D1D\\u0D1E\\u0D1F\\u0D20\\u0D21\\u0D22\\u0D23\\u0D24\\u0D25\\u0D26\\u0D27\\u0D28\\u0D2A\\u0D2B\\u0D2C\\u0D2D\\u0D2E\\u0D2F\\u0D30\\u0D31\\u0D32\\u0D33\\u0D34\\u0D35\\u0D36\\u0D37\\u0D38\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A\\u0D7B\\u0D7C\\u0D7D\\u0D7E\\u0D7F\\u0D85\\u0D86\\u0D87\\u0D88\\u0D89\\u0D8A\\u0D8B\\u0D8C\\u0D8D\\u0D8E\\u0D8F\\u0D90\\u0D91\\u0D92\\u0D93\\u0D94\\u0D95\\u0D96\\u0D9A\\u0D9B\\u0D9C\\u0D9D\\u0D9E\\u0D9F\\u0DA0\\u0DA1\\u0DA2\\u0DA3\\u0DA4\\u0DA5\\u0DA6\\u0DA7\\u0DA8\\u0DA9\\u0DAA\\u0DAB\\u0DAC\\u0DAD\\u0DAE\\u0DAF\\u0DB0\\u0DB1\\u0DB3\\u0DB4\\u0DB5\\u0DB6\\u0DB7\\u0DB8\\u0DB9\\u0DBA\\u0DBB\\u0DBD\\u0DC0\\u0DC1\\u0DC2\\u0DC3\\u0DC4\\u0DC5\\u0DC6\\u0E01\\u0E02\\u0E03\\u0E04\\u0E05\\u0E06\\u0E07\\u0E08\\u0E09\\u0E0A\\u0E0B\\u0E0C\\u0E0D\\u0E0E\\u0E0F\\u0E10\\u0E11\\u0E12\\u0E13\\u0E14\\u0E15\\u0E16\\u0E17\\u0E18\\u0E19\\u0E1A\\u0E1B\\u0E1C\\u0E1D\\u0E1E\\u0E1F\\u0E20\\u0E21\\u0E22\\u0E23\\u0E24\\u0E25\\u0E26\\u0E27\\u0E28\\u0E29\\u0E2A\\u0E2B\\u0E2C\\u0E2D\\u0E2E\\u0E2F\\u0E30\\u0E32\\u0E33\\u0E40\\u0E41\\u0E42\\u0E43\\u0E44\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94\\u0E95\\u0E96\\u0E97\\u0E99\\u0E9A\\u0E9B\\u0E9C\\u0E9D\\u0E9E\\u0E9F\\u0EA1\\u0EA2\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD\\u0EAE\\u0EAF\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0\\u0EC1\\u0EC2\\u0EC3\\u0EC4\\u0EDC\\u0EDD\\u0F00\\u0F40\\u0F41\\u0F42\\u0F43\\u0F44\\u0F45\\u0F46\\u0F47\\u0F49\\u0F4A\\u0F4B\\u0F4C\\u0F4D\\u0F4E\\u0F4F\\u0F50\\u0F51\\u0F52\\u0F53\\u0F54\\u0F55\\u0F56\\u0F57\\u0F58\\u0F59\\u0F5A\\u0F5B\\u0F5C\\u0F5D\\u0F5E\\u0F5F\\u0F60\\u0F61\\u0F62\\u0F63\\u0F64\\u0F65\\u0F66\\u0F67\\u0F68\\u0F69\\u0F6A\\u0F6B\\u0F6C\\u0F88\\u0F89\\u0F8A\\u0F8B\\u1000\\u1001\\u1002\\u1003\\u1004\\u1005\\u1006\\u1007\\u1008\\u1009\\u100A\\u100B\\u100C\\u100D\\u100E\\u100F\\u1010\\u1011\\u1012\\u1013\\u1014\\u1015\\u1016\\u1017\\u1018\\u1019\\u101A\\u101B\\u101C\\u101D\\u101E\\u101F\\u1020\\u1021\\u1022\\u1023\\u1024\\u1025\\u1026\\u1027\\u1028\\u1029\\u102A\\u103F\\u1050\\u1051\\u1052\\u1053\\u1054\\u1055\\u105A\\u105B\\u105C\\u105D\\u1061\\u1065\\u1066\\u106E\\u106F\\u1070\\u1075\\u1076\\u1077\\u1078\\u1079\\u107A\\u107B\\u107C\\u107D\\u107E\\u107F\\u1080\\u1081\\u108E\\u10D0\\u10D1\\u10D2\\u10D3\\u10D4\\u10D5\\u10D6\\u10D7\\u10D8\\u10D9\\u10DA\\u10DB\\u10DC\\u10DD\\u10DE\\u10DF\\u10E0\\u10E1\\u10E2\\u10E3\\u10E4\\u10E5\\u10E6\\u10E7\\u10E8\\u10E9\\u10EA\\u10EB\\u10EC\\u10ED\\u10EE\\u10EF\\u10F0\\u10F1\\u10F2\\u10F3\\u10F4\\u10F5\\u10F6\\u10F7\\u10F8\\u10F9\\u10FA\\u1100\\u1101\\u1102\\u1103\\u1104\\u1105\\u1106\\u1107\\u1108\\u1109\\u110A\\u110B\\u110C\\u110D\\u110E\\u110F\\u1110\\u1111\\u1112\\u1113\\u1114\\u1115\\u1116\\u1117\\u1118\\u1119\\u111A\\u111B\\u111C\\u111D\\u111E\\u111F\\u1120\\u1121\\u1122\\u1123\\u1124\\u1125\\u1126\\u1127\\u1128\\u1129\\u112A\\u112B\\u112C\\u112D\\u112E\\u112F\\u1130\\u1131\\u1132\\u1133\\u1134\\u1135\\u1136\\u1137\\u1138\\u1139\\u113A\\u113B\\u113C\\u113D\\u113E\\u113F\\u1140\\u1141\\u1142\\u1143\\u1144\\u1145\\u1146\\u1147\\u1148\\u1149\\u114A\\u114B\\u114C\\u114D\\u114E\\u114F\\u1150\\u1151\\u1152\\u1153\\u1154\\u1155\\u1156\\u1157\\u1158\\u1159\\u115F\\u1160\\u1161\\u1162\\u1163\\u1164\\u1165\\u1166\\u1167\\u1168\\u1169\\u116A\\u116B\\u116C\\u116D\\u116E\\u116F\\u1170\\u1171\\u1172\\u1173\\u1174\\u1175\\u1176\\u1177\\u1178\\u1179\\u117A\\u117B\\u117C\\u117D\\u117E\\u117F\\u1180\\u1181\\u1182\\u1183\\u1184\\u1185\\u1186\\u1187\\u1188\\u1189\\u118A\\u118B\\u118C\\u118D\\u118E\\u118F\\u1190\\u1191\\u1192\\u1193\\u1194\\u1195\\u1196\\u1197\\u1198\\u1199\\u119A\\u119B\\u119C\\u119D\\u119E\\u119F\\u11A0\\u11A1\\u11A2\\u11A8\\u11A9\\u11AA\\u11AB\\u11AC\\u11AD\\u11AE\\u11AF\\u11B0\\u11B1\\u11B2\\u11B3\\u11B4\\u11B5\\u11B6\\u11B7\\u11B8\\u11B9\\u11BA\\u11BB\\u11BC\\u11BD\\u11BE\\u11BF\\u11C0\\u11C1\\u11C2\\u11C3\\u11C4\\u11C5\\u11C6\\u11C7\\u11C8\\u11C9\\u11CA\\u11CB\\u11CC\\u11CD\\u11CE\\u11CF\\u11D0\\u11D1\\u11D2\\u11D3\\u11D4\\u11D5\\u11D6\\u11D7\\u11D8\\u11D9\\u11DA\\u11DB\\u11DC\\u11DD\\u11DE\\u11DF\\u11E0\\u11E1\\u11E2\\u11E3\\u11E4\\u11E5\\u11E6\\u11E7\\u11E8\\u11E9\\u11EA\\u11EB\\u11EC\\u11ED\\u11EE\\u11EF\\u11F0\\u11F1\\u11F2\\u11F3\\u11F4\\u11F5\\u11F6\\u11F7\\u11F8\\u11F9\\u1200\\u1201\\u1202\\u1203\\u1204\\u1205\\u1206\\u1207\\u1208\\u1209\\u120A\\u120B\\u120C\\u120D\\u120E\\u120F\\u1210\\u1211\\u1212\\u1213\\u1214\\u1215\\u1216\\u1217\\u1218\\u1219\\u121A\\u121B\\u121C\\u121D\\u121E\\u121F\\u1220\\u1221\\u1222\\u1223\\u1224\\u1225\\u1226\\u1227\\u1228\\u1229\\u122A\\u122B\\u122C\\u122D\\u122E\\u122F\\u1230\\u1231\\u1232\\u1233\\u1234\\u1235\\u1236\\u1237\\u1238\\u1239\\u123A\\u123B\\u123C\\u123D\\u123E\\u123F\\u1240\\u1241\\u1242\\u1243\\u1244\\u1245\\u1246\\u1247\\u1248\\u124A\\u124B\\u124C\\u124D\\u1250\\u1251\\u1252\\u1253\\u1254\\u1255\\u1256\\u1258\\u125A\\u125B\\u125C\\u125D\\u1260\\u1261\\u1262\\u1263\\u1264\\u1265\\u1266\\u1267\\u1268\\u1269\\u126A\\u126B\\u126C\\u126D\\u126E\\u126F\\u1270\\u1271\\u1272\\u1273\\u1274\\u1275\\u1276\\u1277\\u1278\\u1279\\u127A\\u127B\\u127C\\u127D\\u127E\\u127F\\u1280\\u1281\\u1282\\u1283\\u1284\\u1285\\u1286\\u1287\\u1288\\u128A\\u128B\\u128C\\u128D\\u1290\\u1291\\u1292\\u1293\\u1294\\u1295\\u1296\\u1297\\u1298\\u1299\\u129A\\u129B\\u129C\\u129D\\u129E\\u129F\\u12A0\\u12A1\\u12A2\\u12A3\\u12A4\\u12A5\\u12A6\\u12A7\\u12A8\\u12A9\\u12AA\\u12AB\\u12AC\\u12AD\\u12AE\\u12AF\\u12B0\\u12B2\\u12B3\\u12B4\\u12B5\\u12B8\\u12B9\\u12BA\\u12BB\\u12BC\\u12BD\\u12BE\\u12C0\\u12C2\\u12C3\\u12C4\\u12C5\\u12C8\\u12C9\\u12CA\\u12CB\\u12CC\\u12CD\\u12CE\\u12CF\\u12D0\\u12D1\\u12D2\\u12D3\\u12D4\\u12D5\\u12D6\\u12D8\\u12D9\\u12DA\\u12DB\\u12DC\\u12DD\\u12DE\\u12DF\\u12E0\\u12E1\\u12E2\\u12E3\\u12E4\\u12E5\\u12E6\\u12E7\\u12E8\\u12E9\\u12EA\\u12EB\\u12EC\\u12ED\\u12EE\\u12EF\\u12F0\\u12F1\\u12F2\\u12F3\\u12F4\\u12F5\\u12F6\\u12F7\\u12F8\\u12F9\\u12FA\\u12FB\\u12FC\\u12FD\\u12FE\\u12FF\\u1300\\u1301\\u1302\\u1303\\u1304\\u1305\\u1306\\u1307\\u1308\\u1309\\u130A\\u130B\\u130C\\u130D\\u130E\\u130F\\u1310\\u1312\\u1313\\u1314\\u1315\\u1318\\u1319\\u131A\\u131B\\u131C\\u131D\\u131E\\u131F\\u1320\\u1321\\u1322\\u1323\\u1324\\u1325\\u1326\\u1327\\u1328\\u1329\\u132A\\u132B\\u132C\\u132D\\u132E\\u132F\\u1330\\u1331\\u1332\\u1333\\u1334\\u1335\\u1336\\u1337\\u1338\\u1339\\u133A\\u133B\\u133C\\u133D\\u133E\\u133F\\u1340\\u1341\\u1342\\u1343\\u1344\\u1345\\u1346\\u1347\\u1348\\u1349\\u134A\\u134B\\u134C\\u134D\\u134E\\u134F\\u1350\\u1351\\u1352\\u1353\\u1354\\u1355\\u1356\\u1357\\u1358\\u1359\\u135A\\u1380\\u1381\\u1382\\u1383\\u1384\\u1385\\u1386\\u1387\\u1388\\u1389\\u138A\\u138B\\u138C\\u138D\\u138E\\u138F\\u13A0\\u13A1\\u13A2\\u13A3\\u13A4\\u13A5\\u13A6\\u13A7\\u13A8\\u13A9\\u13AA\\u13AB\\u13AC\\u13AD\\u13AE\\u13AF\\u13B0\\u13B1\\u13B2\\u13B3\\u13B4\\u13B5\\u13B6\\u13B7\\u13B8\\u13B9\\u13BA\\u13BB\\u13BC\\u13BD\\u13BE\\u13BF\\u13C0\\u13C1\\u13C2\\u13C3\\u13C4\\u13C5\\u13C6\\u13C7\\u13C8\\u13C9\\u13CA\\u13CB\\u13CC\\u13CD\\u13CE\\u13CF\\u13D0\\u13D1\\u13D2\\u13D3\\u13D4\\u13D5\\u13D6\\u13D7\\u13D8\\u13D9\\u13DA\\u13DB\\u13DC\\u13DD\\u13DE\\u13DF\\u13E0\\u13E1\\u13E2\\u13E3\\u13E4\\u13E5\\u13E6\\u13E7\\u13E8\\u13E9\\u13EA\\u13EB\\u13EC\\u13ED\\u13EE\\u13EF\\u13F0\\u13F1\\u13F2\\u13F3\\u13F4\\u1401\\u1402\\u1403\\u1404\\u1405\\u1406\\u1407\\u1408\\u1409\\u140A\\u140B\\u140C\\u140D\\u140E\\u140F\\u1410\\u1411\\u1412\\u1413\\u1414\\u1415\\u1416\\u1417\\u1418\\u1419\\u141A\\u141B\\u141C\\u141D\\u141E\\u141F\\u1420\\u1421\\u1422\\u1423\\u1424\\u1425\\u1426\\u1427\\u1428\\u1429\\u142A\\u142B\\u142C\\u142D\\u142E\\u142F\\u1430\\u1431\\u1432\\u1433\\u1434\\u1435\\u1436\\u1437\\u1438\\u1439\\u143A\\u143B\\u143C\\u143D\\u143E\\u143F\\u1440\\u1441\\u1442\\u1443\\u1444\\u1445\\u1446\\u1447\\u1448\\u1449\\u144A\\u144B\\u144C\\u144D\\u144E\\u144F\\u1450\\u1451\\u1452\\u1453\\u1454\\u1455\\u1456\\u1457\\u1458\\u1459\\u145A\\u145B\\u145C\\u145D\\u145E\\u145F\\u1460\\u1461\\u1462\\u1463\\u1464\\u1465\\u1466\\u1467\\u1468\\u1469\\u146A\\u146B\\u146C\\u146D\\u146E\\u146F\\u1470\\u1471\\u1472\\u1473\\u1474\\u1475\\u1476\\u1477\\u1478\\u1479\\u147A\\u147B\\u147C\\u147D\\u147E\\u147F\\u1480\\u1481\\u1482\\u1483\\u1484\\u1485\\u1486\\u1487\\u1488\\u1489\\u148A\\u148B\\u148C\\u148D\\u148E\\u148F\\u1490\\u1491\\u1492\\u1493\\u1494\\u1495\\u1496\\u1497\\u1498\\u1499\\u149A\\u149B\\u149C\\u149D\\u149E\\u149F\\u14A0\\u14A1\\u14A2\\u14A3\\u14A4\\u14A5\\u14A6\\u14A7\\u14A8\\u14A9\\u14AA\\u14AB\\u14AC\\u14AD\\u14AE\\u14AF\\u14B0\\u14B1\\u14B2\\u14B3\\u14B4\\u14B5\\u14B6\\u14B7\\u14B8\\u14B9\\u14BA\\u14BB\\u14BC\\u14BD\\u14BE\\u14BF\\u14C0\\u14C1\\u14C2\\u14C3\\u14C4\\u14C5\\u14C6\\u14C7\\u14C8\\u14C9\\u14CA\\u14CB\\u14CC\\u14CD\\u14CE\\u14CF\\u14D0\\u14D1\\u14D2\\u14D3\\u14D4\\u14D5\\u14D6\\u14D7\\u14D8\\u14D9\\u14DA\\u14DB\\u14DC\\u14DD\\u14DE\\u14DF\\u14E0\\u14E1\\u14E2\\u14E3\\u14E4\\u14E5\\u14E6\\u14E7\\u14E8\\u14E9\\u14EA\\u14EB\\u14EC\\u14ED\\u14EE\\u14EF\\u14F0\\u14F1\\u14F2\\u14F3\\u14F4\\u14F5\\u14F6\\u14F7\\u14F8\\u14F9\\u14FA\\u14FB\\u14FC\\u14FD\\u14FE\\u14FF\\u1500\\u1501\\u1502\\u1503\\u1504\\u1505\\u1506\\u1507\\u1508\\u1509\\u150A\\u150B\\u150C\\u150D\\u150E\\u150F\\u1510\\u1511\\u1512\\u1513\\u1514\\u1515\\u1516\\u1517\\u1518\\u1519\\u151A\\u151B\\u151C\\u151D\\u151E\\u151F\\u1520\\u1521\\u1522\\u1523\\u1524\\u1525\\u1526\\u1527\\u1528\\u1529\\u152A\\u152B\\u152C\\u152D\\u152E\\u152F\\u1530\\u1531\\u1532\\u1533\\u1534\\u1535\\u1536\\u1537\\u1538\\u1539\\u153A\\u153B\\u153C\\u153D\\u153E\\u153F\\u1540\\u1541\\u1542\\u1543\\u1544\\u1545\\u1546\\u1547\\u1548\\u1549\\u154A\\u154B\\u154C\\u154D\\u154E\\u154F\\u1550\\u1551\\u1552\\u1553\\u1554\\u1555\\u1556\\u1557\\u1558\\u1559\\u155A\\u155B\\u155C\\u155D\\u155E\\u155F\\u1560\\u1561\\u1562\\u1563\\u1564\\u1565\\u1566\\u1567\\u1568\\u1569\\u156A\\u156B\\u156C\\u156D\\u156E\\u156F\\u1570\\u1571\\u1572\\u1573\\u1574\\u1575\\u1576\\u1577\\u1578\\u1579\\u157A\\u157B\\u157C\\u157D\\u157E\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u1586\\u1587\\u1588\\u1589\\u158A\\u158B\\u158C\\u158D\\u158E\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1596\\u1597\\u1598\\u1599\\u159A\\u159B\\u159C\\u159D\\u159E\\u159F\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u15A7\\u15A8\\u15A9\\u15AA\\u15AB\\u15AC\\u15AD\\u15AE\\u15AF\\u15B0\\u15B1\\u15B2\\u15B3\\u15B4\\u15B5\\u15B6\\u15B7\\u15B8\\u15B9\\u15BA\\u15BB\\u15BC\\u15BD\\u15BE\\u15BF\\u15C0\\u15C1\\u15C2\\u15C3\\u15C4\\u15C5\\u15C6\\u15C7\\u15C8\\u15C9\\u15CA\\u15CB\\u15CC\\u15CD\\u15CE\\u15CF\\u15D0\\u15D1\\u15D2\\u15D3\\u15D4\\u15D5\\u15D6\\u15D7\\u15D8\\u15D9\\u15DA\\u15DB\\u15DC\\u15DD\\u15DE\\u15DF\\u15E0\\u15E1\\u15E2\\u15E3\\u15E4\\u15E5\\u15E6\\u15E7\\u15E8\\u15E9\\u15EA\\u15EB\\u15EC\\u15ED\\u15EE\\u15EF\\u15F0\\u15F1\\u15F2\\u15F3\\u15F4\\u15F5\\u15F6\\u15F7\\u15F8\\u15F9\\u15FA\\u15FB\\u15FC\\u15FD\\u15FE\\u15FF\\u1600\\u1601\\u1602\\u1603\\u1604\\u1605\\u1606\\u1607\\u1608\\u1609\\u160A\\u160B\\u160C\\u160D\\u160E\\u160F\\u1610\\u1611\\u1612\\u1613\\u1614\\u1615\\u1616\\u1617\\u1618\\u1619\\u161A\\u161B\\u161C\\u161D\\u161E\\u161F\\u1620\\u1621\\u1622\\u1623\\u1624\\u1625\\u1626\\u1627\\u1628\\u1629\\u162A\\u162B\\u162C\\u162D\\u162E\\u162F\\u1630\\u1631\\u1632\\u1633\\u1634\\u1635\\u1636\\u1637\\u1638\\u1639\\u163A\\u163B\\u163C\\u163D\\u163E\\u163F\\u1640\\u1641\\u1642\\u1643\\u1644\\u1645\\u1646\\u1647\\u1648\\u1649\\u164A\\u164B\\u164C\\u164D\\u164E\\u164F\\u1650\\u1651\\u1652\\u1653\\u1654\\u1655\\u1656\\u1657\\u1658\\u1659\\u165A\\u165B\\u165C\\u165D\\u165E\\u165F\\u1660\\u1661\\u1662\\u1663\\u1664\\u1665\\u1666\\u1667\\u1668\\u1669\\u166A\\u166B\\u166C\\u166F\\u1670\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1681\\u1682\\u1683\\u1684\\u1685\\u1686\\u1687\\u1688\\u1689\\u168A\\u168B\\u168C\\u168D\\u168E\\u168F\\u1690\\u1691\\u1692\\u1693\\u1694\\u1695\\u1696\\u1697\\u1698\\u1699\\u169A\\u16A0\\u16A1\\u16A2\\u16A3\\u16A4\\u16A5\\u16A6\\u16A7\\u16A8\\u16A9\\u16AA\\u16AB\\u16AC\\u16AD\\u16AE\\u16AF\\u16B0\\u16B1\\u16B2\\u16B3\\u16B4\\u16B5\\u16B6\\u16B7\\u16B8\\u16B9\\u16BA\\u16BB\\u16BC\\u16BD\\u16BE\\u16BF\\u16C0\\u16C1\\u16C2\\u16C3\\u16C4\\u16C5\\u16C6\\u16C7\\u16C8\\u16C9\\u16CA\\u16CB\\u16CC\\u16CD\\u16CE\\u16CF\\u16D0\\u16D1\\u16D2\\u16D3\\u16D4\\u16D5\\u16D6\\u16D7\\u16D8\\u16D9\\u16DA\\u16DB\\u16DC\\u16DD\\u16DE\\u16DF\\u16E0\\u16E1\\u16E2\\u16E3\\u16E4\\u16E5\\u16E6\\u16E7\\u16E8\\u16E9\\u16EA\\u1700\\u1701\\u1702\\u1703\\u1704\\u1705\\u1706\\u1707\\u1708\\u1709\\u170A\\u170B\\u170C\\u170E\\u170F\\u1710\\u1711\\u1720\\u1721\\u1722\\u1723\\u1724\\u1725\\u1726\\u1727\\u1728\\u1729\\u172A\\u172B\\u172C\\u172D\\u172E\\u172F\\u1730\\u1731\\u1740\\u1741\\u1742\\u1743\\u1744\\u1745\\u1746\\u1747\\u1748\\u1749\\u174A\\u174B\\u174C\\u174D\\u174E\\u174F\\u1750\\u1751\\u1760\\u1761\\u1762\\u1763\\u1764\\u1765\\u1766\\u1767\\u1768\\u1769\\u176A\\u176B\\u176C\\u176E\\u176F\\u1770\\u1780\\u1781\\u1782\\u1783\\u1784\\u1785\\u1786\\u1787\\u1788\\u1789\\u178A\\u178B\\u178C\\u178D\\u178E\\u178F\\u1790\\u1791\\u1792\\u1793\\u1794\\u1795\\u1796\\u1797\\u1798\\u1799\\u179A\\u179B\\u179C\\u179D\\u179E\\u179F\\u17A0\\u17A1\\u17A2\\u17A3\\u17A4\\u17A5\\u17A6\\u17A7\\u17A8\\u17A9\\u17AA\\u17AB\\u17AC\\u17AD\\u17AE\\u17AF\\u17B0\\u17B1\\u17B2\\u17B3\\u17DC\\u1820\\u1821\\u1822\\u1823\\u1824\\u1825\\u1826\\u1827\\u1828\\u1829\\u182A\\u182B\\u182C\\u182D\\u182E\\u182F\\u1830\\u1831\\u1832\\u1833\\u1834\\u1835\\u1836\\u1837\\u1838\\u1839\\u183A\\u183B\\u183C\\u183D\\u183E\\u183F\\u1840\\u1841\\u1842\\u1844\\u1845\\u1846\\u1847\\u1848\\u1849\\u184A\\u184B\\u184C\\u184D\\u184E\\u184F\\u1850\\u1851\\u1852\\u1853\\u1854\\u1855\\u1856\\u1857\\u1858\\u1859\\u185A\\u185B\\u185C\\u185D\\u185E\\u185F\\u1860\\u1861\\u1862\\u1863\\u1864\\u1865\\u1866\\u1867\\u1868\\u1869\\u186A\\u186B\\u186C\\u186D\\u186E\\u186F\\u1870\\u1871\\u1872\\u1873\\u1874\\u1875\\u1876\\u1877\\u1880\\u1881\\u1882\\u1883\\u1884\\u1885\\u1886\\u1887\\u1888\\u1889\\u188A\\u188B\\u188C\\u188D\\u188E\\u188F\\u1890\\u1891\\u1892\\u1893\\u1894\\u1895\\u1896\\u1897\\u1898\\u1899\\u189A\\u189B\\u189C\\u189D\\u189E\\u189F\\u18A0\\u18A1\\u18A2\\u18A3\\u18A4\\u18A5\\u18A6\\u18A7\\u18A8\\u18AA\\u1900\\u1901\\u1902\\u1903\\u1904\\u1905\\u1906\\u1907\\u1908\\u1909\\u190A\\u190B\\u190C\\u190D\\u190E\\u190F\\u1910\\u1911\\u1912\\u1913\\u1914\\u1915\\u1916\\u1917\\u1918\\u1919\\u191A\\u191B\\u191C\\u1950\\u1951\\u1952\\u1953\\u1954\\u1955\\u1956\\u1957\\u1958\\u1959\\u195A\\u195B\\u195C\\u195D\\u195E\\u195F\\u1960\\u1961\\u1962\\u1963\\u1964\\u1965\\u1966\\u1967\\u1968\\u1969\\u196A\\u196B\\u196C\\u196D\\u1970\\u1971\\u1972\\u1973\\u1974\\u1980\\u1981\\u1982\\u1983\\u1984\\u1985\\u1986\\u1987\\u1988\\u1989\\u198A\\u198B\\u198C\\u198D\\u198E\\u198F\\u1990\\u1991\\u1992\\u1993\\u1994\\u1995\\u1996\\u1997\\u1998\\u1999\\u199A\\u199B\\u199C\\u199D\\u199E\\u199F\\u19A0\\u19A1\\u19A2\\u19A3\\u19A4\\u19A5\\u19A6\\u19A7\\u19A8\\u19A9\\u19C1\\u19C2\\u19C3\\u19C4\\u19C5\\u19C6\\u19C7\\u1A00\\u1A01\\u1A02\\u1A03\\u1A04\\u1A05\\u1A06\\u1A07\\u1A08\\u1A09\\u1A0A\\u1A0B\\u1A0C\\u1A0D\\u1A0E\\u1A0F\\u1A10\\u1A11\\u1A12\\u1A13\\u1A14\\u1A15\\u1A16\\u1B05\\u1B06\\u1B07\\u1B08\\u1B09\\u1B0A\\u1B0B\\u1B0C\\u1B0D\\u1B0E\\u1B0F\\u1B10\\u1B11\\u1B12\\u1B13\\u1B14\\u1B15\\u1B16\\u1B17\\u1B18\\u1B19\\u1B1A\\u1B1B\\u1B1C\\u1B1D\\u1B1E\\u1B1F\\u1B20\\u1B21\\u1B22\\u1B23\\u1B24\\u1B25\\u1B26\\u1B27\\u1B28\\u1B29\\u1B2A\\u1B2B\\u1B2C\\u1B2D\\u1B2E\\u1B2F\\u1B30\\u1B31\\u1B32\\u1B33\\u1B45\\u1B46\\u1B47\\u1B48\\u1B49\\u1B4A\\u1B4B\\u1B83\\u1B84\\u1B85\\u1B86\\u1B87\\u1B88\\u1B89\\u1B8A\\u1B8B\\u1B8C\\u1B8D\\u1B8E\\u1B8F\\u1B90\\u1B91\\u1B92\\u1B93\\u1B94\\u1B95\\u1B96\\u1B97\\u1B98\\u1B99\\u1B9A\\u1B9B\\u1B9C\\u1B9D\\u1B9E\\u1B9F\\u1BA0\\u1BAE\\u1BAF\\u1C00\\u1C01\\u1C02\\u1C03\\u1C04\\u1C05\\u1C06\\u1C07\\u1C08\\u1C09\\u1C0A\\u1C0B\\u1C0C\\u1C0D\\u1C0E\\u1C0F\\u1C10\\u1C11\\u1C12\\u1C13\\u1C14\\u1C15\\u1C16\\u1C17\\u1C18\\u1C19\\u1C1A\\u1C1B\\u1C1C\\u1C1D\\u1C1E\\u1C1F\\u1C20\\u1C21\\u1C22\\u1C23\\u1C4D\\u1C4E\\u1C4F\\u1C5A\\u1C5B\\u1C5C\\u1C5D\\u1C5E\\u1C5F\\u1C60\\u1C61\\u1C62\\u1C63\\u1C64\\u1C65\\u1C66\\u1C67\\u1C68\\u1C69\\u1C6A\\u1C6B\\u1C6C\\u1C6D\\u1C6E\\u1C6F\\u1C70\\u1C71\\u1C72\\u1C73\\u1C74\\u1C75\\u1C76\\u1C77\\u2135\\u2136\\u2137\\u2138\\u2D30\\u2D31\\u2D32\\u2D33\\u2D34\\u2D35\\u2D36\\u2D37\\u2D38\\u2D39\\u2D3A\\u2D3B\\u2D3C\\u2D3D\\u2D3E\\u2D3F\\u2D40\\u2D41\\u2D42\\u2D43\\u2D44\\u2D45\\u2D46\\u2D47\\u2D48\\u2D49\\u2D4A\\u2D4B\\u2D4C\\u2D4D\\u2D4E\\u2D4F\\u2D50\\u2D51\\u2D52\\u2D53\\u2D54\\u2D55\\u2D56\\u2D57\\u2D58\\u2D59\\u2D5A\\u2D5B\\u2D5C\\u2D5D\\u2D5E\\u2D5F\\u2D60\\u2D61\\u2D62\\u2D63\\u2D64\\u2D65\\u2D80\\u2D81\\u2D82\\u2D83\\u2D84\\u2D85\\u2D86\\u2D87\\u2D88\\u2D89\\u2D8A\\u2D8B\\u2D8C\\u2D8D\\u2D8E\\u2D8F\\u2D90\\u2D91\\u2D92\\u2D93\\u2D94\\u2D95\\u2D96\\u2DA0\\u2DA1\\u2DA2\\u2DA3\\u2DA4\\u2DA5\\u2DA6\\u2DA8\\u2DA9\\u2DAA\\u2DAB\\u2DAC\\u2DAD\\u2DAE\\u2DB0\\u2DB1\\u2DB2\\u2DB3\\u2DB4\\u2DB5\\u2DB6\\u2DB8\\u2DB9\\u2DBA\\u2DBB\\u2DBC\\u2DBD\\u2DBE\\u2DC0\\u2DC1\\u2DC2\\u2DC3\\u2DC4\\u2DC5\\u2DC6\\u2DC8\\u2DC9\\u2DCA\\u2DCB\\u2DCC\\u2DCD\\u2DCE\\u2DD0\\u2DD1\\u2DD2\\u2DD3\\u2DD4\\u2DD5\\u2DD6\\u2DD8\\u2DD9\\u2DDA\\u2DDB\\u2DDC\\u2DDD\\u2DDE\\u3006\\u303C\\u3041\\u3042\\u3043\\u3044\\u3045\\u3046\\u3047\\u3048\\u3049\\u304A\\u304B\\u304C\\u304D\\u304E\\u304F\\u3050\\u3051\\u3052\\u3053\\u3054\\u3055\\u3056\\u3057\\u3058\\u3059\\u305A\\u305B\\u305C\\u305D\\u305E\\u305F\\u3060\\u3061\\u3062\\u3063\\u3064\\u3065\\u3066\\u3067\\u3068\\u3069\\u306A\\u306B\\u306C\\u306D\\u306E\\u306F\\u3070\\u3071\\u3072\\u3073\\u3074\\u3075\\u3076\\u3077\\u3078\\u3079\\u307A\\u307B\\u307C\\u307D\\u307E\\u307F\\u3080\\u3081\\u3082\\u3083\\u3084\\u3085\\u3086\\u3087\\u3088\\u3089\\u308A\\u308B\\u308C\\u308D\\u308E\\u308F\\u3090\\u3091\\u3092\\u3093\\u3094\\u3095\\u3096\\u309F\\u30A1\\u30A2\\u30A3\\u30A4\\u30A5\\u30A6\\u30A7\\u30A8\\u30A9\\u30AA\\u30AB\\u30AC\\u30AD\\u30AE\\u30AF\\u30B0\\u30B1\\u30B2\\u30B3\\u30B4\\u30B5\\u30B6\\u30B7\\u30B8\\u30B9\\u30BA\\u30BB\\u30BC\\u30BD\\u30BE\\u30BF\\u30C0\\u30C1\\u30C2\\u30C3\\u30C4\\u30C5\\u30C6\\u30C7\\u30C8\\u30C9\\u30CA\\u30CB\\u30CC\\u30CD\\u30CE\\u30CF\\u30D0\\u30D1\\u30D2\\u30D3\\u30D4\\u30D5\\u30D6\\u30D7\\u30D8\\u30D9\\u30DA\\u30DB\\u30DC\\u30DD\\u30DE\\u30DF\\u30E0\\u30E1\\u30E2\\u30E3\\u30E4\\u30E5\\u30E6\\u30E7\\u30E8\\u30E9\\u30EA\\u30EB\\u30EC\\u30ED\\u30EE\\u30EF\\u30F0\\u30F1\\u30F2\\u30F3\\u30F4\\u30F5\\u30F6\\u30F7\\u30F8\\u30F9\\u30FA\\u30FF\\u3105\\u3106\\u3107\\u3108\\u3109\\u310A\\u310B\\u310C\\u310D\\u310E\\u310F\\u3110\\u3111\\u3112\\u3113\\u3114\\u3115\\u3116\\u3117\\u3118\\u3119\\u311A\\u311B\\u311C\\u311D\\u311E\\u311F\\u3120\\u3121\\u3122\\u3123\\u3124\\u3125\\u3126\\u3127\\u3128\\u3129\\u312A\\u312B\\u312C\\u312D\\u3131\\u3132\\u3133\\u3134\\u3135\\u3136\\u3137\\u3138\\u3139\\u313A\\u313B\\u313C\\u313D\\u313E\\u313F\\u3140\\u3141\\u3142\\u3143\\u3144\\u3145\\u3146\\u3147\\u3148\\u3149\\u314A\\u314B\\u314C\\u314D\\u314E\\u314F\\u3150\\u3151\\u3152\\u3153\\u3154\\u3155\\u3156\\u3157\\u3158\\u3159\\u315A\\u315B\\u315C\\u315D\\u315E\\u315F\\u3160\\u3161\\u3162\\u3163\\u3164\\u3165\\u3166\\u3167\\u3168\\u3169\\u316A\\u316B\\u316C\\u316D\\u316E\\u316F\\u3170\\u3171\\u3172\\u3173\\u3174\\u3175\\u3176\\u3177\\u3178\\u3179\\u317A\\u317B\\u317C\\u317D\\u317E\\u317F\\u3180\\u3181\\u3182\\u3183\\u3184\\u3185\\u3186\\u3187\\u3188\\u3189\\u318A\\u318B\\u318C\\u318D\\u318E\\u31A0\\u31A1\\u31A2\\u31A3\\u31A4\\u31A5\\u31A6\\u31A7\\u31A8\\u31A9\\u31AA\\u31AB\\u31AC\\u31AD\\u31AE\\u31AF\\u31B0\\u31B1\\u31B2\\u31B3\\u31B4\\u31B5\\u31B6\\u31B7\\u31F0\\u31F1\\u31F2\\u31F3\\u31F4\\u31F5\\u31F6\\u31F7\\u31F8\\u31F9\\u31FA\\u31FB\\u31FC\\u31FD\\u31FE\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000\\uA001\\uA002\\uA003\\uA004\\uA005\\uA006\\uA007\\uA008\\uA009\\uA00A\\uA00B\\uA00C\\uA00D\\uA00E\\uA00F\\uA010\\uA011\\uA012\\uA013\\uA014\\uA016\\uA017\\uA018\\uA019\\uA01A\\uA01B\\uA01C\\uA01D\\uA01E\\uA01F\\uA020\\uA021\\uA022\\uA023\\uA024\\uA025\\uA026\\uA027\\uA028\\uA029\\uA02A\\uA02B\\uA02C\\uA02D\\uA02E\\uA02F\\uA030\\uA031\\uA032\\uA033\\uA034\\uA035\\uA036\\uA037\\uA038\\uA039\\uA03A\\uA03B\\uA03C\\uA03D\\uA03E\\uA03F\\uA040\\uA041\\uA042\\uA043\\uA044\\uA045\\uA046\\uA047\\uA048\\uA049\\uA04A\\uA04B\\uA04C\\uA04D\\uA04E\\uA04F\\uA050\\uA051\\uA052\\uA053\\uA054\\uA055\\uA056\\uA057\\uA058\\uA059\\uA05A\\uA05B\\uA05C\\uA05D\\uA05E\\uA05F\\uA060\\uA061\\uA062\\uA063\\uA064\\uA065\\uA066\\uA067\\uA068\\uA069\\uA06A\\uA06B\\uA06C\\uA06D\\uA06E\\uA06F\\uA070\\uA071\\uA072\\uA073\\uA074\\uA075\\uA076\\uA077\\uA078\\uA079\\uA07A\\uA07B\\uA07C\\uA07D\\uA07E\\uA07F\\uA080\\uA081\\uA082\\uA083\\uA084\\uA085\\uA086\\uA087\\uA088\\uA089\\uA08A\\uA08B\\uA08C\\uA08D\\uA08E\\uA08F\\uA090\\uA091\\uA092\\uA093\\uA094\\uA095\\uA096\\uA097\\uA098\\uA099\\uA09A\\uA09B\\uA09C\\uA09D\\uA09E\\uA09F\\uA0A0\\uA0A1\\uA0A2\\uA0A3\\uA0A4\\uA0A5\\uA0A6\\uA0A7\\uA0A8\\uA0A9\\uA0AA\\uA0AB\\uA0AC\\uA0AD\\uA0AE\\uA0AF\\uA0B0\\uA0B1\\uA0B2\\uA0B3\\uA0B4\\uA0B5\\uA0B6\\uA0B7\\uA0B8\\uA0B9\\uA0BA\\uA0BB\\uA0BC\\uA0BD\\uA0BE\\uA0BF\\uA0C0\\uA0C1\\uA0C2\\uA0C3\\uA0C4\\uA0C5\\uA0C6\\uA0C7\\uA0C8\\uA0C9\\uA0CA\\uA0CB\\uA0CC\\uA0CD\\uA0CE\\uA0CF\\uA0D0\\uA0D1\\uA0D2\\uA0D3\\uA0D4\\uA0D5\\uA0D6\\uA0D7\\uA0D8\\uA0D9\\uA0DA\\uA0DB\\uA0DC\\uA0DD\\uA0DE\\uA0DF\\uA0E0\\uA0E1\\uA0E2\\uA0E3\\uA0E4\\uA0E5\\uA0E6\\uA0E7\\uA0E8\\uA0E9\\uA0EA\\uA0EB\\uA0EC\\uA0ED\\uA0EE\\uA0EF\\uA0F0\\uA0F1\\uA0F2\\uA0F3\\uA0F4\\uA0F5\\uA0F6\\uA0F7\\uA0F8\\uA0F9\\uA0FA\\uA0FB\\uA0FC\\uA0FD\\uA0FE\\uA0FF\\uA100\\uA101\\uA102\\uA103\\uA104\\uA105\\uA106\\uA107\\uA108\\uA109\\uA10A\\uA10B\\uA10C\\uA10D\\uA10E\\uA10F\\uA110\\uA111\\uA112\\uA113\\uA114\\uA115\\uA116\\uA117\\uA118\\uA119\\uA11A\\uA11B\\uA11C\\uA11D\\uA11E\\uA11F\\uA120\\uA121\\uA122\\uA123\\uA124\\uA125\\uA126\\uA127\\uA128\\uA129\\uA12A\\uA12B\\uA12C\\uA12D\\uA12E\\uA12F\\uA130\\uA131\\uA132\\uA133\\uA134\\uA135\\uA136\\uA137\\uA138\\uA139\\uA13A\\uA13B\\uA13C\\uA13D\\uA13E\\uA13F\\uA140\\uA141\\uA142\\uA143\\uA144\\uA145\\uA146\\uA147\\uA148\\uA149\\uA14A\\uA14B\\uA14C\\uA14D\\uA14E\\uA14F\\uA150\\uA151\\uA152\\uA153\\uA154\\uA155\\uA156\\uA157\\uA158\\uA159\\uA15A\\uA15B\\uA15C\\uA15D\\uA15E\\uA15F\\uA160\\uA161\\uA162\\uA163\\uA164\\uA165\\uA166\\uA167\\uA168\\uA169\\uA16A\\uA16B\\uA16C\\uA16D\\uA16E\\uA16F\\uA170\\uA171\\uA172\\uA173\\uA174\\uA175\\uA176\\uA177\\uA178\\uA179\\uA17A\\uA17B\\uA17C\\uA17D\\uA17E\\uA17F\\uA180\\uA181\\uA182\\uA183\\uA184\\uA185\\uA186\\uA187\\uA188\\uA189\\uA18A\\uA18B\\uA18C\\uA18D\\uA18E\\uA18F\\uA190\\uA191\\uA192\\uA193\\uA194\\uA195\\uA196\\uA197\\uA198\\uA199\\uA19A\\uA19B\\uA19C\\uA19D\\uA19E\\uA19F\\uA1A0\\uA1A1\\uA1A2\\uA1A3\\uA1A4\\uA1A5\\uA1A6\\uA1A7\\uA1A8\\uA1A9\\uA1AA\\uA1AB\\uA1AC\\uA1AD\\uA1AE\\uA1AF\\uA1B0\\uA1B1\\uA1B2\\uA1B3\\uA1B4\\uA1B5\\uA1B6\\uA1B7\\uA1B8\\uA1B9\\uA1BA\\uA1BB\\uA1BC\\uA1BD\\uA1BE\\uA1BF\\uA1C0\\uA1C1\\uA1C2\\uA1C3\\uA1C4\\uA1C5\\uA1C6\\uA1C7\\uA1C8\\uA1C9\\uA1CA\\uA1CB\\uA1CC\\uA1CD\\uA1CE\\uA1CF\\uA1D0\\uA1D1\\uA1D2\\uA1D3\\uA1D4\\uA1D5\\uA1D6\\uA1D7\\uA1D8\\uA1D9\\uA1DA\\uA1DB\\uA1DC\\uA1DD\\uA1DE\\uA1DF\\uA1E0\\uA1E1\\uA1E2\\uA1E3\\uA1E4\\uA1E5\\uA1E6\\uA1E7\\uA1E8\\uA1E9\\uA1EA\\uA1EB\\uA1EC\\uA1ED\\uA1EE\\uA1EF\\uA1F0\\uA1F1\\uA1F2\\uA1F3\\uA1F4\\uA1F5\\uA1F6\\uA1F7\\uA1F8\\uA1F9\\uA1FA\\uA1FB\\uA1FC\\uA1FD\\uA1FE\\uA1FF\\uA200\\uA201\\uA202\\uA203\\uA204\\uA205\\uA206\\uA207\\uA208\\uA209\\uA20A\\uA20B\\uA20C\\uA20D\\uA20E\\uA20F\\uA210\\uA211\\uA212\\uA213\\uA214\\uA215\\uA216\\uA217\\uA218\\uA219\\uA21A\\uA21B\\uA21C\\uA21D\\uA21E\\uA21F\\uA220\\uA221\\uA222\\uA223\\uA224\\uA225\\uA226\\uA227\\uA228\\uA229\\uA22A\\uA22B\\uA22C\\uA22D\\uA22E\\uA22F\\uA230\\uA231\\uA232\\uA233\\uA234\\uA235\\uA236\\uA237\\uA238\\uA239\\uA23A\\uA23B\\uA23C\\uA23D\\uA23E\\uA23F\\uA240\\uA241\\uA242\\uA243\\uA244\\uA245\\uA246\\uA247\\uA248\\uA249\\uA24A\\uA24B\\uA24C\\uA24D\\uA24E\\uA24F\\uA250\\uA251\\uA252\\uA253\\uA254\\uA255\\uA256\\uA257\\uA258\\uA259\\uA25A\\uA25B\\uA25C\\uA25D\\uA25E\\uA25F\\uA260\\uA261\\uA262\\uA263\\uA264\\uA265\\uA266\\uA267\\uA268\\uA269\\uA26A\\uA26B\\uA26C\\uA26D\\uA26E\\uA26F\\uA270\\uA271\\uA272\\uA273\\uA274\\uA275\\uA276\\uA277\\uA278\\uA279\\uA27A\\uA27B\\uA27C\\uA27D\\uA27E\\uA27F\\uA280\\uA281\\uA282\\uA283\\uA284\\uA285\\uA286\\uA287\\uA288\\uA289\\uA28A\\uA28B\\uA28C\\uA28D\\uA28E\\uA28F\\uA290\\uA291\\uA292\\uA293\\uA294\\uA295\\uA296\\uA297\\uA298\\uA299\\uA29A\\uA29B\\uA29C\\uA29D\\uA29E\\uA29F\\uA2A0\\uA2A1\\uA2A2\\uA2A3\\uA2A4\\uA2A5\\uA2A6\\uA2A7\\uA2A8\\uA2A9\\uA2AA\\uA2AB\\uA2AC\\uA2AD\\uA2AE\\uA2AF\\uA2B0\\uA2B1\\uA2B2\\uA2B3\\uA2B4\\uA2B5\\uA2B6\\uA2B7\\uA2B8\\uA2B9\\uA2BA\\uA2BB\\uA2BC\\uA2BD\\uA2BE\\uA2BF\\uA2C0\\uA2C1\\uA2C2\\uA2C3\\uA2C4\\uA2C5\\uA2C6\\uA2C7\\uA2C8\\uA2C9\\uA2CA\\uA2CB\\uA2CC\\uA2CD\\uA2CE\\uA2CF\\uA2D0\\uA2D1\\uA2D2\\uA2D3\\uA2D4\\uA2D5\\uA2D6\\uA2D7\\uA2D8\\uA2D9\\uA2DA\\uA2DB\\uA2DC\\uA2DD\\uA2DE\\uA2DF\\uA2E0\\uA2E1\\uA2E2\\uA2E3\\uA2E4\\uA2E5\\uA2E6\\uA2E7\\uA2E8\\uA2E9\\uA2EA\\uA2EB\\uA2EC\\uA2ED\\uA2EE\\uA2EF\\uA2F0\\uA2F1\\uA2F2\\uA2F3\\uA2F4\\uA2F5\\uA2F6\\uA2F7\\uA2F8\\uA2F9\\uA2FA\\uA2FB\\uA2FC\\uA2FD\\uA2FE\\uA2FF\\uA300\\uA301\\uA302\\uA303\\uA304\\uA305\\uA306\\uA307\\uA308\\uA309\\uA30A\\uA30B\\uA30C\\uA30D\\uA30E\\uA30F\\uA310\\uA311\\uA312\\uA313\\uA314\\uA315\\uA316\\uA317\\uA318\\uA319\\uA31A\\uA31B\\uA31C\\uA31D\\uA31E\\uA31F\\uA320\\uA321\\uA322\\uA323\\uA324\\uA325\\uA326\\uA327\\uA328\\uA329\\uA32A\\uA32B\\uA32C\\uA32D\\uA32E\\uA32F\\uA330\\uA331\\uA332\\uA333\\uA334\\uA335\\uA336\\uA337\\uA338\\uA339\\uA33A\\uA33B\\uA33C\\uA33D\\uA33E\\uA33F\\uA340\\uA341\\uA342\\uA343\\uA344\\uA345\\uA346\\uA347\\uA348\\uA349\\uA34A\\uA34B\\uA34C\\uA34D\\uA34E\\uA34F\\uA350\\uA351\\uA352\\uA353\\uA354\\uA355\\uA356\\uA357\\uA358\\uA359\\uA35A\\uA35B\\uA35C\\uA35D\\uA35E\\uA35F\\uA360\\uA361\\uA362\\uA363\\uA364\\uA365\\uA366\\uA367\\uA368\\uA369\\uA36A\\uA36B\\uA36C\\uA36D\\uA36E\\uA36F\\uA370\\uA371\\uA372\\uA373\\uA374\\uA375\\uA376\\uA377\\uA378\\uA379\\uA37A\\uA37B\\uA37C\\uA37D\\uA37E\\uA37F\\uA380\\uA381\\uA382\\uA383\\uA384\\uA385\\uA386\\uA387\\uA388\\uA389\\uA38A\\uA38B\\uA38C\\uA38D\\uA38E\\uA38F\\uA390\\uA391\\uA392\\uA393\\uA394\\uA395\\uA396\\uA397\\uA398\\uA399\\uA39A\\uA39B\\uA39C\\uA39D\\uA39E\\uA39F\\uA3A0\\uA3A1\\uA3A2\\uA3A3\\uA3A4\\uA3A5\\uA3A6\\uA3A7\\uA3A8\\uA3A9\\uA3AA\\uA3AB\\uA3AC\\uA3AD\\uA3AE\\uA3AF\\uA3B0\\uA3B1\\uA3B2\\uA3B3\\uA3B4\\uA3B5\\uA3B6\\uA3B7\\uA3B8\\uA3B9\\uA3BA\\uA3BB\\uA3BC\\uA3BD\\uA3BE\\uA3BF\\uA3C0\\uA3C1\\uA3C2\\uA3C3\\uA3C4\\uA3C5\\uA3C6\\uA3C7\\uA3C8\\uA3C9\\uA3CA\\uA3CB\\uA3CC\\uA3CD\\uA3CE\\uA3CF\\uA3D0\\uA3D1\\uA3D2\\uA3D3\\uA3D4\\uA3D5\\uA3D6\\uA3D7\\uA3D8\\uA3D9\\uA3DA\\uA3DB\\uA3DC\\uA3DD\\uA3DE\\uA3DF\\uA3E0\\uA3E1\\uA3E2\\uA3E3\\uA3E4\\uA3E5\\uA3E6\\uA3E7\\uA3E8\\uA3E9\\uA3EA\\uA3EB\\uA3EC\\uA3ED\\uA3EE\\uA3EF\\uA3F0\\uA3F1\\uA3F2\\uA3F3\\uA3F4\\uA3F5\\uA3F6\\uA3F7\\uA3F8\\uA3F9\\uA3FA\\uA3FB\\uA3FC\\uA3FD\\uA3FE\\uA3FF\\uA400\\uA401\\uA402\\uA403\\uA404\\uA405\\uA406\\uA407\\uA408\\uA409\\uA40A\\uA40B\\uA40C\\uA40D\\uA40E\\uA40F\\uA410\\uA411\\uA412\\uA413\\uA414\\uA415\\uA416\\uA417\\uA418\\uA419\\uA41A\\uA41B\\uA41C\\uA41D\\uA41E\\uA41F\\uA420\\uA421\\uA422\\uA423\\uA424\\uA425\\uA426\\uA427\\uA428\\uA429\\uA42A\\uA42B\\uA42C\\uA42D\\uA42E\\uA42F\\uA430\\uA431\\uA432\\uA433\\uA434\\uA435\\uA436\\uA437\\uA438\\uA439\\uA43A\\uA43B\\uA43C\\uA43D\\uA43E\\uA43F\\uA440\\uA441\\uA442\\uA443\\uA444\\uA445\\uA446\\uA447\\uA448\\uA449\\uA44A\\uA44B\\uA44C\\uA44D\\uA44E\\uA44F\\uA450\\uA451\\uA452\\uA453\\uA454\\uA455\\uA456\\uA457\\uA458\\uA459\\uA45A\\uA45B\\uA45C\\uA45D\\uA45E\\uA45F\\uA460\\uA461\\uA462\\uA463\\uA464\\uA465\\uA466\\uA467\\uA468\\uA469\\uA46A\\uA46B\\uA46C\\uA46D\\uA46E\\uA46F\\uA470\\uA471\\uA472\\uA473\\uA474\\uA475\\uA476\\uA477\\uA478\\uA479\\uA47A\\uA47B\\uA47C\\uA47D\\uA47E\\uA47F\\uA480\\uA481\\uA482\\uA483\\uA484\\uA485\\uA486\\uA487\\uA488\\uA489\\uA48A\\uA48B\\uA48C\\uA500\\uA501\\uA502\\uA503\\uA504\\uA505\\uA506\\uA507\\uA508\\uA509\\uA50A\\uA50B\\uA50C\\uA50D\\uA50E\\uA50F\\uA510\\uA511\\uA512\\uA513\\uA514\\uA515\\uA516\\uA517\\uA518\\uA519\\uA51A\\uA51B\\uA51C\\uA51D\\uA51E\\uA51F\\uA520\\uA521\\uA522\\uA523\\uA524\\uA525\\uA526\\uA527\\uA528\\uA529\\uA52A\\uA52B\\uA52C\\uA52D\\uA52E\\uA52F\\uA530\\uA531\\uA532\\uA533\\uA534\\uA535\\uA536\\uA537\\uA538\\uA539\\uA53A\\uA53B\\uA53C\\uA53D\\uA53E\\uA53F\\uA540\\uA541\\uA542\\uA543\\uA544\\uA545\\uA546\\uA547\\uA548\\uA549\\uA54A\\uA54B\\uA54C\\uA54D\\uA54E\\uA54F\\uA550\\uA551\\uA552\\uA553\\uA554\\uA555\\uA556\\uA557\\uA558\\uA559\\uA55A\\uA55B\\uA55C\\uA55D\\uA55E\\uA55F\\uA560\\uA561\\uA562\\uA563\\uA564\\uA565\\uA566\\uA567\\uA568\\uA569\\uA56A\\uA56B\\uA56C\\uA56D\\uA56E\\uA56F\\uA570\\uA571\\uA572\\uA573\\uA574\\uA575\\uA576\\uA577\\uA578\\uA579\\uA57A\\uA57B\\uA57C\\uA57D\\uA57E\\uA57F\\uA580\\uA581\\uA582\\uA583\\uA584\\uA585\\uA586\\uA587\\uA588\\uA589\\uA58A\\uA58B\\uA58C\\uA58D\\uA58E\\uA58F\\uA590\\uA591\\uA592\\uA593\\uA594\\uA595\\uA596\\uA597\\uA598\\uA599\\uA59A\\uA59B\\uA59C\\uA59D\\uA59E\\uA59F\\uA5A0\\uA5A1\\uA5A2\\uA5A3\\uA5A4\\uA5A5\\uA5A6\\uA5A7\\uA5A8\\uA5A9\\uA5AA\\uA5AB\\uA5AC\\uA5AD\\uA5AE\\uA5AF\\uA5B0\\uA5B1\\uA5B2\\uA5B3\\uA5B4\\uA5B5\\uA5B6\\uA5B7\\uA5B8\\uA5B9\\uA5BA\\uA5BB\\uA5BC\\uA5BD\\uA5BE\\uA5BF\\uA5C0\\uA5C1\\uA5C2\\uA5C3\\uA5C4\\uA5C5\\uA5C6\\uA5C7\\uA5C8\\uA5C9\\uA5CA\\uA5CB\\uA5CC\\uA5CD\\uA5CE\\uA5CF\\uA5D0\\uA5D1\\uA5D2\\uA5D3\\uA5D4\\uA5D5\\uA5D6\\uA5D7\\uA5D8\\uA5D9\\uA5DA\\uA5DB\\uA5DC\\uA5DD\\uA5DE\\uA5DF\\uA5E0\\uA5E1\\uA5E2\\uA5E3\\uA5E4\\uA5E5\\uA5E6\\uA5E7\\uA5E8\\uA5E9\\uA5EA\\uA5EB\\uA5EC\\uA5ED\\uA5EE\\uA5EF\\uA5F0\\uA5F1\\uA5F2\\uA5F3\\uA5F4\\uA5F5\\uA5F6\\uA5F7\\uA5F8\\uA5F9\\uA5FA\\uA5FB\\uA5FC\\uA5FD\\uA5FE\\uA5FF\\uA600\\uA601\\uA602\\uA603\\uA604\\uA605\\uA606\\uA607\\uA608\\uA609\\uA60A\\uA60B\\uA610\\uA611\\uA612\\uA613\\uA614\\uA615\\uA616\\uA617\\uA618\\uA619\\uA61A\\uA61B\\uA61C\\uA61D\\uA61E\\uA61F\\uA62A\\uA62B\\uA66E\\uA7FB\\uA7FC\\uA7FD\\uA7FE\\uA7FF\\uA800\\uA801\\uA803\\uA804\\uA805\\uA807\\uA808\\uA809\\uA80A\\uA80C\\uA80D\\uA80E\\uA80F\\uA810\\uA811\\uA812\\uA813\\uA814\\uA815\\uA816\\uA817\\uA818\\uA819\\uA81A\\uA81B\\uA81C\\uA81D\\uA81E\\uA81F\\uA820\\uA821\\uA822\\uA840\\uA841\\uA842\\uA843\\uA844\\uA845\\uA846\\uA847\\uA848\\uA849\\uA84A\\uA84B\\uA84C\\uA84D\\uA84E\\uA84F\\uA850\\uA851\\uA852\\uA853\\uA854\\uA855\\uA856\\uA857\\uA858\\uA859\\uA85A\\uA85B\\uA85C\\uA85D\\uA85E\\uA85F\\uA860\\uA861\\uA862\\uA863\\uA864\\uA865\\uA866\\uA867\\uA868\\uA869\\uA86A\\uA86B\\uA86C\\uA86D\\uA86E\\uA86F\\uA870\\uA871\\uA872\\uA873\\uA882\\uA883\\uA884\\uA885\\uA886\\uA887\\uA888\\uA889\\uA88A\\uA88B\\uA88C\\uA88D\\uA88E\\uA88F\\uA890\\uA891\\uA892\\uA893\\uA894\\uA895\\uA896\\uA897\\uA898\\uA899\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\uA8A1\\uA8A2\\uA8A3\\uA8A4\\uA8A5\\uA8A6\\uA8A7\\uA8A8\\uA8A9\\uA8AA\\uA8AB\\uA8AC\\uA8AD\\uA8AE\\uA8AF\\uA8B0\\uA8B1\\uA8B2\\uA8B3\\uA90A\\uA90B\\uA90C\\uA90D\\uA90E\\uA90F\\uA910\\uA911\\uA912\\uA913\\uA914\\uA915\\uA916\\uA917\\uA918\\uA919\\uA91A\\uA91B\\uA91C\\uA91D\\uA91E\\uA91F\\uA920\\uA921\\uA922\\uA923\\uA924\\uA925\\uA930\\uA931\\uA932\\uA933\\uA934\\uA935\\uA936\\uA937\\uA938\\uA939\\uA93A\\uA93B\\uA93C\\uA93D\\uA93E\\uA93F\\uA940\\uA941\\uA942\\uA943\\uA944\\uA945\\uA946\\uAA00\\uAA01\\uAA02\\uAA03\\uAA04\\uAA05\\uAA06\\uAA07\\uAA08\\uAA09\\uAA0A\\uAA0B\\uAA0C\\uAA0D\\uAA0E\\uAA0F\\uAA10\\uAA11\\uAA12\\uAA13\\uAA14\\uAA15\\uAA16\\uAA17\\uAA18\\uAA19\\uAA1A\\uAA1B\\uAA1C\\uAA1D\\uAA1E\\uAA1F\\uAA20\\uAA21\\uAA22\\uAA23\\uAA24\\uAA25\\uAA26\\uAA27\\uAA28\\uAA40\\uAA41\\uAA42\\uAA44\\uAA45\\uAA46\\uAA47\\uAA48\\uAA49\\uAA4A\\uAA4B\\uAC00\\uD7A3\\uF900\\uF901\\uF902\\uF903\\uF904\\uF905\\uF906\\uF907\\uF908\\uF909\\uF90A\\uF90B\\uF90C\\uF90D\\uF90E\\uF90F\\uF910\\uF911\\uF912\\uF913\\uF914\\uF915\\uF916\\uF917\\uF918\\uF919\\uF91A\\uF91B\\uF91C\\uF91D\\uF91E\\uF91F\\uF920\\uF921\\uF922\\uF923\\uF924\\uF925\\uF926\\uF927\\uF928\\uF929\\uF92A\\uF92B\\uF92C\\uF92D\\uF92E\\uF92F\\uF930\\uF931\\uF932\\uF933\\uF934\\uF935\\uF936\\uF937\\uF938\\uF939\\uF93A\\uF93B\\uF93C\\uF93D\\uF93E\\uF93F\\uF940\\uF941\\uF942\\uF943\\uF944\\uF945\\uF946\\uF947\\uF948\\uF949\\uF94A\\uF94B\\uF94C\\uF94D\\uF94E\\uF94F\\uF950\\uF951\\uF952\\uF953\\uF954\\uF955\\uF956\\uF957\\uF958\\uF959\\uF95A\\uF95B\\uF95C\\uF95D\\uF95E\\uF95F\\uF960\\uF961\\uF962\\uF963\\uF964\\uF965\\uF966\\uF967\\uF968\\uF969\\uF96A\\uF96B\\uF96C\\uF96D\\uF96E\\uF96F\\uF970\\uF971\\uF972\\uF973\\uF974\\uF975\\uF976\\uF977\\uF978\\uF979\\uF97A\\uF97B\\uF97C\\uF97D\\uF97E\\uF97F\\uF980\\uF981\\uF982\\uF983\\uF984\\uF985\\uF986\\uF987\\uF988\\uF989\\uF98A\\uF98B\\uF98C\\uF98D\\uF98E\\uF98F\\uF990\\uF991\\uF992\\uF993\\uF994\\uF995\\uF996\\uF997\\uF998\\uF999\\uF99A\\uF99B\\uF99C\\uF99D\\uF99E\\uF99F\\uF9A0\\uF9A1\\uF9A2\\uF9A3\\uF9A4\\uF9A5\\uF9A6\\uF9A7\\uF9A8\\uF9A9\\uF9AA\\uF9AB\\uF9AC\\uF9AD\\uF9AE\\uF9AF\\uF9B0\\uF9B1\\uF9B2\\uF9B3\\uF9B4\\uF9B5\\uF9B6\\uF9B7\\uF9B8\\uF9B9\\uF9BA\\uF9BB\\uF9BC\\uF9BD\\uF9BE\\uF9BF\\uF9C0\\uF9C1\\uF9C2\\uF9C3\\uF9C4\\uF9C5\\uF9C6\\uF9C7\\uF9C8\\uF9C9\\uF9CA\\uF9CB\\uF9CC\\uF9CD\\uF9CE\\uF9CF\\uF9D0\\uF9D1\\uF9D2\\uF9D3\\uF9D4\\uF9D5\\uF9D6\\uF9D7\\uF9D8\\uF9D9\\uF9DA\\uF9DB\\uF9DC\\uF9DD\\uF9DE\\uF9DF\\uF9E0\\uF9E1\\uF9E2\\uF9E3\\uF9E4\\uF9E5\\uF9E6\\uF9E7\\uF9E8\\uF9E9\\uF9EA\\uF9EB\\uF9EC\\uF9ED\\uF9EE\\uF9EF\\uF9F0\\uF9F1\\uF9F2\\uF9F3\\uF9F4\\uF9F5\\uF9F6\\uF9F7\\uF9F8\\uF9F9\\uF9FA\\uF9FB\\uF9FC\\uF9FD\\uF9FE\\uF9FF\\uFA00\\uFA01\\uFA02\\uFA03\\uFA04\\uFA05\\uFA06\\uFA07\\uFA08\\uFA09\\uFA0A\\uFA0B\\uFA0C\\uFA0D\\uFA0E\\uFA0F\\uFA10\\uFA11\\uFA12\\uFA13\\uFA14\\uFA15\\uFA16\\uFA17\\uFA18\\uFA19\\uFA1A\\uFA1B\\uFA1C\\uFA1D\\uFA1E\\uFA1F\\uFA20\\uFA21\\uFA22\\uFA23\\uFA24\\uFA25\\uFA26\\uFA27\\uFA28\\uFA29\\uFA2A\\uFA2B\\uFA2C\\uFA2D\\uFA30\\uFA31\\uFA32\\uFA33\\uFA34\\uFA35\\uFA36\\uFA37\\uFA38\\uFA39\\uFA3A\\uFA3B\\uFA3C\\uFA3D\\uFA3E\\uFA3F\\uFA40\\uFA41\\uFA42\\uFA43\\uFA44\\uFA45\\uFA46\\uFA47\\uFA48\\uFA49\\uFA4A\\uFA4B\\uFA4C\\uFA4D\\uFA4E\\uFA4F\\uFA50\\uFA51\\uFA52\\uFA53\\uFA54\\uFA55\\uFA56\\uFA57\\uFA58\\uFA59\\uFA5A\\uFA5B\\uFA5C\\uFA5D\\uFA5E\\uFA5F\\uFA60\\uFA61\\uFA62\\uFA63\\uFA64\\uFA65\\uFA66\\uFA67\\uFA68\\uFA69\\uFA6A\\uFA70\\uFA71\\uFA72\\uFA73\\uFA74\\uFA75\\uFA76\\uFA77\\uFA78\\uFA79\\uFA7A\\uFA7B\\uFA7C\\uFA7D\\uFA7E\\uFA7F\\uFA80\\uFA81\\uFA82\\uFA83\\uFA84\\uFA85\\uFA86\\uFA87\\uFA88\\uFA89\\uFA8A\\uFA8B\\uFA8C\\uFA8D\\uFA8E\\uFA8F\\uFA90\\uFA91\\uFA92\\uFA93\\uFA94\\uFA95\\uFA96\\uFA97\\uFA98\\uFA99\\uFA9A\\uFA9B\\uFA9C\\uFA9D\\uFA9E\\uFA9F\\uFAA0\\uFAA1\\uFAA2\\uFAA3\\uFAA4\\uFAA5\\uFAA6\\uFAA7\\uFAA8\\uFAA9\\uFAAA\\uFAAB\\uFAAC\\uFAAD\\uFAAE\\uFAAF\\uFAB0\\uFAB1\\uFAB2\\uFAB3\\uFAB4\\uFAB5\\uFAB6\\uFAB7\\uFAB8\\uFAB9\\uFABA\\uFABB\\uFABC\\uFABD\\uFABE\\uFABF\\uFAC0\\uFAC1\\uFAC2\\uFAC3\\uFAC4\\uFAC5\\uFAC6\\uFAC7\\uFAC8\\uFAC9\\uFACA\\uFACB\\uFACC\\uFACD\\uFACE\\uFACF\\uFAD0\\uFAD1\\uFAD2\\uFAD3\\uFAD4\\uFAD5\\uFAD6\\uFAD7\\uFAD8\\uFAD9\\uFB1D\\uFB1F\\uFB20\\uFB21\\uFB22\\uFB23\\uFB24\\uFB25\\uFB26\\uFB27\\uFB28\\uFB2A\\uFB2B\\uFB2C\\uFB2D\\uFB2E\\uFB2F\\uFB30\\uFB31\\uFB32\\uFB33\\uFB34\\uFB35\\uFB36\\uFB38\\uFB39\\uFB3A\\uFB3B\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46\\uFB47\\uFB48\\uFB49\\uFB4A\\uFB4B\\uFB4C\\uFB4D\\uFB4E\\uFB4F\\uFB50\\uFB51\\uFB52\\uFB53\\uFB54\\uFB55\\uFB56\\uFB57\\uFB58\\uFB59\\uFB5A\\uFB5B\\uFB5C\\uFB5D\\uFB5E\\uFB5F\\uFB60\\uFB61\\uFB62\\uFB63\\uFB64\\uFB65\\uFB66\\uFB67\\uFB68\\uFB69\\uFB6A\\uFB6B\\uFB6C\\uFB6D\\uFB6E\\uFB6F\\uFB70\\uFB71\\uFB72\\uFB73\\uFB74\\uFB75\\uFB76\\uFB77\\uFB78\\uFB79\\uFB7A\\uFB7B\\uFB7C\\uFB7D\\uFB7E\\uFB7F\\uFB80\\uFB81\\uFB82\\uFB83\\uFB84\\uFB85\\uFB86\\uFB87\\uFB88\\uFB89\\uFB8A\\uFB8B\\uFB8C\\uFB8D\\uFB8E\\uFB8F\\uFB90\\uFB91\\uFB92\\uFB93\\uFB94\\uFB95\\uFB96\\uFB97\\uFB98\\uFB99\\uFB9A\\uFB9B\\uFB9C\\uFB9D\\uFB9E\\uFB9F\\uFBA0\\uFBA1\\uFBA2\\uFBA3\\uFBA4\\uFBA5\\uFBA6\\uFBA7\\uFBA8\\uFBA9\\uFBAA\\uFBAB\\uFBAC\\uFBAD\\uFBAE\\uFBAF\\uFBB0\\uFBB1\\uFBD3\\uFBD4\\uFBD5\\uFBD6\\uFBD7\\uFBD8\\uFBD9\\uFBDA\\uFBDB\\uFBDC\\uFBDD\\uFBDE\\uFBDF\\uFBE0\\uFBE1\\uFBE2\\uFBE3\\uFBE4\\uFBE5\\uFBE6\\uFBE7\\uFBE8\\uFBE9\\uFBEA\\uFBEB\\uFBEC\\uFBED\\uFBEE\\uFBEF\\uFBF0\\uFBF1\\uFBF2\\uFBF3\\uFBF4\\uFBF5\\uFBF6\\uFBF7\\uFBF8\\uFBF9\\uFBFA\\uFBFB\\uFBFC\\uFBFD\\uFBFE\\uFBFF\\uFC00\\uFC01\\uFC02\\uFC03\\uFC04\\uFC05\\uFC06\\uFC07\\uFC08\\uFC09\\uFC0A\\uFC0B\\uFC0C\\uFC0D\\uFC0E\\uFC0F\\uFC10\\uFC11\\uFC12\\uFC13\\uFC14\\uFC15\\uFC16\\uFC17\\uFC18\\uFC19\\uFC1A\\uFC1B\\uFC1C\\uFC1D\\uFC1E\\uFC1F\\uFC20\\uFC21\\uFC22\\uFC23\\uFC24\\uFC25\\uFC26\\uFC27\\uFC28\\uFC29\\uFC2A\\uFC2B\\uFC2C\\uFC2D\\uFC2E\\uFC2F\\uFC30\\uFC31\\uFC32\\uFC33\\uFC34\\uFC35\\uFC36\\uFC37\\uFC38\\uFC39\\uFC3A\\uFC3B\\uFC3C\\uFC3D\\uFC3E\\uFC3F\\uFC40\\uFC41\\uFC42\\uFC43\\uFC44\\uFC45\\uFC46\\uFC47\\uFC48\\uFC49\\uFC4A\\uFC4B\\uFC4C\\uFC4D\\uFC4E\\uFC4F\\uFC50\\uFC51\\uFC52\\uFC53\\uFC54\\uFC55\\uFC56\\uFC57\\uFC58\\uFC59\\uFC5A\\uFC5B\\uFC5C\\uFC5D\\uFC5E\\uFC5F\\uFC60\\uFC61\\uFC62\\uFC63\\uFC64\\uFC65\\uFC66\\uFC67\\uFC68\\uFC69\\uFC6A\\uFC6B\\uFC6C\\uFC6D\\uFC6E\\uFC6F\\uFC70\\uFC71\\uFC72\\uFC73\\uFC74\\uFC75\\uFC76\\uFC77\\uFC78\\uFC79\\uFC7A\\uFC7B\\uFC7C\\uFC7D\\uFC7E\\uFC7F\\uFC80\\uFC81\\uFC82\\uFC83\\uFC84\\uFC85\\uFC86\\uFC87\\uFC88\\uFC89\\uFC8A\\uFC8B\\uFC8C\\uFC8D\\uFC8E\\uFC8F\\uFC90\\uFC91\\uFC92\\uFC93\\uFC94\\uFC95\\uFC96\\uFC97\\uFC98\\uFC99\\uFC9A\\uFC9B\\uFC9C\\uFC9D\\uFC9E\\uFC9F\\uFCA0\\uFCA1\\uFCA2\\uFCA3\\uFCA4\\uFCA5\\uFCA6\\uFCA7\\uFCA8\\uFCA9\\uFCAA\\uFCAB\\uFCAC\\uFCAD\\uFCAE\\uFCAF\\uFCB0\\uFCB1\\uFCB2\\uFCB3\\uFCB4\\uFCB5\\uFCB6\\uFCB7\\uFCB8\\uFCB9\\uFCBA\\uFCBB\\uFCBC\\uFCBD\\uFCBE\\uFCBF\\uFCC0\\uFCC1\\uFCC2\\uFCC3\\uFCC4\\uFCC5\\uFCC6\\uFCC7\\uFCC8\\uFCC9\\uFCCA\\uFCCB\\uFCCC\\uFCCD\\uFCCE\\uFCCF\\uFCD0\\uFCD1\\uFCD2\\uFCD3\\uFCD4\\uFCD5\\uFCD6\\uFCD7\\uFCD8\\uFCD9\\uFCDA\\uFCDB\\uFCDC\\uFCDD\\uFCDE\\uFCDF\\uFCE0\\uFCE1\\uFCE2\\uFCE3\\uFCE4\\uFCE5\\uFCE6\\uFCE7\\uFCE8\\uFCE9\\uFCEA\\uFCEB\\uFCEC\\uFCED\\uFCEE\\uFCEF\\uFCF0\\uFCF1\\uFCF2\\uFCF3\\uFCF4\\uFCF5\\uFCF6\\uFCF7\\uFCF8\\uFCF9\\uFCFA\\uFCFB\\uFCFC\\uFCFD\\uFCFE\\uFCFF\\uFD00\\uFD01\\uFD02\\uFD03\\uFD04\\uFD05\\uFD06\\uFD07\\uFD08\\uFD09\\uFD0A\\uFD0B\\uFD0C\\uFD0D\\uFD0E\\uFD0F\\uFD10\\uFD11\\uFD12\\uFD13\\uFD14\\uFD15\\uFD16\\uFD17\\uFD18\\uFD19\\uFD1A\\uFD1B\\uFD1C\\uFD1D\\uFD1E\\uFD1F\\uFD20\\uFD21\\uFD22\\uFD23\\uFD24\\uFD25\\uFD26\\uFD27\\uFD28\\uFD29\\uFD2A\\uFD2B\\uFD2C\\uFD2D\\uFD2E\\uFD2F\\uFD30\\uFD31\\uFD32\\uFD33\\uFD34\\uFD35\\uFD36\\uFD37\\uFD38\\uFD39\\uFD3A\\uFD3B\\uFD3C\\uFD3D\\uFD50\\uFD51\\uFD52\\uFD53\\uFD54\\uFD55\\uFD56\\uFD57\\uFD58\\uFD59\\uFD5A\\uFD5B\\uFD5C\\uFD5D\\uFD5E\\uFD5F\\uFD60\\uFD61\\uFD62\\uFD63\\uFD64\\uFD65\\uFD66\\uFD67\\uFD68\\uFD69\\uFD6A\\uFD6B\\uFD6C\\uFD6D\\uFD6E\\uFD6F\\uFD70\\uFD71\\uFD72\\uFD73\\uFD74\\uFD75\\uFD76\\uFD77\\uFD78\\uFD79\\uFD7A\\uFD7B\\uFD7C\\uFD7D\\uFD7E\\uFD7F\\uFD80\\uFD81\\uFD82\\uFD83\\uFD84\\uFD85\\uFD86\\uFD87\\uFD88\\uFD89\\uFD8A\\uFD8B\\uFD8C\\uFD8D\\uFD8E\\uFD8F\\uFD92\\uFD93\\uFD94\\uFD95\\uFD96\\uFD97\\uFD98\\uFD99\\uFD9A\\uFD9B\\uFD9C\\uFD9D\\uFD9E\\uFD9F\\uFDA0\\uFDA1\\uFDA2\\uFDA3\\uFDA4\\uFDA5\\uFDA6\\uFDA7\\uFDA8\\uFDA9\\uFDAA\\uFDAB\\uFDAC\\uFDAD\\uFDAE\\uFDAF\\uFDB0\\uFDB1\\uFDB2\\uFDB3\\uFDB4\\uFDB5\\uFDB6\\uFDB7\\uFDB8\\uFDB9\\uFDBA\\uFDBB\\uFDBC\\uFDBD\\uFDBE\\uFDBF\\uFDC0\\uFDC1\\uFDC2\\uFDC3\\uFDC4\\uFDC5\\uFDC6\\uFDC7\\uFDF0\\uFDF1\\uFDF2\\uFDF3\\uFDF4\\uFDF5\\uFDF6\\uFDF7\\uFDF8\\uFDF9\\uFDFA\\uFDFB\\uFE70\\uFE71\\uFE72\\uFE73\\uFE74\\uFE76\\uFE77\\uFE78\\uFE79\\uFE7A\\uFE7B\\uFE7C\\uFE7D\\uFE7E\\uFE7F\\uFE80\\uFE81\\uFE82\\uFE83\\uFE84\\uFE85\\uFE86\\uFE87\\uFE88\\uFE89\\uFE8A\\uFE8B\\uFE8C\\uFE8D\\uFE8E\\uFE8F\\uFE90\\uFE91\\uFE92\\uFE93\\uFE94\\uFE95\\uFE96\\uFE97\\uFE98\\uFE99\\uFE9A\\uFE9B\\uFE9C\\uFE9D\\uFE9E\\uFE9F\\uFEA0\\uFEA1\\uFEA2\\uFEA3\\uFEA4\\uFEA5\\uFEA6\\uFEA7\\uFEA8\\uFEA9\\uFEAA\\uFEAB\\uFEAC\\uFEAD\\uFEAE\\uFEAF\\uFEB0\\uFEB1\\uFEB2\\uFEB3\\uFEB4\\uFEB5\\uFEB6\\uFEB7\\uFEB8\\uFEB9\\uFEBA\\uFEBB\\uFEBC\\uFEBD\\uFEBE\\uFEBF\\uFEC0\\uFEC1\\uFEC2\\uFEC3\\uFEC4\\uFEC5\\uFEC6\\uFEC7\\uFEC8\\uFEC9\\uFECA\\uFECB\\uFECC\\uFECD\\uFECE\\uFECF\\uFED0\\uFED1\\uFED2\\uFED3\\uFED4\\uFED5\\uFED6\\uFED7\\uFED8\\uFED9\\uFEDA\\uFEDB\\uFEDC\\uFEDD\\uFEDE\\uFEDF\\uFEE0\\uFEE1\\uFEE2\\uFEE3\\uFEE4\\uFEE5\\uFEE6\\uFEE7\\uFEE8\\uFEE9\\uFEEA\\uFEEB\\uFEEC\\uFEED\\uFEEE\\uFEEF\\uFEF0\\uFEF1\\uFEF2\\uFEF3\\uFEF4\\uFEF5\\uFEF6\\uFEF7\\uFEF8\\uFEF9\\uFEFA\\uFEFB\\uFEFC\\uFF66\\uFF67\\uFF68\\uFF69\\uFF6A\\uFF6B\\uFF6C\\uFF6D\\uFF6E\\uFF6F\\uFF71\\uFF72\\uFF73\\uFF74\\uFF75\\uFF76\\uFF77\\uFF78\\uFF79\\uFF7A\\uFF7B\\uFF7C\\uFF7D\\uFF7E\\uFF7F\\uFF80\\uFF81\\uFF82\\uFF83\\uFF84\\uFF85\\uFF86\\uFF87\\uFF88\\uFF89\\uFF8A\\uFF8B\\uFF8C\\uFF8D\\uFF8E\\uFF8F\\uFF90\\uFF91\\uFF92\\uFF93\\uFF94\\uFF95\\uFF96\\uFF97\\uFF98\\uFF99\\uFF9A\\uFF9B\\uFF9C\\uFF9D\\uFFA0\\uFFA1\\uFFA2\\uFFA3\\uFFA4\\uFFA5\\uFFA6\\uFFA7\\uFFA8\\uFFA9\\uFFAA\\uFFAB\\uFFAC\\uFFAD\\uFFAE\\uFFAF\\uFFB0\\uFFB1\\uFFB2\\uFFB3\\uFFB4\\uFFB5\\uFFB6\\uFFB7\\uFFB8\\uFFB9\\uFFBA\\uFFBB\\uFFBC\\uFFBD\\uFFBE\\uFFC2\\uFFC3\\uFFC4\\uFFC5\\uFFC6\\uFFC7\\uFFCA\\uFFCB\\uFFCC\\uFFCD\\uFFCE\\uFFCF\\uFFD2\\uFFD3\\uFFD4\\uFFD5\\uFFD6\\uFFD7\\uFFDA\\uFFDB\\uFFDC]" },
        peg$c80 = /^[\u01C5\u01C8\u01CB\u01F2\u1F88\u1F89\u1F8A\u1F8B\u1F8C\u1F8D\u1F8E\u1F8F\u1F98\u1F99\u1F9A\u1F9B\u1F9C\u1F9D\u1F9E\u1F9F\u1FA8\u1FA9\u1FAA\u1FAB\u1FAC\u1FAD\u1FAE\u1FAF\u1FBC\u1FCC\u1FFC]/,
        peg$c81 = { type: "class", value: "[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88\\u1F89\\u1F8A\\u1F8B\\u1F8C\\u1F8D\\u1F8E\\u1F8F\\u1F98\\u1F99\\u1F9A\\u1F9B\\u1F9C\\u1F9D\\u1F9E\\u1F9F\\u1FA8\\u1FA9\\u1FAA\\u1FAB\\u1FAC\\u1FAD\\u1FAE\\u1FAF\\u1FBC\\u1FCC\\u1FFC]", description: "[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88\\u1F89\\u1F8A\\u1F8B\\u1F8C\\u1F8D\\u1F8E\\u1F8F\\u1F98\\u1F99\\u1F9A\\u1F9B\\u1F9C\\u1F9D\\u1F9E\\u1F9F\\u1FA8\\u1FA9\\u1FAA\\u1FAB\\u1FAC\\u1FAD\\u1FAE\\u1FAF\\u1FBC\\u1FCC\\u1FFC]" },
        peg$c82 = /^[ABCDEFGHIJKLMNOPQRSTUVWXYZ\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD8\xD9\xDA\xDB\xDC\xDD\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189\u018A\u018B\u018E\u018F\u0190\u0191\u0193\u0194\u0196\u0197\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1\u01B2\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6\u01F7\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243\u0244\u0245\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03CF\u03D2\u03D3\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD\u03FE\u03FF\u0400\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u040D\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0531\u0532\u0533\u0534\u0535\u0536\u0537\u0538\u0539\u053A\u053B\u053C\u053D\u053E\u053F\u0540\u0541\u0542\u0543\u0544\u0545\u0546\u0547\u0548\u0549\u054A\u054B\u054C\u054D\u054E\u054F\u0550\u0551\u0552\u0553\u0554\u0555\u0556\u10A0\u10A1\u10A2\u10A3\u10A4\u10A5\u10A6\u10A7\u10A8\u10A9\u10AA\u10AB\u10AC\u10AD\u10AE\u10AF\u10B0\u10B1\u10B2\u10B3\u10B4\u10B5\u10B6\u10B7\u10B8\u10B9\u10BA\u10BB\u10BC\u10BD\u10BE\u10BF\u10C0\u10C1\u10C2\u10C3\u10C4\u10C5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08\u1F09\u1F0A\u1F0B\u1F0C\u1F0D\u1F0E\u1F0F\u1F18\u1F19\u1F1A\u1F1B\u1F1C\u1F1D\u1F28\u1F29\u1F2A\u1F2B\u1F2C\u1F2D\u1F2E\u1F2F\u1F38\u1F39\u1F3A\u1F3B\u1F3C\u1F3D\u1F3E\u1F3F\u1F48\u1F49\u1F4A\u1F4B\u1F4C\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68\u1F69\u1F6A\u1F6B\u1F6C\u1F6D\u1F6E\u1F6F\u1FB8\u1FB9\u1FBA\u1FBB\u1FC8\u1FC9\u1FCA\u1FCB\u1FD8\u1FD9\u1FDA\u1FDB\u1FE8\u1FE9\u1FEA\u1FEB\u1FEC\u1FF8\u1FF9\u1FFA\u1FFB\u2102\u2107\u210B\u210C\u210D\u2110\u2111\u2112\u2115\u2119\u211A\u211B\u211C\u211D\u2124\u2126\u2128\u212A\u212B\u212C\u212D\u2130\u2131\u2132\u2133\u213E\u213F\u2145\u2183\u2C00\u2C01\u2C02\u2C03\u2C04\u2C05\u2C06\u2C07\u2C08\u2C09\u2C0A\u2C0B\u2C0C\u2C0D\u2C0E\u2C0F\u2C10\u2C11\u2C12\u2C13\u2C14\u2C15\u2C16\u2C17\u2C18\u2C19\u2C1A\u2C1B\u2C1C\u2C1D\u2C1E\u2C1F\u2C20\u2C21\u2C22\u2C23\u2C24\u2C25\u2C26\u2C27\u2C28\u2C29\u2C2A\u2C2B\u2C2C\u2C2D\u2C2E\u2C60\u2C62\u2C63\u2C64\u2C67\u2C69\u2C6B\u2C6D\u2C6E\u2C6F\u2C72\u2C75\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uFF21\uFF22\uFF23\uFF24\uFF25\uFF26\uFF27\uFF28\uFF29\uFF2A\uFF2B\uFF2C\uFF2D\uFF2E\uFF2F\uFF30\uFF31\uFF32\uFF33\uFF34\uFF35\uFF36\uFF37\uFF38\uFF39\uFF3A]/,
        peg$c83 = { type: "class", value: "[ABCDEFGHIJKLMNOPQRSTUVWXYZ\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC6\\xC7\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\\xD2\\xD3\\xD4\\xD5\\xD6\\xD8\\xD9\\xDA\\xDB\\xDC\\xDD\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189\\u018A\\u018B\\u018E\\u018F\\u0190\\u0191\\u0193\\u0194\\u0196\\u0197\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1\\u01B2\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6\\u01F7\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243\\u0244\\u0245\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u0386\\u0388\\u0389\\u038A\\u038C\\u038E\\u038F\\u0391\\u0392\\u0393\\u0394\\u0395\\u0396\\u0397\\u0398\\u0399\\u039A\\u039B\\u039C\\u039D\\u039E\\u039F\\u03A0\\u03A1\\u03A3\\u03A4\\u03A5\\u03A6\\u03A7\\u03A8\\u03A9\\u03AA\\u03AB\\u03CF\\u03D2\\u03D3\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD\\u03FE\\u03FF\\u0400\\u0401\\u0402\\u0403\\u0404\\u0405\\u0406\\u0407\\u0408\\u0409\\u040A\\u040B\\u040C\\u040D\\u040E\\u040F\\u0410\\u0411\\u0412\\u0413\\u0414\\u0415\\u0416\\u0417\\u0418\\u0419\\u041A\\u041B\\u041C\\u041D\\u041E\\u041F\\u0420\\u0421\\u0422\\u0423\\u0424\\u0425\\u0426\\u0427\\u0428\\u0429\\u042A\\u042B\\u042C\\u042D\\u042E\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0531\\u0532\\u0533\\u0534\\u0535\\u0536\\u0537\\u0538\\u0539\\u053A\\u053B\\u053C\\u053D\\u053E\\u053F\\u0540\\u0541\\u0542\\u0543\\u0544\\u0545\\u0546\\u0547\\u0548\\u0549\\u054A\\u054B\\u054C\\u054D\\u054E\\u054F\\u0550\\u0551\\u0552\\u0553\\u0554\\u0555\\u0556\\u10A0\\u10A1\\u10A2\\u10A3\\u10A4\\u10A5\\u10A6\\u10A7\\u10A8\\u10A9\\u10AA\\u10AB\\u10AC\\u10AD\\u10AE\\u10AF\\u10B0\\u10B1\\u10B2\\u10B3\\u10B4\\u10B5\\u10B6\\u10B7\\u10B8\\u10B9\\u10BA\\u10BB\\u10BC\\u10BD\\u10BE\\u10BF\\u10C0\\u10C1\\u10C2\\u10C3\\u10C4\\u10C5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08\\u1F09\\u1F0A\\u1F0B\\u1F0C\\u1F0D\\u1F0E\\u1F0F\\u1F18\\u1F19\\u1F1A\\u1F1B\\u1F1C\\u1F1D\\u1F28\\u1F29\\u1F2A\\u1F2B\\u1F2C\\u1F2D\\u1F2E\\u1F2F\\u1F38\\u1F39\\u1F3A\\u1F3B\\u1F3C\\u1F3D\\u1F3E\\u1F3F\\u1F48\\u1F49\\u1F4A\\u1F4B\\u1F4C\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68\\u1F69\\u1F6A\\u1F6B\\u1F6C\\u1F6D\\u1F6E\\u1F6F\\u1FB8\\u1FB9\\u1FBA\\u1FBB\\u1FC8\\u1FC9\\u1FCA\\u1FCB\\u1FD8\\u1FD9\\u1FDA\\u1FDB\\u1FE8\\u1FE9\\u1FEA\\u1FEB\\u1FEC\\u1FF8\\u1FF9\\u1FFA\\u1FFB\\u2102\\u2107\\u210B\\u210C\\u210D\\u2110\\u2111\\u2112\\u2115\\u2119\\u211A\\u211B\\u211C\\u211D\\u2124\\u2126\\u2128\\u212A\\u212B\\u212C\\u212D\\u2130\\u2131\\u2132\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00\\u2C01\\u2C02\\u2C03\\u2C04\\u2C05\\u2C06\\u2C07\\u2C08\\u2C09\\u2C0A\\u2C0B\\u2C0C\\u2C0D\\u2C0E\\u2C0F\\u2C10\\u2C11\\u2C12\\u2C13\\u2C14\\u2C15\\u2C16\\u2C17\\u2C18\\u2C19\\u2C1A\\u2C1B\\u2C1C\\u2C1D\\u2C1E\\u2C1F\\u2C20\\u2C21\\u2C22\\u2C23\\u2C24\\u2C25\\u2C26\\u2C27\\u2C28\\u2C29\\u2C2A\\u2C2B\\u2C2C\\u2C2D\\u2C2E\\u2C60\\u2C62\\u2C63\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D\\u2C6E\\u2C6F\\u2C72\\u2C75\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uFF21\\uFF22\\uFF23\\uFF24\\uFF25\\uFF26\\uFF27\\uFF28\\uFF29\\uFF2A\\uFF2B\\uFF2C\\uFF2D\\uFF2E\\uFF2F\\uFF30\\uFF31\\uFF32\\uFF33\\uFF34\\uFF35\\uFF36\\uFF37\\uFF38\\uFF39\\uFF3A]", description: "[ABCDEFGHIJKLMNOPQRSTUVWXYZ\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC6\\xC7\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\\xD2\\xD3\\xD4\\xD5\\xD6\\xD8\\xD9\\xDA\\xDB\\xDC\\xDD\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189\\u018A\\u018B\\u018E\\u018F\\u0190\\u0191\\u0193\\u0194\\u0196\\u0197\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1\\u01B2\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6\\u01F7\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243\\u0244\\u0245\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u0386\\u0388\\u0389\\u038A\\u038C\\u038E\\u038F\\u0391\\u0392\\u0393\\u0394\\u0395\\u0396\\u0397\\u0398\\u0399\\u039A\\u039B\\u039C\\u039D\\u039E\\u039F\\u03A0\\u03A1\\u03A3\\u03A4\\u03A5\\u03A6\\u03A7\\u03A8\\u03A9\\u03AA\\u03AB\\u03CF\\u03D2\\u03D3\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD\\u03FE\\u03FF\\u0400\\u0401\\u0402\\u0403\\u0404\\u0405\\u0406\\u0407\\u0408\\u0409\\u040A\\u040B\\u040C\\u040D\\u040E\\u040F\\u0410\\u0411\\u0412\\u0413\\u0414\\u0415\\u0416\\u0417\\u0418\\u0419\\u041A\\u041B\\u041C\\u041D\\u041E\\u041F\\u0420\\u0421\\u0422\\u0423\\u0424\\u0425\\u0426\\u0427\\u0428\\u0429\\u042A\\u042B\\u042C\\u042D\\u042E\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0531\\u0532\\u0533\\u0534\\u0535\\u0536\\u0537\\u0538\\u0539\\u053A\\u053B\\u053C\\u053D\\u053E\\u053F\\u0540\\u0541\\u0542\\u0543\\u0544\\u0545\\u0546\\u0547\\u0548\\u0549\\u054A\\u054B\\u054C\\u054D\\u054E\\u054F\\u0550\\u0551\\u0552\\u0553\\u0554\\u0555\\u0556\\u10A0\\u10A1\\u10A2\\u10A3\\u10A4\\u10A5\\u10A6\\u10A7\\u10A8\\u10A9\\u10AA\\u10AB\\u10AC\\u10AD\\u10AE\\u10AF\\u10B0\\u10B1\\u10B2\\u10B3\\u10B4\\u10B5\\u10B6\\u10B7\\u10B8\\u10B9\\u10BA\\u10BB\\u10BC\\u10BD\\u10BE\\u10BF\\u10C0\\u10C1\\u10C2\\u10C3\\u10C4\\u10C5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08\\u1F09\\u1F0A\\u1F0B\\u1F0C\\u1F0D\\u1F0E\\u1F0F\\u1F18\\u1F19\\u1F1A\\u1F1B\\u1F1C\\u1F1D\\u1F28\\u1F29\\u1F2A\\u1F2B\\u1F2C\\u1F2D\\u1F2E\\u1F2F\\u1F38\\u1F39\\u1F3A\\u1F3B\\u1F3C\\u1F3D\\u1F3E\\u1F3F\\u1F48\\u1F49\\u1F4A\\u1F4B\\u1F4C\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68\\u1F69\\u1F6A\\u1F6B\\u1F6C\\u1F6D\\u1F6E\\u1F6F\\u1FB8\\u1FB9\\u1FBA\\u1FBB\\u1FC8\\u1FC9\\u1FCA\\u1FCB\\u1FD8\\u1FD9\\u1FDA\\u1FDB\\u1FE8\\u1FE9\\u1FEA\\u1FEB\\u1FEC\\u1FF8\\u1FF9\\u1FFA\\u1FFB\\u2102\\u2107\\u210B\\u210C\\u210D\\u2110\\u2111\\u2112\\u2115\\u2119\\u211A\\u211B\\u211C\\u211D\\u2124\\u2126\\u2128\\u212A\\u212B\\u212C\\u212D\\u2130\\u2131\\u2132\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00\\u2C01\\u2C02\\u2C03\\u2C04\\u2C05\\u2C06\\u2C07\\u2C08\\u2C09\\u2C0A\\u2C0B\\u2C0C\\u2C0D\\u2C0E\\u2C0F\\u2C10\\u2C11\\u2C12\\u2C13\\u2C14\\u2C15\\u2C16\\u2C17\\u2C18\\u2C19\\u2C1A\\u2C1B\\u2C1C\\u2C1D\\u2C1E\\u2C1F\\u2C20\\u2C21\\u2C22\\u2C23\\u2C24\\u2C25\\u2C26\\u2C27\\u2C28\\u2C29\\u2C2A\\u2C2B\\u2C2C\\u2C2D\\u2C2E\\u2C60\\u2C62\\u2C63\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D\\u2C6E\\u2C6F\\u2C72\\u2C75\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uFF21\\uFF22\\uFF23\\uFF24\\uFF25\\uFF26\\uFF27\\uFF28\\uFF29\\uFF2A\\uFF2B\\uFF2C\\uFF2D\\uFF2E\\uFF2F\\uFF30\\uFF31\\uFF32\\uFF33\\uFF34\\uFF35\\uFF36\\uFF37\\uFF38\\uFF39\\uFF3A]" },
        peg$c84 = /^[\u0903\u093E\u093F\u0940\u0949\u094A\u094B\u094C\u0982\u0983\u09BE\u09BF\u09C0\u09C7\u09C8\u09CB\u09CC\u09D7\u0A03\u0A3E\u0A3F\u0A40\u0A83\u0ABE\u0ABF\u0AC0\u0AC9\u0ACB\u0ACC\u0B02\u0B03\u0B3E\u0B40\u0B47\u0B48\u0B4B\u0B4C\u0B57\u0BBE\u0BBF\u0BC1\u0BC2\u0BC6\u0BC7\u0BC8\u0BCA\u0BCB\u0BCC\u0BD7\u0C01\u0C02\u0C03\u0C41\u0C42\u0C43\u0C44\u0C82\u0C83\u0CBE\u0CC0\u0CC1\u0CC2\u0CC3\u0CC4\u0CC7\u0CC8\u0CCA\u0CCB\u0CD5\u0CD6\u0D02\u0D03\u0D3E\u0D3F\u0D40\u0D46\u0D47\u0D48\u0D4A\u0D4B\u0D4C\u0D57\u0D82\u0D83\u0DCF\u0DD0\u0DD1\u0DD8\u0DD9\u0DDA\u0DDB\u0DDC\u0DDD\u0DDE\u0DDF\u0DF2\u0DF3\u0F3E\u0F3F\u0F7F\u102B\u102C\u1031\u1038\u103B\u103C\u1056\u1057\u1062\u1063\u1064\u1067\u1068\u1069\u106A\u106B\u106C\u106D\u1083\u1084\u1087\u1088\u1089\u108A\u108B\u108C\u108F\u17B6\u17BE\u17BF\u17C0\u17C1\u17C2\u17C3\u17C4\u17C5\u17C7\u17C8\u1923\u1924\u1925\u1926\u1929\u192A\u192B\u1930\u1931\u1933\u1934\u1935\u1936\u1937\u1938\u19B0\u19B1\u19B2\u19B3\u19B4\u19B5\u19B6\u19B7\u19B8\u19B9\u19BA\u19BB\u19BC\u19BD\u19BE\u19BF\u19C0\u19C8\u19C9\u1A19\u1A1A\u1A1B\u1B04\u1B35\u1B3B\u1B3D\u1B3E\u1B3F\u1B40\u1B41\u1B43\u1B44\u1B82\u1BA1\u1BA6\u1BA7\u1BAA\u1C24\u1C25\u1C26\u1C27\u1C28\u1C29\u1C2A\u1C2B\u1C34\u1C35\uA823\uA824\uA827\uA880\uA881\uA8B4\uA8B5\uA8B6\uA8B7\uA8B8\uA8B9\uA8BA\uA8BB\uA8BC\uA8BD\uA8BE\uA8BF\uA8C0\uA8C1\uA8C2\uA8C3\uA952\uA953\uAA2F\uAA30\uAA33\uAA34\uAA4D]/,
        peg$c85 = { type: "class", value: "[\\u0903\\u093E\\u093F\\u0940\\u0949\\u094A\\u094B\\u094C\\u0982\\u0983\\u09BE\\u09BF\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E\\u0A3F\\u0A40\\u0A83\\u0ABE\\u0ABF\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6\\u0BC7\\u0BC8\\u0BCA\\u0BCB\\u0BCC\\u0BD7\\u0C01\\u0C02\\u0C03\\u0C41\\u0C42\\u0C43\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0\\u0CC1\\u0CC2\\u0CC3\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E\\u0D3F\\u0D40\\u0D46\\u0D47\\u0D48\\u0D4A\\u0D4B\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF\\u0DD0\\u0DD1\\u0DD8\\u0DD9\\u0DDA\\u0DDB\\u0DDC\\u0DDD\\u0DDE\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062\\u1063\\u1064\\u1067\\u1068\\u1069\\u106A\\u106B\\u106C\\u106D\\u1083\\u1084\\u1087\\u1088\\u1089\\u108A\\u108B\\u108C\\u108F\\u17B6\\u17BE\\u17BF\\u17C0\\u17C1\\u17C2\\u17C3\\u17C4\\u17C5\\u17C7\\u17C8\\u1923\\u1924\\u1925\\u1926\\u1929\\u192A\\u192B\\u1930\\u1931\\u1933\\u1934\\u1935\\u1936\\u1937\\u1938\\u19B0\\u19B1\\u19B2\\u19B3\\u19B4\\u19B5\\u19B6\\u19B7\\u19B8\\u19B9\\u19BA\\u19BB\\u19BC\\u19BD\\u19BE\\u19BF\\u19C0\\u19C8\\u19C9\\u1A19\\u1A1A\\u1A1B\\u1B04\\u1B35\\u1B3B\\u1B3D\\u1B3E\\u1B3F\\u1B40\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24\\u1C25\\u1C26\\u1C27\\u1C28\\u1C29\\u1C2A\\u1C2B\\u1C34\\u1C35\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4\\uA8B5\\uA8B6\\uA8B7\\uA8B8\\uA8B9\\uA8BA\\uA8BB\\uA8BC\\uA8BD\\uA8BE\\uA8BF\\uA8C0\\uA8C1\\uA8C2\\uA8C3\\uA952\\uA953\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D]", description: "[\\u0903\\u093E\\u093F\\u0940\\u0949\\u094A\\u094B\\u094C\\u0982\\u0983\\u09BE\\u09BF\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E\\u0A3F\\u0A40\\u0A83\\u0ABE\\u0ABF\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6\\u0BC7\\u0BC8\\u0BCA\\u0BCB\\u0BCC\\u0BD7\\u0C01\\u0C02\\u0C03\\u0C41\\u0C42\\u0C43\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0\\u0CC1\\u0CC2\\u0CC3\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E\\u0D3F\\u0D40\\u0D46\\u0D47\\u0D48\\u0D4A\\u0D4B\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF\\u0DD0\\u0DD1\\u0DD8\\u0DD9\\u0DDA\\u0DDB\\u0DDC\\u0DDD\\u0DDE\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062\\u1063\\u1064\\u1067\\u1068\\u1069\\u106A\\u106B\\u106C\\u106D\\u1083\\u1084\\u1087\\u1088\\u1089\\u108A\\u108B\\u108C\\u108F\\u17B6\\u17BE\\u17BF\\u17C0\\u17C1\\u17C2\\u17C3\\u17C4\\u17C5\\u17C7\\u17C8\\u1923\\u1924\\u1925\\u1926\\u1929\\u192A\\u192B\\u1930\\u1931\\u1933\\u1934\\u1935\\u1936\\u1937\\u1938\\u19B0\\u19B1\\u19B2\\u19B3\\u19B4\\u19B5\\u19B6\\u19B7\\u19B8\\u19B9\\u19BA\\u19BB\\u19BC\\u19BD\\u19BE\\u19BF\\u19C0\\u19C8\\u19C9\\u1A19\\u1A1A\\u1A1B\\u1B04\\u1B35\\u1B3B\\u1B3D\\u1B3E\\u1B3F\\u1B40\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24\\u1C25\\u1C26\\u1C27\\u1C28\\u1C29\\u1C2A\\u1C2B\\u1C34\\u1C35\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4\\uA8B5\\uA8B6\\uA8B7\\uA8B8\\uA8B9\\uA8BA\\uA8BB\\uA8BC\\uA8BD\\uA8BE\\uA8BF\\uA8C0\\uA8C1\\uA8C2\\uA8C3\\uA952\\uA953\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D]" },
        peg$c86 = /^[\u0300\u0301\u0302\u0303\u0304\u0305\u0306\u0307\u0308\u0309\u030A\u030B\u030C\u030D\u030E\u030F\u0310\u0311\u0312\u0313\u0314\u0315\u0316\u0317\u0318\u0319\u031A\u031B\u031C\u031D\u031E\u031F\u0320\u0321\u0322\u0323\u0324\u0325\u0326\u0327\u0328\u0329\u032A\u032B\u032C\u032D\u032E\u032F\u0330\u0331\u0332\u0333\u0334\u0335\u0336\u0337\u0338\u0339\u033A\u033B\u033C\u033D\u033E\u033F\u0340\u0341\u0342\u0343\u0344\u0345\u0346\u0347\u0348\u0349\u034A\u034B\u034C\u034D\u034E\u034F\u0350\u0351\u0352\u0353\u0354\u0355\u0356\u0357\u0358\u0359\u035A\u035B\u035C\u035D\u035E\u035F\u0360\u0361\u0362\u0363\u0364\u0365\u0366\u0367\u0368\u0369\u036A\u036B\u036C\u036D\u036E\u036F\u0483\u0484\u0485\u0486\u0487\u0591\u0592\u0593\u0594\u0595\u0596\u0597\u0598\u0599\u059A\u059B\u059C\u059D\u059E\u059F\u05A0\u05A1\u05A2\u05A3\u05A4\u05A5\u05A6\u05A7\u05A8\u05A9\u05AA\u05AB\u05AC\u05AD\u05AE\u05AF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610\u0611\u0612\u0613\u0614\u0615\u0616\u0617\u0618\u0619\u061A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\u0653\u0654\u0655\u0656\u0657\u0658\u0659\u065A\u065B\u065C\u065D\u065E\u0670\u06D6\u06D7\u06D8\u06D9\u06DA\u06DB\u06DC\u06DF\u06E0\u06E1\u06E2\u06E3\u06E4\u06E7\u06E8\u06EA\u06EB\u06EC\u06ED\u0711\u0730\u0731\u0732\u0733\u0734\u0735\u0736\u0737\u0738\u0739\u073A\u073B\u073C\u073D\u073E\u073F\u0740\u0741\u0742\u0743\u0744\u0745\u0746\u0747\u0748\u0749\u074A\u07A6\u07A7\u07A8\u07A9\u07AA\u07AB\u07AC\u07AD\u07AE\u07AF\u07B0\u07EB\u07EC\u07ED\u07EE\u07EF\u07F0\u07F1\u07F2\u07F3\u0901\u0902\u093C\u0941\u0942\u0943\u0944\u0945\u0946\u0947\u0948\u094D\u0951\u0952\u0953\u0954\u0962\u0963\u0981\u09BC\u09C1\u09C2\u09C3\u09C4\u09CD\u09E2\u09E3\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B\u0A4C\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1\u0AC2\u0AC3\u0AC4\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0B01\u0B3C\u0B3F\u0B41\u0B42\u0B43\u0B44\u0B4D\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C3E\u0C3F\u0C40\u0C46\u0C47\u0C48\u0C4A\u0C4B\u0C4C\u0C4D\u0C55\u0C56\u0C62\u0C63\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D41\u0D42\u0D43\u0D44\u0D4D\u0D62\u0D63\u0DCA\u0DD2\u0DD3\u0DD4\u0DD6\u0E31\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0EB1\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBB\u0EBC\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71\u0F72\u0F73\u0F74\u0F75\u0F76\u0F77\u0F78\u0F79\u0F7A\u0F7B\u0F7C\u0F7D\u0F7E\u0F80\u0F81\u0F82\u0F83\u0F84\u0F86\u0F87\u0F90\u0F91\u0F92\u0F93\u0F94\u0F95\u0F96\u0F97\u0F99\u0F9A\u0F9B\u0F9C\u0F9D\u0F9E\u0F9F\u0FA0\u0FA1\u0FA2\u0FA3\u0FA4\u0FA5\u0FA6\u0FA7\u0FA8\u0FA9\u0FAA\u0FAB\u0FAC\u0FAD\u0FAE\u0FAF\u0FB0\u0FB1\u0FB2\u0FB3\u0FB4\u0FB5\u0FB6\u0FB7\u0FB8\u0FB9\u0FBA\u0FBB\u0FBC\u0FC6\u102D\u102E\u102F\u1030\u1032\u1033\u1034\u1035\u1036\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E\u105F\u1060\u1071\u1072\u1073\u1074\u1082\u1085\u1086\u108D\u135F\u1712\u1713\u1714\u1732\u1733\u1734\u1752\u1753\u1772\u1773\u17B7\u17B8\u17B9\u17BA\u17BB\u17BC\u17BD\u17C6\u17C9\u17CA\u17CB\u17CC\u17CD\u17CE\u17CF\u17D0\u17D1\u17D2\u17D3\u17DD\u180B\u180C\u180D\u18A9\u1920\u1921\u1922\u1927\u1928\u1932\u1939\u193A\u193B\u1A17\u1A18\u1B00\u1B01\u1B02\u1B03\u1B34\u1B36\u1B37\u1B38\u1B39\u1B3A\u1B3C\u1B42\u1B6B\u1B6C\u1B6D\u1B6E\u1B6F\u1B70\u1B71\u1B72\u1B73\u1B80\u1B81\u1BA2\u1BA3\u1BA4\u1BA5\u1BA8\u1BA9\u1C2C\u1C2D\u1C2E\u1C2F\u1C30\u1C31\u1C32\u1C33\u1C36\u1C37\u1DC0\u1DC1\u1DC2\u1DC3\u1DC4\u1DC5\u1DC6\u1DC7\u1DC8\u1DC9\u1DCA\u1DCB\u1DCC\u1DCD\u1DCE\u1DCF\u1DD0\u1DD1\u1DD2\u1DD3\u1DD4\u1DD5\u1DD6\u1DD7\u1DD8\u1DD9\u1DDA\u1DDB\u1DDC\u1DDD\u1DDE\u1DDF\u1DE0\u1DE1\u1DE2\u1DE3\u1DE4\u1DE5\u1DE6\u1DFE\u1DFF\u20D0\u20D1\u20D2\u20D3\u20D4\u20D5\u20D6\u20D7\u20D8\u20D9\u20DA\u20DB\u20DC\u20E1\u20E5\u20E6\u20E7\u20E8\u20E9\u20EA\u20EB\u20EC\u20ED\u20EE\u20EF\u20F0\u2DE0\u2DE1\u2DE2\u2DE3\u2DE4\u2DE5\u2DE6\u2DE7\u2DE8\u2DE9\u2DEA\u2DEB\u2DEC\u2DED\u2DEE\u2DEF\u2DF0\u2DF1\u2DF2\u2DF3\u2DF4\u2DF5\u2DF6\u2DF7\u2DF8\u2DF9\u2DFA\u2DFB\u2DFC\u2DFD\u2DFE\u2DFF\u302A\u302B\u302C\u302D\u302E\u302F\u3099\u309A\uA66F\uA67C\uA67D\uA802\uA806\uA80B\uA825\uA826\uA8C4\uA926\uA927\uA928\uA929\uA92A\uA92B\uA92C\uA92D\uA947\uA948\uA949\uA94A\uA94B\uA94C\uA94D\uA94E\uA94F\uA950\uA951\uAA29\uAA2A\uAA2B\uAA2C\uAA2D\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uFB1E\uFE00\uFE01\uFE02\uFE03\uFE04\uFE05\uFE06\uFE07\uFE08\uFE09\uFE0A\uFE0B\uFE0C\uFE0D\uFE0E\uFE0F\uFE20\uFE21\uFE22\uFE23\uFE24\uFE25\uFE26]/,
        peg$c87 = { type: "class", value: "[\\u0300\\u0301\\u0302\\u0303\\u0304\\u0305\\u0306\\u0307\\u0308\\u0309\\u030A\\u030B\\u030C\\u030D\\u030E\\u030F\\u0310\\u0311\\u0312\\u0313\\u0314\\u0315\\u0316\\u0317\\u0318\\u0319\\u031A\\u031B\\u031C\\u031D\\u031E\\u031F\\u0320\\u0321\\u0322\\u0323\\u0324\\u0325\\u0326\\u0327\\u0328\\u0329\\u032A\\u032B\\u032C\\u032D\\u032E\\u032F\\u0330\\u0331\\u0332\\u0333\\u0334\\u0335\\u0336\\u0337\\u0338\\u0339\\u033A\\u033B\\u033C\\u033D\\u033E\\u033F\\u0340\\u0341\\u0342\\u0343\\u0344\\u0345\\u0346\\u0347\\u0348\\u0349\\u034A\\u034B\\u034C\\u034D\\u034E\\u034F\\u0350\\u0351\\u0352\\u0353\\u0354\\u0355\\u0356\\u0357\\u0358\\u0359\\u035A\\u035B\\u035C\\u035D\\u035E\\u035F\\u0360\\u0361\\u0362\\u0363\\u0364\\u0365\\u0366\\u0367\\u0368\\u0369\\u036A\\u036B\\u036C\\u036D\\u036E\\u036F\\u0483\\u0484\\u0485\\u0486\\u0487\\u0591\\u0592\\u0593\\u0594\\u0595\\u0596\\u0597\\u0598\\u0599\\u059A\\u059B\\u059C\\u059D\\u059E\\u059F\\u05A0\\u05A1\\u05A2\\u05A3\\u05A4\\u05A5\\u05A6\\u05A7\\u05A8\\u05A9\\u05AA\\u05AB\\u05AC\\u05AD\\u05AE\\u05AF\\u05B0\\u05B1\\u05B2\\u05B3\\u05B4\\u05B5\\u05B6\\u05B7\\u05B8\\u05B9\\u05BA\\u05BB\\u05BC\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610\\u0611\\u0612\\u0613\\u0614\\u0615\\u0616\\u0617\\u0618\\u0619\\u061A\\u064B\\u064C\\u064D\\u064E\\u064F\\u0650\\u0651\\u0652\\u0653\\u0654\\u0655\\u0656\\u0657\\u0658\\u0659\\u065A\\u065B\\u065C\\u065D\\u065E\\u0670\\u06D6\\u06D7\\u06D8\\u06D9\\u06DA\\u06DB\\u06DC\\u06DF\\u06E0\\u06E1\\u06E2\\u06E3\\u06E4\\u06E7\\u06E8\\u06EA\\u06EB\\u06EC\\u06ED\\u0711\\u0730\\u0731\\u0732\\u0733\\u0734\\u0735\\u0736\\u0737\\u0738\\u0739\\u073A\\u073B\\u073C\\u073D\\u073E\\u073F\\u0740\\u0741\\u0742\\u0743\\u0744\\u0745\\u0746\\u0747\\u0748\\u0749\\u074A\\u07A6\\u07A7\\u07A8\\u07A9\\u07AA\\u07AB\\u07AC\\u07AD\\u07AE\\u07AF\\u07B0\\u07EB\\u07EC\\u07ED\\u07EE\\u07EF\\u07F0\\u07F1\\u07F2\\u07F3\\u0901\\u0902\\u093C\\u0941\\u0942\\u0943\\u0944\\u0945\\u0946\\u0947\\u0948\\u094D\\u0951\\u0952\\u0953\\u0954\\u0962\\u0963\\u0981\\u09BC\\u09C1\\u09C2\\u09C3\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1\\u0AC2\\u0AC3\\u0AC4\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41\\u0B42\\u0B43\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E\\u0C3F\\u0C40\\u0C46\\u0C47\\u0C48\\u0C4A\\u0C4B\\u0C4C\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41\\u0D42\\u0D43\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2\\u0DD3\\u0DD4\\u0DD6\\u0E31\\u0E34\\u0E35\\u0E36\\u0E37\\u0E38\\u0E39\\u0E3A\\u0E47\\u0E48\\u0E49\\u0E4A\\u0E4B\\u0E4C\\u0E4D\\u0E4E\\u0EB1\\u0EB4\\u0EB5\\u0EB6\\u0EB7\\u0EB8\\u0EB9\\u0EBB\\u0EBC\\u0EC8\\u0EC9\\u0ECA\\u0ECB\\u0ECC\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71\\u0F72\\u0F73\\u0F74\\u0F75\\u0F76\\u0F77\\u0F78\\u0F79\\u0F7A\\u0F7B\\u0F7C\\u0F7D\\u0F7E\\u0F80\\u0F81\\u0F82\\u0F83\\u0F84\\u0F86\\u0F87\\u0F90\\u0F91\\u0F92\\u0F93\\u0F94\\u0F95\\u0F96\\u0F97\\u0F99\\u0F9A\\u0F9B\\u0F9C\\u0F9D\\u0F9E\\u0F9F\\u0FA0\\u0FA1\\u0FA2\\u0FA3\\u0FA4\\u0FA5\\u0FA6\\u0FA7\\u0FA8\\u0FA9\\u0FAA\\u0FAB\\u0FAC\\u0FAD\\u0FAE\\u0FAF\\u0FB0\\u0FB1\\u0FB2\\u0FB3\\u0FB4\\u0FB5\\u0FB6\\u0FB7\\u0FB8\\u0FB9\\u0FBA\\u0FBB\\u0FBC\\u0FC6\\u102D\\u102E\\u102F\\u1030\\u1032\\u1033\\u1034\\u1035\\u1036\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E\\u105F\\u1060\\u1071\\u1072\\u1073\\u1074\\u1082\\u1085\\u1086\\u108D\\u135F\\u1712\\u1713\\u1714\\u1732\\u1733\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7\\u17B8\\u17B9\\u17BA\\u17BB\\u17BC\\u17BD\\u17C6\\u17C9\\u17CA\\u17CB\\u17CC\\u17CD\\u17CE\\u17CF\\u17D0\\u17D1\\u17D2\\u17D3\\u17DD\\u180B\\u180C\\u180D\\u18A9\\u1920\\u1921\\u1922\\u1927\\u1928\\u1932\\u1939\\u193A\\u193B\\u1A17\\u1A18\\u1B00\\u1B01\\u1B02\\u1B03\\u1B34\\u1B36\\u1B37\\u1B38\\u1B39\\u1B3A\\u1B3C\\u1B42\\u1B6B\\u1B6C\\u1B6D\\u1B6E\\u1B6F\\u1B70\\u1B71\\u1B72\\u1B73\\u1B80\\u1B81\\u1BA2\\u1BA3\\u1BA4\\u1BA5\\u1BA8\\u1BA9\\u1C2C\\u1C2D\\u1C2E\\u1C2F\\u1C30\\u1C31\\u1C32\\u1C33\\u1C36\\u1C37\\u1DC0\\u1DC1\\u1DC2\\u1DC3\\u1DC4\\u1DC5\\u1DC6\\u1DC7\\u1DC8\\u1DC9\\u1DCA\\u1DCB\\u1DCC\\u1DCD\\u1DCE\\u1DCF\\u1DD0\\u1DD1\\u1DD2\\u1DD3\\u1DD4\\u1DD5\\u1DD6\\u1DD7\\u1DD8\\u1DD9\\u1DDA\\u1DDB\\u1DDC\\u1DDD\\u1DDE\\u1DDF\\u1DE0\\u1DE1\\u1DE2\\u1DE3\\u1DE4\\u1DE5\\u1DE6\\u1DFE\\u1DFF\\u20D0\\u20D1\\u20D2\\u20D3\\u20D4\\u20D5\\u20D6\\u20D7\\u20D8\\u20D9\\u20DA\\u20DB\\u20DC\\u20E1\\u20E5\\u20E6\\u20E7\\u20E8\\u20E9\\u20EA\\u20EB\\u20EC\\u20ED\\u20EE\\u20EF\\u20F0\\u2DE0\\u2DE1\\u2DE2\\u2DE3\\u2DE4\\u2DE5\\u2DE6\\u2DE7\\u2DE8\\u2DE9\\u2DEA\\u2DEB\\u2DEC\\u2DED\\u2DEE\\u2DEF\\u2DF0\\u2DF1\\u2DF2\\u2DF3\\u2DF4\\u2DF5\\u2DF6\\u2DF7\\u2DF8\\u2DF9\\u2DFA\\u2DFB\\u2DFC\\u2DFD\\u2DFE\\u2DFF\\u302A\\u302B\\u302C\\u302D\\u302E\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA926\\uA927\\uA928\\uA929\\uA92A\\uA92B\\uA92C\\uA92D\\uA947\\uA948\\uA949\\uA94A\\uA94B\\uA94C\\uA94D\\uA94E\\uA94F\\uA950\\uA951\\uAA29\\uAA2A\\uAA2B\\uAA2C\\uAA2D\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uFB1E\\uFE00\\uFE01\\uFE02\\uFE03\\uFE04\\uFE05\\uFE06\\uFE07\\uFE08\\uFE09\\uFE0A\\uFE0B\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uFE20\\uFE21\\uFE22\\uFE23\\uFE24\\uFE25\\uFE26]", description: "[\\u0300\\u0301\\u0302\\u0303\\u0304\\u0305\\u0306\\u0307\\u0308\\u0309\\u030A\\u030B\\u030C\\u030D\\u030E\\u030F\\u0310\\u0311\\u0312\\u0313\\u0314\\u0315\\u0316\\u0317\\u0318\\u0319\\u031A\\u031B\\u031C\\u031D\\u031E\\u031F\\u0320\\u0321\\u0322\\u0323\\u0324\\u0325\\u0326\\u0327\\u0328\\u0329\\u032A\\u032B\\u032C\\u032D\\u032E\\u032F\\u0330\\u0331\\u0332\\u0333\\u0334\\u0335\\u0336\\u0337\\u0338\\u0339\\u033A\\u033B\\u033C\\u033D\\u033E\\u033F\\u0340\\u0341\\u0342\\u0343\\u0344\\u0345\\u0346\\u0347\\u0348\\u0349\\u034A\\u034B\\u034C\\u034D\\u034E\\u034F\\u0350\\u0351\\u0352\\u0353\\u0354\\u0355\\u0356\\u0357\\u0358\\u0359\\u035A\\u035B\\u035C\\u035D\\u035E\\u035F\\u0360\\u0361\\u0362\\u0363\\u0364\\u0365\\u0366\\u0367\\u0368\\u0369\\u036A\\u036B\\u036C\\u036D\\u036E\\u036F\\u0483\\u0484\\u0485\\u0486\\u0487\\u0591\\u0592\\u0593\\u0594\\u0595\\u0596\\u0597\\u0598\\u0599\\u059A\\u059B\\u059C\\u059D\\u059E\\u059F\\u05A0\\u05A1\\u05A2\\u05A3\\u05A4\\u05A5\\u05A6\\u05A7\\u05A8\\u05A9\\u05AA\\u05AB\\u05AC\\u05AD\\u05AE\\u05AF\\u05B0\\u05B1\\u05B2\\u05B3\\u05B4\\u05B5\\u05B6\\u05B7\\u05B8\\u05B9\\u05BA\\u05BB\\u05BC\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610\\u0611\\u0612\\u0613\\u0614\\u0615\\u0616\\u0617\\u0618\\u0619\\u061A\\u064B\\u064C\\u064D\\u064E\\u064F\\u0650\\u0651\\u0652\\u0653\\u0654\\u0655\\u0656\\u0657\\u0658\\u0659\\u065A\\u065B\\u065C\\u065D\\u065E\\u0670\\u06D6\\u06D7\\u06D8\\u06D9\\u06DA\\u06DB\\u06DC\\u06DF\\u06E0\\u06E1\\u06E2\\u06E3\\u06E4\\u06E7\\u06E8\\u06EA\\u06EB\\u06EC\\u06ED\\u0711\\u0730\\u0731\\u0732\\u0733\\u0734\\u0735\\u0736\\u0737\\u0738\\u0739\\u073A\\u073B\\u073C\\u073D\\u073E\\u073F\\u0740\\u0741\\u0742\\u0743\\u0744\\u0745\\u0746\\u0747\\u0748\\u0749\\u074A\\u07A6\\u07A7\\u07A8\\u07A9\\u07AA\\u07AB\\u07AC\\u07AD\\u07AE\\u07AF\\u07B0\\u07EB\\u07EC\\u07ED\\u07EE\\u07EF\\u07F0\\u07F1\\u07F2\\u07F3\\u0901\\u0902\\u093C\\u0941\\u0942\\u0943\\u0944\\u0945\\u0946\\u0947\\u0948\\u094D\\u0951\\u0952\\u0953\\u0954\\u0962\\u0963\\u0981\\u09BC\\u09C1\\u09C2\\u09C3\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1\\u0AC2\\u0AC3\\u0AC4\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41\\u0B42\\u0B43\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E\\u0C3F\\u0C40\\u0C46\\u0C47\\u0C48\\u0C4A\\u0C4B\\u0C4C\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41\\u0D42\\u0D43\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2\\u0DD3\\u0DD4\\u0DD6\\u0E31\\u0E34\\u0E35\\u0E36\\u0E37\\u0E38\\u0E39\\u0E3A\\u0E47\\u0E48\\u0E49\\u0E4A\\u0E4B\\u0E4C\\u0E4D\\u0E4E\\u0EB1\\u0EB4\\u0EB5\\u0EB6\\u0EB7\\u0EB8\\u0EB9\\u0EBB\\u0EBC\\u0EC8\\u0EC9\\u0ECA\\u0ECB\\u0ECC\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71\\u0F72\\u0F73\\u0F74\\u0F75\\u0F76\\u0F77\\u0F78\\u0F79\\u0F7A\\u0F7B\\u0F7C\\u0F7D\\u0F7E\\u0F80\\u0F81\\u0F82\\u0F83\\u0F84\\u0F86\\u0F87\\u0F90\\u0F91\\u0F92\\u0F93\\u0F94\\u0F95\\u0F96\\u0F97\\u0F99\\u0F9A\\u0F9B\\u0F9C\\u0F9D\\u0F9E\\u0F9F\\u0FA0\\u0FA1\\u0FA2\\u0FA3\\u0FA4\\u0FA5\\u0FA6\\u0FA7\\u0FA8\\u0FA9\\u0FAA\\u0FAB\\u0FAC\\u0FAD\\u0FAE\\u0FAF\\u0FB0\\u0FB1\\u0FB2\\u0FB3\\u0FB4\\u0FB5\\u0FB6\\u0FB7\\u0FB8\\u0FB9\\u0FBA\\u0FBB\\u0FBC\\u0FC6\\u102D\\u102E\\u102F\\u1030\\u1032\\u1033\\u1034\\u1035\\u1036\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E\\u105F\\u1060\\u1071\\u1072\\u1073\\u1074\\u1082\\u1085\\u1086\\u108D\\u135F\\u1712\\u1713\\u1714\\u1732\\u1733\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7\\u17B8\\u17B9\\u17BA\\u17BB\\u17BC\\u17BD\\u17C6\\u17C9\\u17CA\\u17CB\\u17CC\\u17CD\\u17CE\\u17CF\\u17D0\\u17D1\\u17D2\\u17D3\\u17DD\\u180B\\u180C\\u180D\\u18A9\\u1920\\u1921\\u1922\\u1927\\u1928\\u1932\\u1939\\u193A\\u193B\\u1A17\\u1A18\\u1B00\\u1B01\\u1B02\\u1B03\\u1B34\\u1B36\\u1B37\\u1B38\\u1B39\\u1B3A\\u1B3C\\u1B42\\u1B6B\\u1B6C\\u1B6D\\u1B6E\\u1B6F\\u1B70\\u1B71\\u1B72\\u1B73\\u1B80\\u1B81\\u1BA2\\u1BA3\\u1BA4\\u1BA5\\u1BA8\\u1BA9\\u1C2C\\u1C2D\\u1C2E\\u1C2F\\u1C30\\u1C31\\u1C32\\u1C33\\u1C36\\u1C37\\u1DC0\\u1DC1\\u1DC2\\u1DC3\\u1DC4\\u1DC5\\u1DC6\\u1DC7\\u1DC8\\u1DC9\\u1DCA\\u1DCB\\u1DCC\\u1DCD\\u1DCE\\u1DCF\\u1DD0\\u1DD1\\u1DD2\\u1DD3\\u1DD4\\u1DD5\\u1DD6\\u1DD7\\u1DD8\\u1DD9\\u1DDA\\u1DDB\\u1DDC\\u1DDD\\u1DDE\\u1DDF\\u1DE0\\u1DE1\\u1DE2\\u1DE3\\u1DE4\\u1DE5\\u1DE6\\u1DFE\\u1DFF\\u20D0\\u20D1\\u20D2\\u20D3\\u20D4\\u20D5\\u20D6\\u20D7\\u20D8\\u20D9\\u20DA\\u20DB\\u20DC\\u20E1\\u20E5\\u20E6\\u20E7\\u20E8\\u20E9\\u20EA\\u20EB\\u20EC\\u20ED\\u20EE\\u20EF\\u20F0\\u2DE0\\u2DE1\\u2DE2\\u2DE3\\u2DE4\\u2DE5\\u2DE6\\u2DE7\\u2DE8\\u2DE9\\u2DEA\\u2DEB\\u2DEC\\u2DED\\u2DEE\\u2DEF\\u2DF0\\u2DF1\\u2DF2\\u2DF3\\u2DF4\\u2DF5\\u2DF6\\u2DF7\\u2DF8\\u2DF9\\u2DFA\\u2DFB\\u2DFC\\u2DFD\\u2DFE\\u2DFF\\u302A\\u302B\\u302C\\u302D\\u302E\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA926\\uA927\\uA928\\uA929\\uA92A\\uA92B\\uA92C\\uA92D\\uA947\\uA948\\uA949\\uA94A\\uA94B\\uA94C\\uA94D\\uA94E\\uA94F\\uA950\\uA951\\uAA29\\uAA2A\\uAA2B\\uAA2C\\uAA2D\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uFB1E\\uFE00\\uFE01\\uFE02\\uFE03\\uFE04\\uFE05\\uFE06\\uFE07\\uFE08\\uFE09\\uFE0A\\uFE0B\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uFE20\\uFE21\\uFE22\\uFE23\\uFE24\\uFE25\\uFE26]" },
        peg$c88 = /^[0123456789\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\u06F0\u06F1\u06F2\u06F3\u06F4\u06F5\u06F6\u06F7\u06F8\u06F9\u07C0\u07C1\u07C2\u07C3\u07C4\u07C5\u07C6\u07C7\u07C8\u07C9\u0966\u0967\u0968\u0969\u096A\u096B\u096C\u096D\u096E\u096F\u09E6\u09E7\u09E8\u09E9\u09EA\u09EB\u09EC\u09ED\u09EE\u09EF\u0A66\u0A67\u0A68\u0A69\u0A6A\u0A6B\u0A6C\u0A6D\u0A6E\u0A6F\u0AE6\u0AE7\u0AE8\u0AE9\u0AEA\u0AEB\u0AEC\u0AED\u0AEE\u0AEF\u0B66\u0B67\u0B68\u0B69\u0B6A\u0B6B\u0B6C\u0B6D\u0B6E\u0B6F\u0BE6\u0BE7\u0BE8\u0BE9\u0BEA\u0BEB\u0BEC\u0BED\u0BEE\u0BEF\u0C66\u0C67\u0C68\u0C69\u0C6A\u0C6B\u0C6C\u0C6D\u0C6E\u0C6F\u0CE6\u0CE7\u0CE8\u0CE9\u0CEA\u0CEB\u0CEC\u0CED\u0CEE\u0CEF\u0D66\u0D67\u0D68\u0D69\u0D6A\u0D6B\u0D6C\u0D6D\u0D6E\u0D6F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\u0F20\u0F21\u0F22\u0F23\u0F24\u0F25\u0F26\u0F27\u0F28\u0F29\u1040\u1041\u1042\u1043\u1044\u1045\u1046\u1047\u1048\u1049\u1090\u1091\u1092\u1093\u1094\u1095\u1096\u1097\u1098\u1099\u17E0\u17E1\u17E2\u17E3\u17E4\u17E5\u17E6\u17E7\u17E8\u17E9\u1810\u1811\u1812\u1813\u1814\u1815\u1816\u1817\u1818\u1819\u1946\u1947\u1948\u1949\u194A\u194B\u194C\u194D\u194E\u194F\u19D0\u19D1\u19D2\u19D3\u19D4\u19D5\u19D6\u19D7\u19D8\u19D9\u1B50\u1B51\u1B52\u1B53\u1B54\u1B55\u1B56\u1B57\u1B58\u1B59\u1BB0\u1BB1\u1BB2\u1BB3\u1BB4\u1BB5\u1BB6\u1BB7\u1BB8\u1BB9\u1C40\u1C41\u1C42\u1C43\u1C44\u1C45\u1C46\u1C47\u1C48\u1C49\u1C50\u1C51\u1C52\u1C53\u1C54\u1C55\u1C56\u1C57\u1C58\u1C59\uA620\uA621\uA622\uA623\uA624\uA625\uA626\uA627\uA628\uA629\uA8D0\uA8D1\uA8D2\uA8D3\uA8D4\uA8D5\uA8D6\uA8D7\uA8D8\uA8D9\uA900\uA901\uA902\uA903\uA904\uA905\uA906\uA907\uA908\uA909\uAA50\uAA51\uAA52\uAA53\uAA54\uAA55\uAA56\uAA57\uAA58\uAA59\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19]/,
        peg$c89 = { type: "class", value: "[0123456789\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669\\u06F0\\u06F1\\u06F2\\u06F3\\u06F4\\u06F5\\u06F6\\u06F7\\u06F8\\u06F9\\u07C0\\u07C1\\u07C2\\u07C3\\u07C4\\u07C5\\u07C6\\u07C7\\u07C8\\u07C9\\u0966\\u0967\\u0968\\u0969\\u096A\\u096B\\u096C\\u096D\\u096E\\u096F\\u09E6\\u09E7\\u09E8\\u09E9\\u09EA\\u09EB\\u09EC\\u09ED\\u09EE\\u09EF\\u0A66\\u0A67\\u0A68\\u0A69\\u0A6A\\u0A6B\\u0A6C\\u0A6D\\u0A6E\\u0A6F\\u0AE6\\u0AE7\\u0AE8\\u0AE9\\u0AEA\\u0AEB\\u0AEC\\u0AED\\u0AEE\\u0AEF\\u0B66\\u0B67\\u0B68\\u0B69\\u0B6A\\u0B6B\\u0B6C\\u0B6D\\u0B6E\\u0B6F\\u0BE6\\u0BE7\\u0BE8\\u0BE9\\u0BEA\\u0BEB\\u0BEC\\u0BED\\u0BEE\\u0BEF\\u0C66\\u0C67\\u0C68\\u0C69\\u0C6A\\u0C6B\\u0C6C\\u0C6D\\u0C6E\\u0C6F\\u0CE6\\u0CE7\\u0CE8\\u0CE9\\u0CEA\\u0CEB\\u0CEC\\u0CED\\u0CEE\\u0CEF\\u0D66\\u0D67\\u0D68\\u0D69\\u0D6A\\u0D6B\\u0D6C\\u0D6D\\u0D6E\\u0D6F\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\\u0ED0\\u0ED1\\u0ED2\\u0ED3\\u0ED4\\u0ED5\\u0ED6\\u0ED7\\u0ED8\\u0ED9\\u0F20\\u0F21\\u0F22\\u0F23\\u0F24\\u0F25\\u0F26\\u0F27\\u0F28\\u0F29\\u1040\\u1041\\u1042\\u1043\\u1044\\u1045\\u1046\\u1047\\u1048\\u1049\\u1090\\u1091\\u1092\\u1093\\u1094\\u1095\\u1096\\u1097\\u1098\\u1099\\u17E0\\u17E1\\u17E2\\u17E3\\u17E4\\u17E5\\u17E6\\u17E7\\u17E8\\u17E9\\u1810\\u1811\\u1812\\u1813\\u1814\\u1815\\u1816\\u1817\\u1818\\u1819\\u1946\\u1947\\u1948\\u1949\\u194A\\u194B\\u194C\\u194D\\u194E\\u194F\\u19D0\\u19D1\\u19D2\\u19D3\\u19D4\\u19D5\\u19D6\\u19D7\\u19D8\\u19D9\\u1B50\\u1B51\\u1B52\\u1B53\\u1B54\\u1B55\\u1B56\\u1B57\\u1B58\\u1B59\\u1BB0\\u1BB1\\u1BB2\\u1BB3\\u1BB4\\u1BB5\\u1BB6\\u1BB7\\u1BB8\\u1BB9\\u1C40\\u1C41\\u1C42\\u1C43\\u1C44\\u1C45\\u1C46\\u1C47\\u1C48\\u1C49\\u1C50\\u1C51\\u1C52\\u1C53\\u1C54\\u1C55\\u1C56\\u1C57\\u1C58\\u1C59\\uA620\\uA621\\uA622\\uA623\\uA624\\uA625\\uA626\\uA627\\uA628\\uA629\\uA8D0\\uA8D1\\uA8D2\\uA8D3\\uA8D4\\uA8D5\\uA8D6\\uA8D7\\uA8D8\\uA8D9\\uA900\\uA901\\uA902\\uA903\\uA904\\uA905\\uA906\\uA907\\uA908\\uA909\\uAA50\\uAA51\\uAA52\\uAA53\\uAA54\\uAA55\\uAA56\\uAA57\\uAA58\\uAA59\\uFF10\\uFF11\\uFF12\\uFF13\\uFF14\\uFF15\\uFF16\\uFF17\\uFF18\\uFF19]", description: "[0123456789\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669\\u06F0\\u06F1\\u06F2\\u06F3\\u06F4\\u06F5\\u06F6\\u06F7\\u06F8\\u06F9\\u07C0\\u07C1\\u07C2\\u07C3\\u07C4\\u07C5\\u07C6\\u07C7\\u07C8\\u07C9\\u0966\\u0967\\u0968\\u0969\\u096A\\u096B\\u096C\\u096D\\u096E\\u096F\\u09E6\\u09E7\\u09E8\\u09E9\\u09EA\\u09EB\\u09EC\\u09ED\\u09EE\\u09EF\\u0A66\\u0A67\\u0A68\\u0A69\\u0A6A\\u0A6B\\u0A6C\\u0A6D\\u0A6E\\u0A6F\\u0AE6\\u0AE7\\u0AE8\\u0AE9\\u0AEA\\u0AEB\\u0AEC\\u0AED\\u0AEE\\u0AEF\\u0B66\\u0B67\\u0B68\\u0B69\\u0B6A\\u0B6B\\u0B6C\\u0B6D\\u0B6E\\u0B6F\\u0BE6\\u0BE7\\u0BE8\\u0BE9\\u0BEA\\u0BEB\\u0BEC\\u0BED\\u0BEE\\u0BEF\\u0C66\\u0C67\\u0C68\\u0C69\\u0C6A\\u0C6B\\u0C6C\\u0C6D\\u0C6E\\u0C6F\\u0CE6\\u0CE7\\u0CE8\\u0CE9\\u0CEA\\u0CEB\\u0CEC\\u0CED\\u0CEE\\u0CEF\\u0D66\\u0D67\\u0D68\\u0D69\\u0D6A\\u0D6B\\u0D6C\\u0D6D\\u0D6E\\u0D6F\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\\u0ED0\\u0ED1\\u0ED2\\u0ED3\\u0ED4\\u0ED5\\u0ED6\\u0ED7\\u0ED8\\u0ED9\\u0F20\\u0F21\\u0F22\\u0F23\\u0F24\\u0F25\\u0F26\\u0F27\\u0F28\\u0F29\\u1040\\u1041\\u1042\\u1043\\u1044\\u1045\\u1046\\u1047\\u1048\\u1049\\u1090\\u1091\\u1092\\u1093\\u1094\\u1095\\u1096\\u1097\\u1098\\u1099\\u17E0\\u17E1\\u17E2\\u17E3\\u17E4\\u17E5\\u17E6\\u17E7\\u17E8\\u17E9\\u1810\\u1811\\u1812\\u1813\\u1814\\u1815\\u1816\\u1817\\u1818\\u1819\\u1946\\u1947\\u1948\\u1949\\u194A\\u194B\\u194C\\u194D\\u194E\\u194F\\u19D0\\u19D1\\u19D2\\u19D3\\u19D4\\u19D5\\u19D6\\u19D7\\u19D8\\u19D9\\u1B50\\u1B51\\u1B52\\u1B53\\u1B54\\u1B55\\u1B56\\u1B57\\u1B58\\u1B59\\u1BB0\\u1BB1\\u1BB2\\u1BB3\\u1BB4\\u1BB5\\u1BB6\\u1BB7\\u1BB8\\u1BB9\\u1C40\\u1C41\\u1C42\\u1C43\\u1C44\\u1C45\\u1C46\\u1C47\\u1C48\\u1C49\\u1C50\\u1C51\\u1C52\\u1C53\\u1C54\\u1C55\\u1C56\\u1C57\\u1C58\\u1C59\\uA620\\uA621\\uA622\\uA623\\uA624\\uA625\\uA626\\uA627\\uA628\\uA629\\uA8D0\\uA8D1\\uA8D2\\uA8D3\\uA8D4\\uA8D5\\uA8D6\\uA8D7\\uA8D8\\uA8D9\\uA900\\uA901\\uA902\\uA903\\uA904\\uA905\\uA906\\uA907\\uA908\\uA909\\uAA50\\uAA51\\uAA52\\uAA53\\uAA54\\uAA55\\uAA56\\uAA57\\uAA58\\uAA59\\uFF10\\uFF11\\uFF12\\uFF13\\uFF14\\uFF15\\uFF16\\uFF17\\uFF18\\uFF19]" },
        peg$c90 = /^[\u16EE\u16EF\u16F0\u2160\u2161\u2162\u2163\u2164\u2165\u2166\u2167\u2168\u2169\u216A\u216B\u216C\u216D\u216E\u216F\u2170\u2171\u2172\u2173\u2174\u2175\u2176\u2177\u2178\u2179\u217A\u217B\u217C\u217D\u217E\u217F\u2180\u2181\u2182\u2185\u2186\u2187\u2188\u3007\u3021\u3022\u3023\u3024\u3025\u3026\u3027\u3028\u3029\u3038\u3039\u303A]/,
        peg$c91 = { type: "class", value: "[\\u16EE\\u16EF\\u16F0\\u2160\\u2161\\u2162\\u2163\\u2164\\u2165\\u2166\\u2167\\u2168\\u2169\\u216A\\u216B\\u216C\\u216D\\u216E\\u216F\\u2170\\u2171\\u2172\\u2173\\u2174\\u2175\\u2176\\u2177\\u2178\\u2179\\u217A\\u217B\\u217C\\u217D\\u217E\\u217F\\u2180\\u2181\\u2182\\u2185\\u2186\\u2187\\u2188\\u3007\\u3021\\u3022\\u3023\\u3024\\u3025\\u3026\\u3027\\u3028\\u3029\\u3038\\u3039\\u303A]", description: "[\\u16EE\\u16EF\\u16F0\\u2160\\u2161\\u2162\\u2163\\u2164\\u2165\\u2166\\u2167\\u2168\\u2169\\u216A\\u216B\\u216C\\u216D\\u216E\\u216F\\u2170\\u2171\\u2172\\u2173\\u2174\\u2175\\u2176\\u2177\\u2178\\u2179\\u217A\\u217B\\u217C\\u217D\\u217E\\u217F\\u2180\\u2181\\u2182\\u2185\\u2186\\u2187\\u2188\\u3007\\u3021\\u3022\\u3023\\u3024\\u3025\\u3026\\u3027\\u3028\\u3029\\u3038\\u3039\\u303A]" },
        peg$c92 = /^[_\u203F\u2040\u2054\uFE33\uFE34\uFE4D\uFE4E\uFE4F\uFF3F]/,
        peg$c93 = { type: "class", value: "[_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D\\uFE4E\\uFE4F\\uFF3F]", description: "[_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D\\uFE4E\\uFE4F\\uFF3F]" },
        peg$c94 = /^[ \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000]/,
        peg$c95 = { type: "class", value: "[ \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000]", description: "[ \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000]" },
        peg$c96 = function(name) { return ['#', name]; },
        peg$c97 = "(",
        peg$c98 = { type: "literal", value: "(", description: "\"(\"" },
        peg$c99 = ")",
        peg$c100 = { type: "literal", value: ")", description: "\")\"" },
        peg$c101 = function(name, args) {
            var result = [name].concat(args.shift());
            while (args.length > 0) {
              result = [result].concat(args.shift());
            }
            return result;
          },
        peg$c102 = function(args) {
            return args !== null ? args : [];
          },
        peg$c103 = ",",
        peg$c104 = { type: "literal", value: ",", description: "\",\"" },
        peg$c105 = function(head, tail) {
            var result = [head];
            for (var i = 0; i < tail.length; i++) {
              result.push(tail[i][3]);
            }
            return result;
          },
        peg$c106 = function(operator, expression) {
              return [operator, expression];
            },
        peg$c107 = "+",
        peg$c108 = { type: "literal", value: "+", description: "\"+\"" },
        peg$c109 = "-",
        peg$c110 = { type: "literal", value: "-", description: "\"-\"" },
        peg$c111 = "!",
        peg$c112 = { type: "literal", value: "!", description: "\"!\"" },
        peg$c113 = function(head, tail) {
              var result = head;
              for (var i = 0; i < tail.length; i++) {
                result = [tail[i][1], result, tail[i][3]];
              }
              return result;
            },
        peg$c114 = "*",
        peg$c115 = { type: "literal", value: "*", description: "\"*\"" },
        peg$c116 = "/",
        peg$c117 = { type: "literal", value: "/", description: "\"/\"" },
        peg$c118 = "%",
        peg$c119 = { type: "literal", value: "%", description: "\"%\"" },
        peg$c120 = "=",
        peg$c121 = { type: "literal", value: "=", description: "\"=\"" },
        peg$c122 = function(operator) { return operator; },
        peg$c123 = function() { return "+"; },
        peg$c124 = function() { return "-"; },
        peg$c125 = "<=",
        peg$c126 = { type: "literal", value: "<=", description: "\"<=\"" },
        peg$c127 = ">=",
        peg$c128 = { type: "literal", value: ">=", description: "\">=\"" },
        peg$c129 = "<",
        peg$c130 = { type: "literal", value: "<", description: "\"<\"" },
        peg$c131 = ">",
        peg$c132 = { type: "literal", value: ">", description: "\">\"" },
        peg$c133 = "==",
        peg$c134 = { type: "literal", value: "==", description: "\"==\"" },
        peg$c135 = "!=",
        peg$c136 = { type: "literal", value: "!=", description: "\"!=\"" },
        peg$c137 = "&&",
        peg$c138 = { type: "literal", value: "&&", description: "\"&&\"" },
        peg$c139 = function() { return "&&"; },
        peg$c140 = "||",
        peg$c141 = { type: "literal", value: "||", description: "\"||\"" },
        peg$c142 = function() { return "||"; },
        peg$c143 = "if",
        peg$c144 = { type: "literal", value: "if", description: "\"if\"" },
        peg$c145 = "then",
        peg$c146 = { type: "literal", value: "then", description: "\"then\"" },
        peg$c147 = "else",
        peg$c148 = { type: "literal", value: "else", description: "\"else\"" },
        peg$c149 = function(condition, trueExpression, falseExpression) {
              return ['if', condition, trueExpression, falseExpression];
            },

        peg$currPos          = 0,
        peg$reportedPos      = 0,
        peg$cachedPos        = 0,
        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$reportedPos, peg$currPos);
    }

    function offset() {
      return peg$reportedPos;
    }

    function line() {
      return peg$computePosDetails(peg$reportedPos).line;
    }

    function column() {
      return peg$computePosDetails(peg$reportedPos).column;
    }

    function expected(description) {
      throw peg$buildException(
        null,
        [{ type: "other", description: description }],
        peg$reportedPos
      );
    }

    function error(message) {
      throw peg$buildException(message, null, peg$reportedPos);
    }

    function peg$computePosDetails(pos) {
      function advance(details, startPos, endPos) {
        var p, ch;

        for (p = startPos; p < endPos; p++) {
          ch = input.charAt(p);
          if (ch === "\n") {
            if (!details.seenCR) { details.line++; }
            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }
        }
      }

      if (peg$cachedPos !== pos) {
        if (peg$cachedPos > pos) {
          peg$cachedPos = 0;
          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
        }
        advance(peg$cachedPosDetails, peg$cachedPos, pos);
        peg$cachedPos = pos;
      }

      return peg$cachedPosDetails;
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, pos) {
      function cleanupExpected(expected) {
        var i = 1;

        expected.sort(function(a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

          return s
            .replace(/\\/g,   '\\\\')
            .replace(/"/g,    '\\"')
            .replace(/\x08/g, '\\b')
            .replace(/\t/g,   '\\t')
            .replace(/\n/g,   '\\n')
            .replace(/\f/g,   '\\f')
            .replace(/\r/g,   '\\r')
            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc, foundDesc, i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1
          ? expectedDescs.slice(0, -1).join(", ")
              + " or "
              + expectedDescs[expected.length - 1]
          : expectedDescs[0];

        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      var posDetails = peg$computePosDetails(pos),
          found      = pos < input.length ? input.charAt(pos) : null;

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new SyntaxError(
        message !== null ? message : buildMessage(expected, found),
        expected,
        found,
        pos,
        posDetails.line,
        posDetails.column
      );
    }

    function peg$parsestart() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parse__();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseExpression();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c1(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseSourceCharacter() {
      var s0;

      if (input.length > peg$currPos) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c2); }
      }

      return s0;
    }

    function peg$parseWhiteSpace() {
      var s0, s1;

      peg$silentFails++;
      if (peg$c4.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c5); }
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parseZs();
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c3); }
      }

      return s0;
    }

    function peg$parseIdentifier() {
      var s0, s1, s2;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parseReservedWord();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = peg$c7;
      } else {
        peg$currPos = s1;
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseIdentifierName();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c8(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c6); }
      }

      return s0;
    }

    function peg$parseIdentifierName() {
      var s0, s1, s2, s3;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parseIdentifierStart();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parseIdentifierPart();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseIdentifierPart();
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c10(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c6); }
      }

      return s0;
    }

    function peg$parseIdentifierStart() {
      var s0, s1, s2;

      s0 = peg$parseUnicodeLetter();
      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 36) {
          s0 = peg$c11;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c12); }
        }
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 95) {
            s0 = peg$c13;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c14); }
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 92) {
              s1 = peg$c15;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c16); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parseUnicodeEscapeSequence();
              if (s2 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c17(s2);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          }
        }
      }

      return s0;
    }

    function peg$parseIdentifierPart() {
      var s0, s1;

      s0 = peg$parseIdentifierStart();
      if (s0 === peg$FAILED) {
        s0 = peg$parseUnicodeCombiningMark();
        if (s0 === peg$FAILED) {
          s0 = peg$parseNd();
          if (s0 === peg$FAILED) {
            s0 = peg$parsePc();
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 8204) {
                s1 = peg$c18;
                peg$currPos++;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c19); }
              }
              if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c20();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 8205) {
                  s1 = peg$c21;
                  peg$currPos++;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c22); }
                }
                if (s1 !== peg$FAILED) {
                  peg$reportedPos = s0;
                  s1 = peg$c23();
                }
                s0 = s1;
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseUnicodeLetter() {
      var s0;

      s0 = peg$parseLu();
      if (s0 === peg$FAILED) {
        s0 = peg$parseLl();
        if (s0 === peg$FAILED) {
          s0 = peg$parseLt();
          if (s0 === peg$FAILED) {
            s0 = peg$parseLm();
            if (s0 === peg$FAILED) {
              s0 = peg$parseLo();
              if (s0 === peg$FAILED) {
                s0 = peg$parseNl();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseUnicodeCombiningMark() {
      var s0;

      s0 = peg$parseMn();
      if (s0 === peg$FAILED) {
        s0 = peg$parseMc();
      }

      return s0;
    }

    function peg$parseReservedWord() {
      var s0;

      s0 = peg$parseNullLiteral();
      if (s0 === peg$FAILED) {
        s0 = peg$parseBooleanLiteral();
      }

      return s0;
    }

    function peg$parseLiteral() {
      var s0;

      s0 = peg$parseNullLiteral();
      if (s0 === peg$FAILED) {
        s0 = peg$parseBooleanLiteral();
        if (s0 === peg$FAILED) {
          s0 = peg$parseNumericLiteral();
          if (s0 === peg$FAILED) {
            s0 = peg$parseStringLiteral();
          }
        }
      }

      return s0;
    }

    function peg$parseNullLiteral() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c24) {
        s1 = peg$c24;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c25); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseIdentifierPart();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c26();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseBooleanLiteral() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 5) === peg$c27) {
        s1 = peg$c27;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c28); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseIdentifierPart();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c29();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 4) === peg$c30) {
          s1 = peg$c30;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c31); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          peg$silentFails++;
          s3 = peg$parseIdentifierPart();
          peg$silentFails--;
          if (s3 === peg$FAILED) {
            s2 = peg$c7;
          } else {
            peg$currPos = s2;
            s2 = peg$c0;
          }
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c32();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseNumericLiteral() {
      var s0, s1, s2, s3;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parseHexIntegerLiteral();
      if (s1 === peg$FAILED) {
        s1 = peg$parseDecimalLiteral();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseIdentifierStart();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c34(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c33); }
      }

      return s0;
    }

    function peg$parseDecimalLiteral() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = peg$parseDecimalIntegerLiteral();
      if (s3 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s4 = peg$c35;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c36); }
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parseDecimalDigits();
          if (s5 === peg$FAILED) {
            s5 = peg$c37;
          }
          if (s5 !== peg$FAILED) {
            s6 = peg$parseExponentPart();
            if (s6 === peg$FAILED) {
              s6 = peg$c37;
            }
            if (s6 !== peg$FAILED) {
              s3 = [s3, s4, s5, s6];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$c0;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c0;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$c0;
      }
      if (s2 !== peg$FAILED) {
        s2 = input.substring(s1, peg$currPos);
      }
      s1 = s2;
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c38(s1);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 46) {
          s3 = peg$c35;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c36); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseDecimalDigits();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseExponentPart();
            if (s5 === peg$FAILED) {
              s5 = peg$c37;
            }
            if (s5 !== peg$FAILED) {
              s3 = [s3, s4, s5];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$c0;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c0;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          s2 = input.substring(s1, peg$currPos);
        }
        s1 = s2;
        if (s1 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c39(s1);
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$currPos;
          s2 = peg$currPos;
          s3 = peg$parseDecimalIntegerLiteral();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseExponentPart();
            if (s4 === peg$FAILED) {
              s4 = peg$c37;
            }
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$c0;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c0;
          }
          if (s2 !== peg$FAILED) {
            s2 = input.substring(s1, peg$currPos);
          }
          s1 = s2;
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c39(s1);
          }
          s0 = s1;
        }
      }

      return s0;
    }

    function peg$parseDecimalIntegerLiteral() {
      var s0, s1, s2;

      if (input.charCodeAt(peg$currPos) === 48) {
        s0 = peg$c40;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c41); }
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseNonZeroDigit();
        if (s1 !== peg$FAILED) {
          s2 = peg$parseDecimalDigits();
          if (s2 === peg$FAILED) {
            s2 = peg$c37;
          }
          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseDecimalDigits() {
      var s0, s1;

      s0 = [];
      s1 = peg$parseDecimalDigit();
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parseDecimalDigit();
        }
      } else {
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseDecimalDigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c43); }
      }

      return s0;
    }

    function peg$parseNonZeroDigit() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c45); }
      }

      return s0;
    }

    function peg$parseExponentPart() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$parseExponentIndicator();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSignedInteger();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseExponentIndicator() {
      var s0;

      if (peg$c46.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c47); }
      }

      return s0;
    }

    function peg$parseSignedInteger() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (peg$c48.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c49); }
      }
      if (s1 === peg$FAILED) {
        s1 = peg$c37;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseDecimalDigits();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseHexIntegerLiteral() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 48) {
        s1 = peg$c40;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c41); }
      }
      if (s1 !== peg$FAILED) {
        if (peg$c50.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c51); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          s4 = [];
          s5 = peg$parseHexDigit();
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parseHexDigit();
            }
          } else {
            s4 = peg$c0;
          }
          if (s4 !== peg$FAILED) {
            s4 = input.substring(s3, peg$currPos);
          }
          s3 = s4;
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c52(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseHexDigit() {
      var s0;

      if (peg$c53.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c54); }
      }

      return s0;
    }

    function peg$parseStringLiteral() {
      var s0, s1, s2, s3, s4;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 34) {
        s2 = peg$c56;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c57); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseDoubleStringCharacters();
        if (s3 === peg$FAILED) {
          s3 = peg$c37;
        }
        if (s3 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 34) {
            s4 = peg$c56;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c57); }
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$c0;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$c0;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$c0;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 39) {
          s2 = peg$c58;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c59); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseSingleStringCharacters();
          if (s3 === peg$FAILED) {
            s3 = peg$c37;
          }
          if (s3 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 39) {
              s4 = peg$c58;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c59); }
            }
            if (s4 !== peg$FAILED) {
              s2 = [s2, s3, s4];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$c0;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$c0;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$c0;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c60(s1);
      }
      s0 = s1;
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c55); }
      }

      return s0;
    }

    function peg$parseDoubleStringCharacters() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parseDoubleStringCharacter();
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parseDoubleStringCharacter();
        }
      } else {
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c61(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseSingleStringCharacters() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parseSingleStringCharacter();
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parseSingleStringCharacter();
        }
      } else {
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c61(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseDoubleStringCharacter() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      if (input.charCodeAt(peg$currPos) === 34) {
        s2 = peg$c56;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c57); }
      }
      if (s2 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 92) {
          s2 = peg$c15;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c16); }
        }
      }
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = peg$c7;
      } else {
        peg$currPos = s1;
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSourceCharacter();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c62(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 92) {
          s1 = peg$c15;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c16); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseEscapeSequence();
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c63(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseSingleStringCharacter() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      if (input.charCodeAt(peg$currPos) === 39) {
        s2 = peg$c58;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c59); }
      }
      if (s2 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 92) {
          s2 = peg$c15;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c16); }
        }
      }
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = peg$c7;
      } else {
        peg$currPos = s1;
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSourceCharacter();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c62(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 92) {
          s1 = peg$c15;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c16); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseEscapeSequence();
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c63(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseEscapeSequence() {
      var s0, s1, s2, s3;

      s0 = peg$parseCharacterEscapeSequence();
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 48) {
          s1 = peg$c40;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c41); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          peg$silentFails++;
          s3 = peg$parseDecimalDigit();
          peg$silentFails--;
          if (s3 === peg$FAILED) {
            s2 = peg$c7;
          } else {
            peg$currPos = s2;
            s2 = peg$c0;
          }
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c64();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$parseHexEscapeSequence();
          if (s0 === peg$FAILED) {
            s0 = peg$parseUnicodeEscapeSequence();
          }
        }
      }

      return s0;
    }

    function peg$parseCharacterEscapeSequence() {
      var s0;

      s0 = peg$parseSingleEscapeCharacter();
      if (s0 === peg$FAILED) {
        s0 = peg$parseNonEscapeCharacter();
      }

      return s0;
    }

    function peg$parseSingleEscapeCharacter() {
      var s0, s1;

      s0 = peg$currPos;
      if (peg$c65.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c66); }
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c67(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseNonEscapeCharacter() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parseEscapeCharacter();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = peg$c7;
      } else {
        peg$currPos = s1;
        s1 = peg$c0;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSourceCharacter();
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c68(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseEscapeCharacter() {
      var s0;

      s0 = peg$parseSingleEscapeCharacter();
      if (s0 === peg$FAILED) {
        s0 = peg$parseDecimalDigit();
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 120) {
            s0 = peg$c69;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c70); }
          }
          if (s0 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 117) {
              s0 = peg$c71;
              peg$currPos++;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c72); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseHexEscapeSequence() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 120) {
        s1 = peg$c69;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c70); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$currPos;
        s4 = peg$parseHexDigit();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseHexDigit();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        if (s3 !== peg$FAILED) {
          s3 = input.substring(s2, peg$currPos);
        }
        s2 = s3;
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c73(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseUnicodeEscapeSequence() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 117) {
        s1 = peg$c71;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c72); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$currPos;
        s4 = peg$parseHexDigit();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseHexDigit();
          if (s5 !== peg$FAILED) {
            s6 = peg$parseHexDigit();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseHexDigit();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        if (s3 !== peg$FAILED) {
          s3 = input.substring(s2, peg$currPos);
        }
        s2 = s3;
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c73(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseLl() {
      var s0;

      if (peg$c74.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c75); }
      }

      return s0;
    }

    function peg$parseLm() {
      var s0;

      if (peg$c76.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c77); }
      }

      return s0;
    }

    function peg$parseLo() {
      var s0;

      if (peg$c78.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c79); }
      }

      return s0;
    }

    function peg$parseLt() {
      var s0;

      if (peg$c80.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c81); }
      }

      return s0;
    }

    function peg$parseLu() {
      var s0;

      if (peg$c82.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c83); }
      }

      return s0;
    }

    function peg$parseMc() {
      var s0;

      if (peg$c84.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c85); }
      }

      return s0;
    }

    function peg$parseMn() {
      var s0;

      if (peg$c86.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c87); }
      }

      return s0;
    }

    function peg$parseNd() {
      var s0;

      if (peg$c88.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c89); }
      }

      return s0;
    }

    function peg$parseNl() {
      var s0;

      if (peg$c90.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c91); }
      }

      return s0;
    }

    function peg$parsePc() {
      var s0;

      if (peg$c92.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c93); }
      }

      return s0;
    }

    function peg$parseZs() {
      var s0;

      if (peg$c94.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c95); }
      }

      return s0;
    }

    function peg$parse__() {
      var s0, s1;

      s0 = [];
      s1 = peg$parseWhiteSpace();
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        s1 = peg$parseWhiteSpace();
      }

      return s0;
    }

    function peg$parsePrimaryExpression() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$parseIdentifier();
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c96(s1);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$parseLiteral();
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 40) {
            s1 = peg$c97;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c98); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse__();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseExpression();
              if (s3 !== peg$FAILED) {
                s4 = peg$parse__();
                if (s4 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s5 = peg$c99;
                    peg$currPos++;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c100); }
                  }
                  if (s5 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c1(s3);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        }
      }

      return s0;
    }

    function peg$parseCallExpression() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseIdentifier();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse__();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parseArguments();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parseArguments();
            }
          } else {
            s3 = peg$c0;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c101(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseArguments() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 40) {
        s1 = peg$c97;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c98); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse__();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseArgumentList();
          if (s3 === peg$FAILED) {
            s3 = peg$c37;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__();
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 41) {
                s5 = peg$c99;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c100); }
              }
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c102(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseArgumentList() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s5 = peg$c103;
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c104); }
          }
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 44) {
              s5 = peg$c103;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c104); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c105(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseUnaryExpression() {
      var s0, s1, s2, s3;

      s0 = peg$parseCallExpression();
      if (s0 === peg$FAILED) {
        s0 = peg$parsePrimaryExpression();
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseUnaryOperator();
          if (s1 !== peg$FAILED) {
            s2 = peg$parse__();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseUnaryExpression();
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c106(s1, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        }
      }

      return s0;
    }

    function peg$parseUnaryOperator() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 43) {
        s0 = peg$c107;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c108); }
      }
      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 45) {
          s0 = peg$c109;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c110); }
        }
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 33) {
            s0 = peg$c111;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c112); }
          }
        }
      }

      return s0;
    }

    function peg$parseMultiplicativeExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseUnaryExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseMultiplicativeOperator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseUnaryExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseMultiplicativeOperator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseUnaryExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c113(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseMultiplicativeOperator() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 42) {
        s1 = peg$c114;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c115); }
      }
      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 47) {
          s1 = peg$c116;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c117); }
        }
        if (s1 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 37) {
            s1 = peg$c118;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c119); }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 61) {
          s3 = peg$c120;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c121); }
        }
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c122(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseAdditiveExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseMultiplicativeExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseAdditiveOperator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseMultiplicativeExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseAdditiveOperator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseMultiplicativeExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c113(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseAdditiveOperator() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 43) {
        s1 = peg$c107;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c108); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 43) {
          s3 = peg$c107;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c108); }
        }
        if (s3 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 61) {
            s3 = peg$c120;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c121); }
          }
        }
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c123();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 45) {
          s1 = peg$c109;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c110); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          peg$silentFails++;
          if (input.charCodeAt(peg$currPos) === 45) {
            s3 = peg$c109;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c110); }
          }
          if (s3 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 61) {
              s3 = peg$c120;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c121); }
            }
          }
          peg$silentFails--;
          if (s3 === peg$FAILED) {
            s2 = peg$c7;
          } else {
            peg$currPos = s2;
            s2 = peg$c0;
          }
          if (s2 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c124();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      }

      return s0;
    }

    function peg$parseRelationalExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseAdditiveExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseRelationalOperator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseAdditiveExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseRelationalOperator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseAdditiveExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c113(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseRelationalOperator() {
      var s0;

      if (input.substr(peg$currPos, 2) === peg$c125) {
        s0 = peg$c125;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c126); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 2) === peg$c127) {
          s0 = peg$c127;
          peg$currPos += 2;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c128); }
        }
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 60) {
            s0 = peg$c129;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c130); }
          }
          if (s0 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 62) {
              s0 = peg$c131;
              peg$currPos++;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c132); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseEqualityExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseRelationalExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseEqualityOperator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseRelationalExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseEqualityOperator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseRelationalExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c113(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseEqualityOperator() {
      var s0;

      if (input.substr(peg$currPos, 2) === peg$c133) {
        s0 = peg$c133;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c134); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 2) === peg$c135) {
          s0 = peg$c135;
          peg$currPos += 2;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c136); }
        }
      }

      return s0;
    }

    function peg$parseLogicalANDExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseEqualityExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseLogicalANDOperator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseEqualityExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseLogicalANDOperator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseEqualityExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c113(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseLogicalANDOperator() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c137) {
        s1 = peg$c137;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c138); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 61) {
          s3 = peg$c120;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c121); }
        }
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c139();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseLogicalORExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseLogicalANDExpression();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseLogicalOROperator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseLogicalANDExpression();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c0;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse__();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseLogicalOROperator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse__();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseLogicalANDExpression();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$c0;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c0;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c0;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c0;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c113(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseLogicalOROperator() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c140) {
        s1 = peg$c140;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c141); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 61) {
          s3 = peg$c120;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c121); }
        }
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = peg$c7;
        } else {
          peg$currPos = s2;
          s2 = peg$c0;
        }
        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c142();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }

      return s0;
    }

    function peg$parseExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c143) {
        s1 = peg$c143;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c144); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse__();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseLogicalORExpression();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse__();
            if (s4 !== peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c145) {
                s5 = peg$c145;
                peg$currPos += 4;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c146); }
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse__();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseExpression();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse__();
                    if (s8 !== peg$FAILED) {
                      if (input.substr(peg$currPos, 4) === peg$c147) {
                        s9 = peg$c147;
                        peg$currPos += 4;
                      } else {
                        s9 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c148); }
                      }
                      if (s9 !== peg$FAILED) {
                        s10 = peg$parse__();
                        if (s10 !== peg$FAILED) {
                          s11 = peg$parseExpression();
                          if (s11 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c149(s3, s7, s11);
                            s0 = s1;
                          } else {
                            peg$currPos = s0;
                            s0 = peg$c0;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$c0;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c0;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c0;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c0;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c0;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c0;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c0;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c0;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c0;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c0;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parseLogicalORExpression();
      }

      return s0;
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({ type: "end", description: "end of input" });
      }

      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
    }
  }

  return {
    SyntaxError: SyntaxError,
    parse:       parse
  };
}]);


/***/ }),

/***/ "./core/templates/dev/head/expressions/ExpressionSyntaxTreeService.ts":
/*!****************************************************************************!*\
  !*** ./core/templates/dev/head/expressions/ExpressionSyntaxTreeService.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
__webpack_require__(/*! expressions/ExpressionParserService.js */ "./core/templates/dev/head/expressions/ExpressionParserService.js");
oppia.factory('ExpressionSyntaxTreeService', [
    '$log', 'ExpressionParserService', 'PARAMETER_TYPES',
    function ($log, ExpressionParserService, PARAMETER_TYPES) {
        // Exceptions that can be thrown from the evaluation of expressions.
        var ExpressionError = function () {
        };
        ExpressionError.prototype = new Error();
        ExpressionError.prototype.constructor = ExpressionError;
        var ExprUndefinedVarError = function (varname, envs) {
            this.varname = varname;
            this.envs = envs;
        };
        ExprUndefinedVarError.prototype = new ExpressionError();
        ExprUndefinedVarError.prototype.constructor = ExprUndefinedVarError;
        ExprUndefinedVarError.prototype.name = 'ExprUndefinedVarError';
        ExprUndefinedVarError.prototype.toString = function () {
            return this.name + ': ' + this.varname + ' not found in ' + this.envs;
        };
        var ExprWrongNumArgsError = function (args, expectedMin, expectedMax) {
            this.args = args;
            this.expectedMin = expectedMin;
            this.expectedMax = expectedMax;
        };
        ExprWrongNumArgsError.prototype = new ExpressionError();
        ExprWrongNumArgsError.prototype.constructor = ExprWrongNumArgsError;
        ExprWrongNumArgsError.prototype.name = 'ExprWrongNumArgsError';
        ExprWrongNumArgsError.prototype.toString = function () {
            return this.name + ': {' + this.args + '} not in range [' +
                this.expectedMin + ',' + this.expectedMax + ']';
        };
        var ExprWrongArgTypeError = function (arg, actualType, expectedType) {
            this.arg = arg;
            this.actualType = actualType;
            this.expectedType = expectedType;
        };
        ExprWrongArgTypeError.prototype = new ExpressionError();
        ExprWrongArgTypeError.prototype.constructor = ExprWrongArgTypeError;
        ExprWrongArgTypeError.prototype.name = 'ExprWrongArgTypeError';
        ExprWrongArgTypeError.prototype.toString = function () {
            if (this.arg === null) {
                return this.name + ': Type ' + this.actualType +
                    ' does not match expected type ' + this.expectedType;
            }
            return this.name + ': ' + this.arg + ' has type ' + this.actualType +
                ' which does not match expected type ' + this.expectedType;
        };
        var getParamsUsedInExpression = function (expression) {
            var _findParams = function (parseTree) {
                var paramsFound = [];
                if (parseTree instanceof Array) {
                    if (parseTree[0] === '#') {
                        paramsFound.push(parseTree[1]);
                    }
                    else {
                        for (var i = 1; i < parseTree.length; i++) {
                            paramsFound = paramsFound.concat(_findParams(parseTree[i]));
                        }
                    }
                }
                var uniqueParams = [];
                for (var i = 0; i < paramsFound.length; i++) {
                    if (uniqueParams.indexOf(paramsFound[i]) === -1) {
                        uniqueParams.push(paramsFound[i]);
                    }
                }
                return uniqueParams.sort();
            };
            var parsed = ExpressionParserService.parse(expression);
            return _findParams(parsed);
        };
        // Checks if the args array has the expectedNum number of elements and
        // throws an error if not. If optional expectedMax is specified, it
        // verifies the number of args is in [expectedNum, expectedMax] range
        // inclusive.
        var verifyNumArgs = function (args, expectedNum, expectedMax) {
            if (expectedMax === void 0) { expectedMax = expectedNum; }
            if (expectedMax === undefined) {
                expectedMax = expectedNum;
            }
            if (args.length >= expectedNum && args.length <= expectedMax) {
                return;
            }
            throw new ExprWrongNumArgsError(args, expectedNum, expectedMax);
        };
        var _verifyArgTypesMatchExpectedType = function (argTypes, expectedType) {
            for (var i = 0; i < argTypes.length; i++) {
                if (argTypes[i] !== expectedType) {
                    throw new ExprWrongArgTypeError(null, argTypes[i], expectedType);
                }
            }
            return true;
        };
        var _verifyArgTypesMatch = function (argType1, argType2) {
            if (argType1 !== argType2) {
                throw new ExprWrongArgTypeError(null, argType1, argType2);
            }
            return true;
        };
        var applyFunctionToParseTree = function (parsed, envs, func) {
            return func(parsed, envs.concat(system));
        };
        /**
         * Looks up a variable of the given name in the env. Here the variable
         * can be system or user defined functions and parameters, as well as
         * system operators.
         * @param {string} name The name to look up.
         * @param {!Array.<!Object>} envs Represents a nested name space
         *     environment to look up the name in. The first element is looked up
         *     first (i.e. has higher precedence).
         * @throws {ExprUndefinedVarError} The named variable was not found in
         *     the given environment.
         */
        var lookupEnvs = function (name, envs) {
            // Parameter value look up.
            var value;
            if (envs.some(function (env) {
                if (env.hasOwnProperty(name)) {
                    value = env[name];
                    return true;
                }
                return false;
            })) {
                return value;
            }
            throw new ExprUndefinedVarError(name, envs);
        };
        // Coerces the argument to a Number, and throws an error if the result
        // is NaN.
        var _coerceToNumber = function (originalValue) {
            var coercedValue = (+originalValue);
            if (!isNaN(coercedValue)) {
                return coercedValue;
            }
            throw new ExprWrongArgTypeError(originalValue, typeof originalValue, 'Number');
        };
        // Coerces all values in the given argument array to Number, and throws
        // an error if the result is NaN.
        var _coerceAllArgsToNumber = function (args) {
            for (var i = 0; i < args.length; i++) {
                args[i] = _coerceToNumber(args[i]);
            }
            return args;
        };
        // NOTE TO DEVELOPERS: When adding a new reserved word to this object,
        //   please first ensure that existing explorations do not use this
        //   parameter name. Also, to prevent future explorations using it,
        //   modify feconf.INVALID_PARAMETER_NAMES accordingly.
        // TODO(kashida): Document all operators input and output contracts.
        // Arguments:
        // args: for eval(): list of values of the evaluated sub-expression
        //       for getType(): list of types of the evaluated sub-expression
        var system = {
            '+': {
                eval: function (args) {
                    verifyNumArgs(args, 1, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs.length === 1 ? numericArgs[0] :
                        numericArgs[0] + numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 1, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            '-': {
                eval: function (args) {
                    verifyNumArgs(args, 1, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs.length === 1 ? -numericArgs[0] :
                        numericArgs[0] - numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 1, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            '*': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] * numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            '/': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] / numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            '%': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] % numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            '<=': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] <= numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '>=': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] >= numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '<': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] < numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '>': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return numericArgs[0] > numericArgs[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '!': {
                eval: function (args) {
                    verifyNumArgs(args, 1);
                    return !args[0];
                },
                getType: function (args) {
                    verifyNumArgs(args, 1);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.UNICODE_STRING);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '==': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    return args[0] === args[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '!=': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    return args[0] !== args[1];
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '&&': {
                eval: function (args) {
                    // TODO(kashida): Make this short-circuit.
                    verifyNumArgs(args, 2);
                    return Boolean(args[0] && args[1]);
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.UNICODE_STRING);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            '||': {
                eval: function (args) {
                    // TODO(kashida): Make this short-circuit.
                    verifyNumArgs(args, 2);
                    return Boolean(args[0] || args[1]);
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.UNICODE_STRING);
                    return PARAMETER_TYPES.UNICODE_STRING;
                }
            },
            // Note that removing quotation marks from this key causes issues with
            // minification (when running the deployment scripts).
            /* eslint-disable quote-props */
            'if': {
                eval: function (args) {
                    // TODO(kashida): Make this short-circuit.
                    verifyNumArgs(args, 3);
                    return args[0] ? args[1] : args[2];
                },
                getType: function (args) {
                    verifyNumArgs(args, 3);
                    _verifyArgTypesMatchExpectedType([args[0]], PARAMETER_TYPES.UNICODE_STRING);
                    _verifyArgTypesMatch(args[1], args[2]);
                    return args[1];
                }
            },
            'floor': {
                eval: function (args) {
                    verifyNumArgs(args, 1);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return Math.floor(numericArgs[0]);
                },
                getType: function (args) {
                    verifyNumArgs(args, 1);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            'pow': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return Math.pow(args[0], args[1]);
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            'log': {
                eval: function (args) {
                    verifyNumArgs(args, 2);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    var preciseAns = Math.log(numericArgs[0]) / Math.log(numericArgs[1]);
                    // We round answers to 9 decimal places, so that we don't run into
                    // issues like log(9, 3) = 2.0000000000004.
                    return Math.round(preciseAns * Math.pow(10, 9)) / Math.pow(10, 9);
                },
                getType: function (args) {
                    verifyNumArgs(args, 2);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            },
            'abs': {
                eval: function (args) {
                    verifyNumArgs(args, 1);
                    var numericArgs = _coerceAllArgsToNumber(args);
                    return Math.abs(numericArgs[0]);
                },
                getType: function (args) {
                    verifyNumArgs(args, 1);
                    _verifyArgTypesMatchExpectedType(args, PARAMETER_TYPES.REAL);
                    return PARAMETER_TYPES.REAL;
                }
            }
            /* eslint-enable quote-props */
        };
        return {
            ExpressionError: ExpressionError,
            ExprUndefinedVarError: ExprUndefinedVarError,
            ExprWrongNumArgsError: ExprWrongNumArgsError,
            ExprWrongArgTypeError: ExprWrongArgTypeError,
            applyFunctionToParseTree: applyFunctionToParseTree,
            getParamsUsedInExpression: getParamsUsedInExpression,
            lookupEnvs: lookupEnvs
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/filters/string-utility-filters/get-abbreviated-text.filter.ts":
/*!***********************************************************************************************!*\
  !*** ./core/templates/dev/head/filters/string-utility-filters/get-abbreviated-text.filter.ts ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview GetAbbreviatedText filter for Oppia.
 */
angular.module('stringUtilityFiltersModule').filter('getAbbreviatedText', [function () {
        return function (text, characterCount) {
            if (text.length > characterCount) {
                var subject = text.substr(0, characterCount);
                if (subject.indexOf(' ') !== -1) {
                    subject = subject.split(' ').slice(0, -1).join(' ');
                }
                return subject.concat('...');
            }
            return text;
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/filters/summarize-nonnegative-number.filter.ts":
/*!********************************************************************************!*\
  !*** ./core/templates/dev/head/filters/summarize-nonnegative-number.filter.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview SummarizeNonnegativeNumber filter for Oppia.
 */
// Filter that summarizes a large number to a decimal followed by
// the appropriate metric prefix (K, M or B). For example, 167656
// becomes 167.7K.
// Users of this filter should ensure that the input is a non-negative number.
angular.module('filtersModule').filter('summarizeNonnegativeNumber', [function () {
        return function (input) {
            input = Number(input);
            // Nine zeros for billions (e.g. 146008788788 --> 146.0B).
            // Six zeros for millions (e.g. 146008788 --> 146.0M).
            // Three zeros for thousands (e.g. 146008 --> 146.0K).
            // No change for small numbers (e.g. 12 --> 12).
            return (input >= 1.0e+9 ? (input / 1.0e+9).toFixed(1) + 'B' :
                input >= 1.0e+6 ? (input / 1.0e+6).toFixed(1) + 'M' :
                    input >= 1.0e+3 ? (input / 1.0e+3).toFixed(1) + 'K' :
                        input);
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/AudioBarDirective.ts":
/*!*******************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/AudioBarDirective.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for a set of audio controls for a specific
 * audio translation in the learner view.
 */
__webpack_require__(/*! domain/utilities/BrowserCheckerService.ts */ "./core/templates/dev/head/domain/utilities/BrowserCheckerService.ts");
__webpack_require__(/*! domain/utilities/LanguageUtilService.ts */ "./core/templates/dev/head/domain/utilities/LanguageUtilService.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioPreloaderService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioPreloaderService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationLanguageService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationLanguageService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! services/AssetsBackendApiService.ts */ "./core/templates/dev/head/services/AssetsBackendApiService.ts");
__webpack_require__(/*! services/AudioPlayerService.ts */ "./core/templates/dev/head/services/AudioPlayerService.ts");
__webpack_require__(/*! services/AutogeneratedAudioPlayerService.ts */ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
oppia.directive('audioBar', [
    'AudioPreloaderService', 'UrlInterpolationService',
    function (AudioPreloaderService, UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                'audio_bar_directive.html'),
            controller: [
                '$scope', '$interval', '$timeout', 'AudioTranslationLanguageService',
                'AudioPlayerService', 'LanguageUtilService', 'AssetsBackendApiService',
                'AutogeneratedAudioPlayerService', 'PlayerPositionService',
                'WindowDimensionsService', 'AudioTranslationManagerService',
                'EVENT_AUTOPLAY_AUDIO', 'BrowserCheckerService',
                function ($scope, $interval, $timeout, AudioTranslationLanguageService, AudioPlayerService, LanguageUtilService, AssetsBackendApiService, AutogeneratedAudioPlayerService, PlayerPositionService, WindowDimensionsService, AudioTranslationManagerService, EVENT_AUTOPLAY_AUDIO, BrowserCheckerService) {
                    $scope.audioBarIsExpanded = false;
                    $scope.progressBarIsShown = false;
                    $scope.languagesInExploration =
                        AudioTranslationLanguageService.getLanguageOptionsForDropdown();
                    $scope.selectedLanguage = {
                        value: AudioTranslationLanguageService.getCurrentAudioLanguageCode()
                    };
                    $scope.$on(EVENT_AUTOPLAY_AUDIO, function (e, params) {
                        if ($scope.audioBarIsExpanded) {
                            AudioPlayerService.stop();
                            AutogeneratedAudioPlayerService.cancel();
                            // We use a timeout to allow for any previous audio to have
                            // their 'onend' callback called. This is primarily used to
                            // address delays with autogenerated audio callbacks.
                            $timeout(function () {
                                if (params) {
                                    AudioTranslationManagerService.setSecondaryAudioTranslations(params.audioTranslations, params.html, params.componentName);
                                }
                                $scope.onPlayButtonClicked();
                            }, 100);
                        }
                    });
                    $scope.isAudioBarAvailable = function () {
                        return $scope.languagesInExploration.length > 0;
                    };
                    $scope.onNewLanguageSelected = function () {
                        AudioTranslationLanguageService.setCurrentAudioLanguageCode($scope.selectedLanguage.value);
                        AudioPlayerService.stop();
                        AudioPlayerService.clear();
                        AutogeneratedAudioPlayerService.cancel();
                        if ($scope.isAudioAvailableInCurrentLanguage() &&
                            !isAutogeneratedLanguageCodeSelected()) {
                            var audioTranslation = getVoiceoverInCurrentLanguage();
                            AudioPreloaderService.setMostRecentlyRequestedAudioFilename(audioTranslation.filename);
                            AudioPreloaderService.restartAudioPreloader(PlayerPositionService.getCurrentStateName());
                        }
                    };
                    $scope.expandAudioBar = function () {
                        $scope.audioBarIsExpanded = true;
                    };
                    $scope.collapseAudioBar = function () {
                        $scope.audioBarIsExpanded = false;
                        AudioPlayerService.stop();
                        AudioPlayerService.clear();
                        AutogeneratedAudioPlayerService.cancel();
                    };
                    var lastScrollTop = 0;
                    $(window).scroll(function (event) {
                        if (WindowDimensionsService.isWindowNarrow()) {
                            updateAudioHeaderPosition();
                        }
                    });
                    var updateAudioHeaderPosition = function () {
                        var scrollTop = $(this).scrollTop();
                        var audioHeader = angular.element($('.audio-header:first'));
                        if (scrollTop > lastScrollTop) {
                            audioHeader.addClass('audio-bar-nav-up');
                            if (!$scope.audioBarIsExpanded) {
                                audioHeader.addClass('audio-bar-nav-hidden');
                            }
                        }
                        else if (scrollTop === 0 ||
                            scrollTop + $(window).height() < $(document).height()) {
                            audioHeader.removeClass('audio-bar-nav-up');
                            audioHeader.removeClass('audio-bar-nav-hidden');
                        }
                        lastScrollTop = scrollTop;
                    };
                    var getCurrentAudioLanguageCode = function () {
                        return AudioTranslationLanguageService
                            .getCurrentAudioLanguageCode();
                    };
                    $scope.getCurrentAudioLanguageDescription = function () {
                        return AudioTranslationLanguageService
                            .getCurrentAudioLanguageDescription();
                    };
                    var getVoiceoverInCurrentLanguage = function () {
                        return AudioTranslationManagerService.getCurrentAudioTranslations()[AudioTranslationLanguageService.getCurrentAudioLanguageCode()];
                    };
                    $scope.isAudioPlaying = function () {
                        return AudioPlayerService.isPlaying() ||
                            AutogeneratedAudioPlayerService.isPlaying();
                    };
                    $scope.audioLoadingIndicatorIsShown = false;
                    $scope.AudioPlayerService = AudioPlayerService;
                    $scope.isAudioAvailableInCurrentLanguage = function () {
                        return Boolean(getVoiceoverInCurrentLanguage()) ||
                            isAutogeneratedLanguageCodeSelected();
                    };
                    $scope.doesCurrentAudioTranslationNeedUpdate = function () {
                        if (!isAutogeneratedLanguageCodeSelected()) {
                            var audioTranslation = getVoiceoverInCurrentLanguage();
                            return (audioTranslation && audioTranslation.needsUpdate);
                        }
                        else {
                            return false;
                        }
                    };
                    var isAutogeneratedLanguageCodeSelected = function () {
                        return AudioTranslationLanguageService
                            .isAutogeneratedLanguageCodeSelected();
                    };
                    $scope.onPlayButtonClicked = function () {
                        $scope.progressBarIsShown = !isAutogeneratedLanguageCodeSelected();
                        if (isAutogeneratedLanguageCodeSelected()) {
                            playPauseAutogeneratedAudioTranslation();
                        }
                        else {
                            var audioTranslation = getVoiceoverInCurrentLanguage();
                            if (audioTranslation) {
                                playPauseUploadedAudioTranslation(getCurrentAudioLanguageCode());
                            }
                        }
                    };
                    $scope.track = {
                        progress: function (progressPercentage) {
                            // Returns the current track progress. In addition, sets the
                            // track progress if the progressPercentage argument is defined.
                            if (angular.isDefined(progressPercentage)) {
                                AudioPlayerService.setProgress(progressPercentage / 100);
                            }
                            return AudioPlayerService.getProgress() * 100;
                        }
                    };
                    var isCached = function (audioTranslation) {
                        return AssetsBackendApiService.isCached(audioTranslation.filename);
                    };
                    var playPauseAudioTranslation = function (languageCode) {
                        if (AudioTranslationLanguageService
                            .isAutogeneratedLanguageCodeSelected()) {
                            playPauseAutogeneratedAudioTranslation();
                        }
                        else {
                            playPauseUploadedAudioTranslation(languageCode);
                        }
                    };
                    var playPauseAutogeneratedAudioTranslation = function () {
                        // SpeechSynthesis in Chrome seems to have a bug
                        // where if you pause the utterance, wait for around
                        // 15 or more seconds, then try resuming, nothing
                        // will sound. As a temporary fix, just restart the
                        // utterance from the beginning instead of resuming.
                        if (AutogeneratedAudioPlayerService.isPlaying()) {
                            AutogeneratedAudioPlayerService.cancel();
                        }
                        else {
                            AutogeneratedAudioPlayerService.play(AudioTranslationManagerService
                                .getCurrentHtmlForAutogeneratedAudio(), AudioTranslationLanguageService
                                .getSpeechSynthesisLanguageCode(), function () {
                                // Used to update bindings to show a silent speaker after
                                // autogenerated audio has finished playing.
                                $scope.$applyAsync();
                                AudioTranslationManagerService
                                    .clearSecondaryAudioTranslations();
                            });
                        }
                    };
                    var playPauseUploadedAudioTranslation = function (languageCode) {
                        if (!AudioPlayerService.isPlaying()) {
                            if (AudioPlayerService.isTrackLoaded()) {
                                AudioPlayerService.play();
                            }
                            else {
                                loadAndPlayAudioTranslation();
                            }
                        }
                        else {
                            AudioPlayerService.pause();
                        }
                    };
                    var playCachedAudioTranslation = function (audioFilename) {
                        AudioPlayerService.load(audioFilename)
                            .then(function () {
                            $scope.audioLoadingIndicatorIsShown = false;
                            AudioPlayerService.play();
                        });
                    };
                    /**
                     * Called when an audio file finishes loading.
                     * @param {string} audioFilename - Filename of the audio file that
                     *                                 finished loading.
                     */
                    var onFinishedLoadingAudio = function (audioFilename) {
                        var mostRecentlyRequestedAudioFilename = AudioPreloaderService.getMostRecentlyRequestedAudioFilename();
                        if ($scope.audioLoadingIndicatorIsShown &&
                            audioFilename === mostRecentlyRequestedAudioFilename) {
                            playCachedAudioTranslation(audioFilename);
                        }
                    };
                    AudioPreloaderService.setAudioLoadedCallback(onFinishedLoadingAudio);
                    var loadAndPlayAudioTranslation = function () {
                        $scope.audioLoadingIndicatorIsShown = true;
                        var audioTranslation = getVoiceoverInCurrentLanguage();
                        AudioPreloaderService.setMostRecentlyRequestedAudioFilename(audioTranslation.filename);
                        if (audioTranslation) {
                            if (isCached(audioTranslation)) {
                                playCachedAudioTranslation(audioTranslation.filename);
                            }
                            else if (!AudioPreloaderService.isLoadingAudioFile(audioTranslation.filename)) {
                                AudioPreloaderService.restartAudioPreloader(PlayerPositionService.getCurrentStateName());
                            }
                        }
                    };
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/AudioPreloaderService.ts":
/*!***********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/AudioPreloaderService.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to preload audio into AssetsBackendApiService's cache.
 */
__webpack_require__(/*! domain/utilities/LanguageUtilService.ts */ "./core/templates/dev/head/domain/utilities/LanguageUtilService.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationLanguageService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationLanguageService.ts");
__webpack_require__(/*! services/AssetsBackendApiService.ts */ "./core/templates/dev/head/services/AssetsBackendApiService.ts");
__webpack_require__(/*! services/ComputeGraphService.ts */ "./core/templates/dev/head/services/ComputeGraphService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
oppia.factory('AudioPreloaderService', [
    '$uibModal', 'AssetsBackendApiService', 'AudioTranslationLanguageService',
    'ComputeGraphService', 'ContextService',
    'LanguageUtilService', 'UrlInterpolationService',
    function ($uibModal, AssetsBackendApiService, AudioTranslationLanguageService, ComputeGraphService, ContextService, LanguageUtilService, UrlInterpolationService) {
        var MAX_NUM_AUDIO_FILES_TO_DOWNLOAD_SIMULTANEOUSLY = 3;
        var _filenamesOfAudioCurrentlyDownloading = [];
        var _filenamesOfAudioToBeDownloaded = [];
        var _exploration = null;
        var _audioLoadedCallback = null;
        var _mostRecentlyRequestedAudioFilename = null;
        var _init = function (exploration) {
            _exploration = exploration;
        };
        var _getAudioFilenamesInBfsOrder = function (sourceStateName) {
            var languageCode = AudioTranslationLanguageService
                .getCurrentAudioLanguageCode();
            var stateNamesInBfsOrder = ComputeGraphService.computeBfsTraversalOfStates(_exploration.getInitialState().name, _exploration.getStates(), sourceStateName);
            var audioFilenames = [];
            var allAudioTranslations = _exploration.getAllVoiceovers(languageCode);
            stateNamesInBfsOrder.forEach(function (stateName) {
                var allAudioTranslationsForState = allAudioTranslations[stateName];
                allAudioTranslationsForState.forEach(function (audioTranslation) {
                    audioFilenames.push(audioTranslation.filename);
                });
            });
            return audioFilenames;
        };
        var _loadAudio = function (audioFilename) {
            AssetsBackendApiService.loadAudio(ContextService.getExplorationId(), audioFilename).then(function (loadedAudio) {
                for (var i = 0; i < _filenamesOfAudioCurrentlyDownloading.length; i++) {
                    if (_filenamesOfAudioCurrentlyDownloading[i] ===
                        loadedAudio.filename) {
                        _filenamesOfAudioCurrentlyDownloading.splice(i, 1);
                        break;
                    }
                }
                if (_filenamesOfAudioToBeDownloaded.length > 0) {
                    var nextAudioFilename = _filenamesOfAudioToBeDownloaded.shift();
                    _filenamesOfAudioCurrentlyDownloading.push(nextAudioFilename);
                    _loadAudio(nextAudioFilename);
                }
                if (_audioLoadedCallback) {
                    _audioLoadedCallback(loadedAudio.filename);
                }
            });
        };
        var _kickOffAudioPreloader = function (sourceStateName) {
            _filenamesOfAudioToBeDownloaded =
                _getAudioFilenamesInBfsOrder(sourceStateName);
            while (_filenamesOfAudioCurrentlyDownloading.length <
                MAX_NUM_AUDIO_FILES_TO_DOWNLOAD_SIMULTANEOUSLY &&
                _filenamesOfAudioToBeDownloaded.length > 0) {
                var audioFilename = _filenamesOfAudioToBeDownloaded.shift();
                _filenamesOfAudioCurrentlyDownloading.push(audioFilename);
                _loadAudio(audioFilename);
            }
        };
        var _cancelPreloading = function () {
            AssetsBackendApiService.abortAllCurrentAudioDownloads();
            _filenamesOfAudioCurrentlyDownloading = [];
        };
        return {
            init: function (exploration) {
                _init(exploration);
            },
            kickOffAudioPreloader: function (sourceStateName) {
                _kickOffAudioPreloader(sourceStateName);
            },
            isLoadingAudioFile: function (filename) {
                return _filenamesOfAudioCurrentlyDownloading.indexOf(filename) !== -1;
            },
            restartAudioPreloader: function (sourceStateName) {
                _cancelPreloading();
                _kickOffAudioPreloader(sourceStateName);
            },
            setAudioLoadedCallback: function (audioLoadedCallback) {
                _audioLoadedCallback = audioLoadedCallback;
            },
            setMostRecentlyRequestedAudioFilename: function (mostRecentlyRequestedAudioFilename) {
                _mostRecentlyRequestedAudioFilename =
                    mostRecentlyRequestedAudioFilename;
            },
            clearMostRecentlyRequestedAudioFilename: function () {
                _mostRecentlyRequestedAudioFilename = null;
            },
            getMostRecentlyRequestedAudioFilename: function () {
                return _mostRecentlyRequestedAudioFilename;
            },
            getFilenamesOfAudioCurrentlyDownloading: function () {
                return _filenamesOfAudioCurrentlyDownloading;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/AudioTranslationLanguageService.ts":
/*!*********************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/AudioTranslationLanguageService.ts ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to manage the current language being
 * used for audio translations.
 */
__webpack_require__(/*! domain/utilities/BrowserCheckerService.ts */ "./core/templates/dev/head/domain/utilities/BrowserCheckerService.ts");
__webpack_require__(/*! domain/utilities/LanguageUtilService.ts */ "./core/templates/dev/head/domain/utilities/LanguageUtilService.ts");
oppia.factory('AudioTranslationLanguageService', [
    'BrowserCheckerService', 'LanguageUtilService',
    function (BrowserCheckerService, LanguageUtilService) {
        var _currentAudioLanguageCode = null;
        var _allAudioLanguageCodesInExploration = null;
        var _explorationLanguageCode = null;
        var _automaticTextToSpeechEnabled = null;
        var _languagesInExploration = [];
        var attemptToSetAudioLanguageToExplorationLanguage = function () {
            // We minimize the number of related languages, because we want to
            // pick the language that is the most directly related to the exploration
            // language. For example, this would prioritize Hindi over Hinglish
            // if both were available as audio languages.
            var numRelatedLanguages = Number.MAX_VALUE;
            _allAudioLanguageCodesInExploration.forEach(function (audioLanguageCode) {
                var relatedLanguageCodes = LanguageUtilService.getLanguageCodesRelatedToAudioLanguageCode(audioLanguageCode);
                if (relatedLanguageCodes.length < numRelatedLanguages &&
                    relatedLanguageCodes.indexOf(_explorationLanguageCode) !== -1) {
                    _currentAudioLanguageCode = audioLanguageCode;
                    numRelatedLanguages = relatedLanguageCodes.length;
                }
            });
        };
        var _isAutogeneratedAudioAllowed = function () {
            return _automaticTextToSpeechEnabled &&
                LanguageUtilService.supportsAutogeneratedAudio(_explorationLanguageCode);
        };
        var _init = function (allAudioLanguageCodesInExploration, preferredAudioLanguageCode, explorationLanguageCode, automaticTextToSpeechEnabled) {
            _allAudioLanguageCodesInExploration = allAudioLanguageCodesInExploration;
            _explorationLanguageCode = explorationLanguageCode;
            _automaticTextToSpeechEnabled = automaticTextToSpeechEnabled;
            _languagesInExploration = [];
            // Set the audio language that is chosen initially.
            // Use the following priority (highest to lowest):
            // 1. If the learner has a preferred audio language set, then set it to
            // that language if it is available.
            // 2. If the exploration language has a related audio language, then set
            // it to that.
            // 3. If only the autogenerated audio language is available, then set it
            // to that.
            // 4. Otherwise, just pick an available non-autogenerated audio language
            // at random.
            if (preferredAudioLanguageCode &&
                allAudioLanguageCodesInExploration.indexOf(preferredAudioLanguageCode) !== -1) {
                _currentAudioLanguageCode = preferredAudioLanguageCode;
            }
            if (_currentAudioLanguageCode === null) {
                attemptToSetAudioLanguageToExplorationLanguage();
            }
            if (_currentAudioLanguageCode === null &&
                _allAudioLanguageCodesInExploration.length >= 1) {
                _currentAudioLanguageCode = _allAudioLanguageCodesInExploration[0];
            }
            if (_currentAudioLanguageCode === null &&
                _allAudioLanguageCodesInExploration.length === 0 &&
                _isAutogeneratedAudioAllowed()) {
                _currentAudioLanguageCode =
                    LanguageUtilService.getAutogeneratedAudioLanguage(_explorationLanguageCode).id;
            }
            _allAudioLanguageCodesInExploration.forEach(function (languageCode) {
                var languageDescription = LanguageUtilService.getAudioLanguageDescription(languageCode);
                _languagesInExploration.push({
                    value: languageCode,
                    displayed: languageDescription
                });
            });
            if (_isAutogeneratedAudioAllowed()) {
                var autogeneratedAudioLanguage = LanguageUtilService.getAutogeneratedAudioLanguage(_explorationLanguageCode);
                _languagesInExploration.push({
                    value: autogeneratedAudioLanguage.id,
                    displayed: autogeneratedAudioLanguage.description
                });
            }
        };
        return {
            init: function (allAudioLanguageCodesInExploration, preferredAudioLanguageCode, explorationLanguageCode, automaticTextToSpeechEnabled) {
                _init(allAudioLanguageCodesInExploration, preferredAudioLanguageCode, explorationLanguageCode, automaticTextToSpeechEnabled);
            },
            getCurrentAudioLanguageCode: function () {
                return _currentAudioLanguageCode;
            },
            getCurrentAudioLanguageDescription: function () {
                return LanguageUtilService.getAudioLanguageDescription(_currentAudioLanguageCode);
            },
            getallAudioLanguageCodesInExploration: function () {
                return _allAudioLanguageCodesInExploration;
            },
            getLanguageOptionsForDropdown: function () {
                return _languagesInExploration;
            },
            clearCurrentAudioLanguageCode: function () {
                _currentAudioLanguageCode = null;
            },
            setCurrentAudioLanguageCode: function (newLanguageCode) {
                _currentAudioLanguageCode = newLanguageCode;
            },
            isAutogeneratedAudioAllowed: function () {
                return _isAutogeneratedAudioAllowed();
            },
            isAutogeneratedLanguageCodeSelected: function () {
                return LanguageUtilService.isAutogeneratedAudioLanguage(_currentAudioLanguageCode);
            },
            isAutomaticTextToSpeechEnabled: function () {
                return _automaticTextToSpeechEnabled;
            },
            getSpeechSynthesisLanguageCode: function () {
                var autogeneratedAudioLanguage = LanguageUtilService.getAutogeneratedAudioLanguage(_explorationLanguageCode);
                if (BrowserCheckerService.isMobileDevice()) {
                    return autogeneratedAudioLanguage.speechSynthesisCodeMobile;
                }
                return autogeneratedAudioLanguage.speechSynthesisCode;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts":
/*!********************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to manage what audio translations are currently
 * being played or paused.
 */
oppia.factory('AudioTranslationManagerService', [
    function () {
        // Audio translations for the main content of a card at the top.
        var _contentAudioTranslations = null;
        var _contentHtmlForAutogeneratedAudio = null;
        // Audio translations for everything other than the main content, such as
        // those for feedback, hints, and solutions.
        var _secondaryAudioTranslations = null;
        var _secondaryHtmlForAutogeneratedAudio = null;
        var _currentPrimaryComponentName = null;
        var _currentSecondaryComponentName = null;
        return {
            setContentAudioTranslations: function (audioTranslations, html, componentName) {
                _contentAudioTranslations = audioTranslations;
                _contentHtmlForAutogeneratedAudio = html;
                _currentPrimaryComponentName = componentName;
            },
            setSecondaryAudioTranslations: function (audioTranslations, html, componentName) {
                _secondaryAudioTranslations = audioTranslations;
                _secondaryHtmlForAutogeneratedAudio = html;
                _currentSecondaryComponentName = componentName;
            },
            clearSecondaryAudioTranslations: function () {
                _secondaryAudioTranslations = null;
                _secondaryHtmlForAutogeneratedAudio = null;
                _currentSecondaryComponentName = null;
            },
            getCurrentAudioTranslations: function () {
                if (_secondaryAudioTranslations !== null) {
                    return _secondaryAudioTranslations;
                }
                return _contentAudioTranslations;
            },
            getCurrentHtmlForAutogeneratedAudio: function () {
                if (_secondaryHtmlForAutogeneratedAudio !== null) {
                    return _secondaryHtmlForAutogeneratedAudio;
                }
                return _contentHtmlForAutogeneratedAudio;
            },
            getCurrentComponentName: function () {
                if (_currentSecondaryComponentName !== null) {
                    return _currentSecondaryComponentName;
                }
                return _currentPrimaryComponentName;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ContinueButtonDirective.ts":
/*!*************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ContinueButtonDirective.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for the Continue button in exploration player and
 * editor.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.directive('continueButton', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                onClickContinueButton: '&',
                isLearnAgainButton: '&',
                focusLabel: '@'
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                'continue_button_directive.html')
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ConversationSkinDirective.ts":
/*!***************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ConversationSkinDirective.ts ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Controller for the conversation skin.
 */
__webpack_require__(/*! components/ratings/rating-display/rating-display.directive.ts */ "./core/templates/dev/head/components/ratings/rating-display/rating-display.directive.ts");
__webpack_require__(/*! components/summary-tile-directives/exploration-summary-tile/exploration-summary-tile.directive.ts */ "./core/templates/dev/head/components/summary-tile-directives/exploration-summary-tile/exploration-summary-tile.directive.ts");
__webpack_require__(/*! components/summary-tile-directives/collection-summary-tile/collection-summary-tile.directive.ts */ "./core/templates/dev/head/components/summary-tile-directives/collection-summary-tile/collection-summary-tile.directive.ts");
__webpack_require__(/*! directives/AngularHtmlBindDirective.ts */ "./core/templates/dev/head/directives/AngularHtmlBindDirective.ts");
__webpack_require__(/*! pages/exploration_player/CorrectnessFooterDirective.ts */ "./core/templates/dev/head/pages/exploration_player/CorrectnessFooterDirective.ts");
__webpack_require__(/*! pages/exploration_player/ProgressNavDirective.ts */ "./core/templates/dev/head/pages/exploration_player/ProgressNavDirective.ts");
__webpack_require__(/*! pages/exploration_player/SupplementalCardDirective.ts */ "./core/templates/dev/head/pages/exploration_player/SupplementalCardDirective.ts");
__webpack_require__(/*! pages/exploration_player/TutorCardDirective.ts */ "./core/templates/dev/head/pages/exploration_player/TutorCardDirective.ts");
__webpack_require__(/*! domain/collection/GuestCollectionProgressService.ts */ "./core/templates/dev/head/domain/collection/GuestCollectionProgressService.ts");
__webpack_require__(/*! domain/exploration/EditableExplorationBackendApiService.ts */ "./core/templates/dev/head/domain/exploration/EditableExplorationBackendApiService.ts");
__webpack_require__(/*! domain/exploration/ReadOnlyExplorationBackendApiService.ts */ "./core/templates/dev/head/domain/exploration/ReadOnlyExplorationBackendApiService.ts");
__webpack_require__(/*! domain/question/PretestQuestionBackendApiService.ts */ "./core/templates/dev/head/domain/question/PretestQuestionBackendApiService.ts");
__webpack_require__(/*! domain/skill/ConceptCardBackendApiService.ts */ "./core/templates/dev/head/domain/skill/ConceptCardBackendApiService.ts");
__webpack_require__(/*! domain/skill/ConceptCardObjectFactory.ts */ "./core/templates/dev/head/domain/skill/ConceptCardObjectFactory.ts");
__webpack_require__(/*! domain/state_card/StateCardObjectFactory.ts */ "./core/templates/dev/head/domain/state_card/StateCardObjectFactory.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts");
__webpack_require__(/*! pages/exploration_player/CurrentInteractionService.ts */ "./core/templates/dev/head/pages/exploration_player/CurrentInteractionService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationPlayerStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationRecommendationsService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationRecommendationsService.ts");
__webpack_require__(/*! pages/exploration_player/FatigueDetectionService.ts */ "./core/templates/dev/head/pages/exploration_player/FatigueDetectionService.ts");
__webpack_require__(/*! pages/exploration_player/FeedbackPopupDirective.ts */ "./core/templates/dev/head/pages/exploration_player/FeedbackPopupDirective.ts");
__webpack_require__(/*! pages/exploration_player/HintsAndSolutionManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/HintsAndSolutionManagerService.ts");
__webpack_require__(/*! pages/exploration_player/ImagePreloaderService.ts */ "./core/templates/dev/head/pages/exploration_player/ImagePreloaderService.ts");
__webpack_require__(/*! pages/exploration_player/LearnerParamsService.ts */ "./core/templates/dev/head/pages/exploration_player/LearnerParamsService.ts");
__webpack_require__(/*! pages/exploration_player/LearnerViewRatingService.ts */ "./core/templates/dev/head/pages/exploration_player/LearnerViewRatingService.ts");
__webpack_require__(/*! pages/exploration_player/NumberAttemptsService.ts */ "./core/templates/dev/head/pages/exploration_player/NumberAttemptsService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! pages/exploration_player/PlayerCorrectnessFeedbackEnabledService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerCorrectnessFeedbackEnabledService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! pages/exploration_player/PretestEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/PretestEngineService.ts");
__webpack_require__(/*! pages/exploration_player/RefresherExplorationConfirmationModalService.ts */ "./core/templates/dev/head/pages/exploration_player/RefresherExplorationConfirmationModalService.ts");
__webpack_require__(/*! pages/exploration_player/StateClassifierMappingService.ts */ "./core/templates/dev/head/pages/exploration_player/StateClassifierMappingService.ts");
__webpack_require__(/*! pages/exploration_player/StatsReportingService.ts */ "./core/templates/dev/head/pages/exploration_player/StatsReportingService.ts");
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
__webpack_require__(/*! services/AutogeneratedAudioPlayerService.ts */ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/MessengerService.ts */ "./core/templates/dev/head/services/MessengerService.ts");
__webpack_require__(/*! services/PlaythroughService.ts */ "./core/templates/dev/head/services/PlaythroughService.ts");
__webpack_require__(/*! services/SiteAnalyticsService.ts */ "./core/templates/dev/head/services/SiteAnalyticsService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
__webpack_require__(/*! services/stateful/FocusManagerService.ts */ "./core/templates/dev/head/services/stateful/FocusManagerService.ts");
// Note: This file should be assumed to be in an IIFE, and the constants below
// should only be used within this file.
var TIME_FADEOUT_MSEC = 100;
var TIME_HEIGHT_CHANGE_MSEC = 500;
var TIME_FADEIN_MSEC = 100;
var TIME_NUM_CARDS_CHANGE_MSEC = 500;
oppia.animation('.conversation-skin-animate-tutor-card-on-narrow', function () {
    var tutorCardLeft, tutorCardWidth, tutorCardHeight, oppiaAvatarLeft;
    var tutorCardAnimatedLeft, tutorCardAnimatedWidth;
    var beforeAddClass = function (element, className, done) {
        if (className !== 'ng-hide') {
            done();
            return;
        }
        var tutorCard = element;
        var supplementalCard = $('.conversation-skin-supplemental-card-container');
        var oppiaAvatar = $('.conversation-skin-oppia-avatar.show-tutor-card');
        oppiaAvatarLeft = supplementalCard.position().left +
            supplementalCard.width() - oppiaAvatar.width();
        tutorCardLeft = tutorCard.position().left;
        tutorCardWidth = tutorCard.width();
        tutorCardHeight = tutorCard.height();
        if (tutorCard.offset().left + tutorCardWidth > oppiaAvatar.offset().left) {
            var animationLength = Math.min(oppiaAvatarLeft - tutorCard.offset().left, tutorCardWidth);
            tutorCardAnimatedLeft = tutorCardLeft + animationLength;
            tutorCardAnimatedWidth = tutorCardWidth - animationLength;
        }
        else {
            tutorCardAnimatedLeft = oppiaAvatarLeft;
            tutorCardAnimatedWidth = 0;
        }
        oppiaAvatar.hide();
        tutorCard.css({
            'min-width': 0
        });
        tutorCard.animate({
            left: tutorCardAnimatedLeft,
            width: tutorCardAnimatedWidth,
            height: 0,
            opacity: 1
        }, 500, function () {
            oppiaAvatar.show();
            tutorCard.css({
                left: '',
                width: '',
                height: '',
                opacity: '',
                'min-width': ''
            });
            done();
        });
    };
    var removeClass = function (element, className, done) {
        if (className !== 'ng-hide') {
            done();
            return;
        }
        var tutorCard = element;
        $('.conversation-skin-oppia-avatar.show-tutor-card').hide(0, function () {
            tutorCard.css({
                left: tutorCardAnimatedLeft,
                width: tutorCardAnimatedWidth,
                height: 0,
                opacity: 0,
                'min-width': 0
            });
            tutorCard.animate({
                left: tutorCardLeft,
                width: tutorCardWidth,
                height: tutorCardHeight,
                opacity: 1
            }, 500, function () {
                tutorCard.css({
                    left: '',
                    width: '',
                    height: '',
                    opacity: '',
                    'min-width': ''
                });
                done();
            });
        });
    };
    return {
        beforeAddClass: beforeAddClass,
        removeClass: removeClass
    };
});
oppia.animation('.conversation-skin-animate-tutor-card-content', function () {
    var animateCardChange = function (element, className, done) {
        if (className !== 'animate-card-change') {
            return;
        }
        var currentHeight = element.height();
        var expectedNextHeight = $('.conversation-skin-future-tutor-card ' +
            '.oppia-learner-view-card-content').height();
        // Fix the current card height, so that it does not change during the
        // animation, even though its contents might.
        element.css('height', currentHeight);
        jQuery(element).animate({
            opacity: 0
        }, TIME_FADEOUT_MSEC).animate({
            height: expectedNextHeight
        }, TIME_HEIGHT_CHANGE_MSEC).animate({
            opacity: 1
        }, TIME_FADEIN_MSEC, function () {
            element.css('height', '');
            done();
        });
        return function (cancel) {
            if (cancel) {
                element.css('opacity', '1.0');
                element.css('height', '');
                element.stop();
            }
        };
    };
    return {
        addClass: animateCardChange
    };
});
oppia.animation('.conversation-skin-animate-cards', function () {
    // This removes the newly-added class once the animation is finished.
    var animateCards = function (element, className, done) {
        var tutorCardElt = jQuery(element).find('.conversation-skin-main-tutor-card');
        var supplementalCardElt = jQuery(element).find('.conversation-skin-supplemental-card-container');
        if (className === 'animate-to-two-cards') {
            var supplementalWidth = supplementalCardElt.width();
            supplementalCardElt.css({
                width: 0,
                'min-width': '0',
                opacity: '0'
            });
            supplementalCardElt.animate({
                width: supplementalWidth
            }, TIME_NUM_CARDS_CHANGE_MSEC, function () {
                supplementalCardElt.animate({
                    opacity: '1'
                }, TIME_FADEIN_MSEC, function () {
                    supplementalCardElt.css({
                        width: '',
                        'min-width': '',
                        opacity: ''
                    });
                    jQuery(element).removeClass('animate-to-two-cards');
                    done();
                });
            });
            return function (cancel) {
                if (cancel) {
                    supplementalCardElt.css({
                        width: '',
                        'min-width': '',
                        opacity: ''
                    });
                    supplementalCardElt.stop();
                    jQuery(element).removeClass('animate-to-two-cards');
                }
            };
        }
        else if (className === 'animate-to-one-card') {
            supplementalCardElt.css({
                opacity: 0,
                'min-width': 0
            });
            supplementalCardElt.animate({
                width: 0
            }, TIME_NUM_CARDS_CHANGE_MSEC, function () {
                jQuery(element).removeClass('animate-to-one-card');
                done();
            });
            return function (cancel) {
                if (cancel) {
                    supplementalCardElt.css({
                        opacity: '',
                        'min-width': '',
                        width: ''
                    });
                    supplementalCardElt.stop();
                    jQuery(element).removeClass('animate-to-one-card');
                }
            };
        }
        else {
            return;
        }
    };
    return {
        addClass: animateCards
    };
});
oppia.directive('conversationSkin', [
    'UrlInterpolationService', 'UrlService', 'UserService',
    function (UrlInterpolationService, UrlService, UserService) {
        return {
            restrict: 'E',
            scope: {},
            link: function (scope) {
                var isIframed = UrlService.isIframed();
                scope.directiveTemplate = isIframed ?
                    UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                        'conversation_skin_embed_directive.html') :
                    UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                        'conversation_skin_directive.html');
            },
            template: '<div ng-include="directiveTemplate"></div>',
            controller: [
                '$scope', '$timeout', '$rootScope', '$window', '$translate', '$http',
                '$location', '$q', 'MessengerService', 'AlertsService',
                'ExplorationEngineService', 'UrlService', 'FocusManagerService',
                'LearnerViewRatingService', 'WindowDimensionsService',
                'EditableExplorationBackendApiService', 'PlayerTranscriptService',
                'LearnerParamsService', 'ExplorationRecommendationsService',
                'ReadOnlyExplorationBackendApiService', 'PlayerPositionService',
                'StatsReportingService', 'SiteAnalyticsService',
                'PretestQuestionBackendApiService', 'StateCardObjectFactory',
                'CONTENT_FOCUS_LABEL_PREFIX', 'TWO_CARD_THRESHOLD_PX',
                'CONTINUE_BUTTON_FOCUS_LABEL', 'EVENT_ACTIVE_CARD_CHANGED',
                'EVENT_NEW_CARD_AVAILABLE', 'FEEDBACK_POPOVER_PATH',
                'FatigueDetectionService', 'GuestCollectionProgressService',
                'NumberAttemptsService', 'PlayerCorrectnessFeedbackEnabledService',
                'ContextService', 'ConceptCardBackendApiService',
                'ConceptCardObjectFactory',
                'RefresherExplorationConfirmationModalService', 'PAGE_CONTEXT',
                'EXPLORATION_SUMMARY_DATA_URL_TEMPLATE', 'INTERACTION_SPECS',
                'EVENT_NEW_CARD_OPENED', 'HintsAndSolutionManagerService',
                'AudioTranslationManagerService', 'EVENT_AUTOPLAY_AUDIO',
                'COMPONENT_NAME_FEEDBACK', 'AutogeneratedAudioPlayerService',
                'StateClassifierMappingService', 'ImagePreloaderService',
                'PlaythroughService', 'PretestEngineService',
                'WHITELISTED_COLLECTION_IDS_FOR_SAVING_GUEST_PROGRESS',
                'ExplorationPlayerStateService', 'INTERACTION_DISPLAY_MODE_INLINE',
                'CurrentInteractionService', 'UserService',
                function ($scope, $timeout, $rootScope, $window, $translate, $http, $location, $q, MessengerService, AlertsService, ExplorationEngineService, UrlService, FocusManagerService, LearnerViewRatingService, WindowDimensionsService, EditableExplorationBackendApiService, PlayerTranscriptService, LearnerParamsService, ExplorationRecommendationsService, ReadOnlyExplorationBackendApiService, PlayerPositionService, StatsReportingService, SiteAnalyticsService, PretestQuestionBackendApiService, StateCardObjectFactory, CONTENT_FOCUS_LABEL_PREFIX, TWO_CARD_THRESHOLD_PX, CONTINUE_BUTTON_FOCUS_LABEL, EVENT_ACTIVE_CARD_CHANGED, EVENT_NEW_CARD_AVAILABLE, FEEDBACK_POPOVER_PATH, FatigueDetectionService, GuestCollectionProgressService, NumberAttemptsService, PlayerCorrectnessFeedbackEnabledService, ContextService, ConceptCardBackendApiService, ConceptCardObjectFactory, RefresherExplorationConfirmationModalService, PAGE_CONTEXT, EXPLORATION_SUMMARY_DATA_URL_TEMPLATE, INTERACTION_SPECS, EVENT_NEW_CARD_OPENED, HintsAndSolutionManagerService, AudioTranslationManagerService, EVENT_AUTOPLAY_AUDIO, COMPONENT_NAME_FEEDBACK, AutogeneratedAudioPlayerService, StateClassifierMappingService, ImagePreloaderService, PlaythroughService, PretestEngineService, WHITELISTED_COLLECTION_IDS_FOR_SAVING_GUEST_PROGRESS, ExplorationPlayerStateService, INTERACTION_DISPLAY_MODE_INLINE, CurrentInteractionService, UserService) {
                    $scope.CONTINUE_BUTTON_FOCUS_LABEL = CONTINUE_BUTTON_FOCUS_LABEL;
                    // The minimum width, in pixels, needed to be able to show two cards
                    // side-by-side.
                    var TIME_PADDING_MSEC = 250;
                    var TIME_SCROLL_MSEC = 600;
                    var MIN_CARD_LOADING_DELAY_MSEC = 950;
                    $scope.isLoggedIn = null;
                    UserService.getUserInfoAsync().then(function (userInfo) {
                        $scope.isLoggedIn = userInfo.isLoggedIn();
                    });
                    $scope.getFeedbackPopoverUrl = function () {
                        return UrlInterpolationService.getDirectiveTemplateUrl(FEEDBACK_POPOVER_PATH);
                    };
                    var hasInteractedAtLeastOnce = false;
                    $scope.answerIsBeingProcessed = false;
                    var _nextFocusLabel = null;
                    var _editorPreviewMode = ContextService.isInExplorationEditorPage();
                    // This variable is used only when viewport is narrow.
                    // Indicates whether the tutor card is displayed.
                    var tutorCardIsDisplayedIfNarrow = true;
                    $scope.explorationId = ExplorationEngineService.getExplorationId();
                    $scope.isInPreviewMode = ExplorationEngineService.isInPreviewMode();
                    $scope.isIframed = UrlService.isIframed();
                    $rootScope.loadingMessage = 'Loading';
                    $scope.hasFullyLoaded = false;
                    $scope.recommendedExplorationSummaries = null;
                    $scope.answerIsCorrect = false;
                    $scope.nextCard = null;
                    $scope.pendingCardWasSeenBefore = false;
                    $scope.isCorrectnessFeedbackEnabled = function () {
                        return PlayerCorrectnessFeedbackEnabledService.isEnabled();
                    };
                    $scope.isCorrectnessFooterEnabled = function () {
                        return ($scope.answerIsCorrect && $scope.isCorrectnessFeedbackEnabled() &&
                            PlayerPositionService.hasLearnerJustSubmittedAnAnswer());
                    };
                    $scope.isLearnAgainButton = function () {
                        var conceptCardIsBeingShown = ($scope.displayedCard.getStateName() === null &&
                            !ExplorationPlayerStateService.isInPretestMode());
                        if (conceptCardIsBeingShown) {
                            return false;
                        }
                        var interaction = $scope.displayedCard.getInteraction();
                        if (INTERACTION_SPECS[interaction.id].is_linear) {
                            return false;
                        }
                        return ($scope.pendingCardWasSeenBefore && !$scope.answerIsCorrect &&
                            $scope.isCorrectnessFeedbackEnabled());
                    };
                    var _getRandomSuffix = function () {
                        // This is a bit of a hack. When a refresh to a $scope variable
                        // happens,
                        // AngularJS compares the new value of the variable to its previous
                        // value. If they are the same, then the variable is not updated.
                        // Appending a random suffix makes the new value different from the
                        // previous one, and thus indirectly forces a refresh.
                        var randomSuffix = '';
                        var N = Math.round(Math.random() * 1000);
                        for (var i = 0; i < N; i++) {
                            randomSuffix += ' ';
                        }
                        return randomSuffix;
                    };
                    $scope.OPPIA_AVATAR_IMAGE_URL = (UrlInterpolationService.getStaticImageUrl('/avatar/oppia_avatar_100px.svg'));
                    $scope.getStaticImageUrl = (UrlInterpolationService.getStaticImageUrl);
                    $scope.displayedCard = null;
                    var explorationActuallyStarted = false;
                    $scope.upcomingInlineInteractionHtml = null;
                    $scope.DEFAULT_TWITTER_SHARE_MESSAGE_PLAYER =
                        GLOBALS.DEFAULT_TWITTER_SHARE_MESSAGE_PLAYER;
                    $scope.getContentFocusLabel = function (index) {
                        return CONTENT_FOCUS_LABEL_PREFIX + index;
                    };
                    // If the exploration is iframed, send data to its parent about its
                    // height so that the parent can be resized as necessary.
                    $scope.lastRequestedHeight = 0;
                    $scope.lastRequestedScroll = false;
                    $scope.adjustPageHeight = function (scroll, callback) {
                        $timeout(function () {
                            var newHeight = document.body.scrollHeight;
                            if (Math.abs($scope.lastRequestedHeight - newHeight) > 50.5 ||
                                (scroll && !$scope.lastRequestedScroll)) {
                                // Sometimes setting iframe height to the exact content height
                                // still produces scrollbar, so adding 50 extra px.
                                newHeight += 50;
                                MessengerService.sendMessage(MessengerService.HEIGHT_CHANGE, {
                                    height: newHeight,
                                    scroll: scroll
                                });
                                $scope.lastRequestedHeight = newHeight;
                                $scope.lastRequestedScroll = scroll;
                            }
                            if (callback) {
                                callback();
                            }
                        }, 100);
                    };
                    $scope.reloadExploration = function () {
                        $window.location.reload();
                    };
                    $scope.isOnTerminalCard = function () {
                        return ($scope.displayedCard && $scope.displayedCard.isTerminal());
                    };
                    var isSupplementalCardNonempty = function (card) {
                        return !card.isInteractionInline();
                    };
                    $scope.isCurrentSupplementalCardNonempty = function () {
                        return $scope.displayedCard && isSupplementalCardNonempty($scope.displayedCard);
                    };
                    $scope.isSupplementalNavShown = function () {
                        if ($scope.displayedCard.getStateName() === null &&
                            !ExplorationPlayerStateService.isInPretestMode()) {
                            return false;
                        }
                        var interaction = $scope.displayedCard.getInteraction();
                        return (Boolean(interaction.id) &&
                            INTERACTION_SPECS[interaction.id].show_generic_submit_button &&
                            $scope.isCurrentCardAtEndOfTranscript());
                    };
                    var _recordLeaveForRefresherExp = function (refresherExpId) {
                        if (!_editorPreviewMode) {
                            StatsReportingService.recordLeaveForRefresherExp(PlayerPositionService.getCurrentStateName(), refresherExpId);
                        }
                    };
                    // Navigates to the currently-active card, and resets the
                    // 'show previous responses' setting.
                    var _navigateToDisplayedCard = function () {
                        var index = PlayerPositionService.getDisplayedCardIndex();
                        $scope.displayedCard = PlayerTranscriptService.getCard(index);
                        $rootScope.$broadcast(EVENT_ACTIVE_CARD_CHANGED);
                        $scope.$broadcast(EVENT_AUTOPLAY_AUDIO);
                        /* A hash value is added to URL for scrolling to Oppia feedback
                           when answer is submitted by user in mobile view. This hash value
                           has to be reset each time a new card is loaded to prevent
                           unwanted scrolling in the new card. */
                        $location.hash(null);
                        $scope.pendingCardWasSeenBefore = false;
                        if (PlayerTranscriptService.hasEncounteredStateBefore($scope.displayedCard.getStateName())) {
                            $scope.pendingCardWasSeenBefore = true;
                        }
                        // We must cancel the autogenerated audio player here, or else a
                        // bug where the autogenerated audio player generates duplicate
                        // utterances occurs.
                        AutogeneratedAudioPlayerService.cancel();
                        tutorCardIsDisplayedIfNarrow = true;
                        if (_nextFocusLabel && PlayerTranscriptService.isLastCard(index)) {
                            FocusManagerService.setFocusIfOnDesktop(_nextFocusLabel);
                        }
                        else {
                            FocusManagerService.setFocusIfOnDesktop($scope.getContentFocusLabel(index));
                        }
                    };
                    $scope.returnToExplorationAfterConceptCard = function () {
                        PlayerTranscriptService.addPreviousCard();
                        var numCards = PlayerTranscriptService.getNumCards();
                        PlayerPositionService.setDisplayedCardIndex(numCards - 1);
                    };
                    var animateToTwoCards = function (doneCallback) {
                        $scope.isAnimatingToTwoCards = true;
                        $timeout(function () {
                            $scope.isAnimatingToTwoCards = false;
                            if (doneCallback) {
                                doneCallback();
                            }
                        }, TIME_NUM_CARDS_CHANGE_MSEC + TIME_FADEIN_MSEC +
                            TIME_PADDING_MSEC);
                    };
                    var animateToOneCard = function (doneCallback) {
                        $scope.isAnimatingToOneCard = true;
                        $timeout(function () {
                            $scope.isAnimatingToOneCard = false;
                            if (doneCallback) {
                                doneCallback();
                            }
                        }, TIME_NUM_CARDS_CHANGE_MSEC);
                    };
                    $scope.isCurrentCardAtEndOfTranscript = function () {
                        return PlayerTranscriptService.isLastCard(PlayerPositionService.getDisplayedCardIndex());
                    };
                    var _addNewCard = function (newCard) {
                        PlayerTranscriptService.addNewCard(newCard);
                        var totalNumCards = PlayerTranscriptService.getNumCards();
                        var previousSupplementalCardIsNonempty = (totalNumCards > 1 &&
                            isSupplementalCardNonempty(PlayerTranscriptService.getCard(totalNumCards - 2)));
                        var nextSupplementalCardIsNonempty = isSupplementalCardNonempty(PlayerTranscriptService.getLastCard());
                        if (totalNumCards > 1 &&
                            $scope.canWindowShowTwoCards() &&
                            !previousSupplementalCardIsNonempty &&
                            nextSupplementalCardIsNonempty) {
                            PlayerPositionService.setDisplayedCardIndex(totalNumCards - 1);
                            animateToTwoCards(function () { });
                        }
                        else if (totalNumCards > 1 &&
                            $scope.canWindowShowTwoCards() &&
                            previousSupplementalCardIsNonempty &&
                            !nextSupplementalCardIsNonempty) {
                            animateToOneCard(function () {
                                PlayerPositionService.setDisplayedCardIndex(totalNumCards - 1);
                            });
                        }
                        else {
                            PlayerPositionService.setDisplayedCardIndex(totalNumCards - 1);
                        }
                        if ($scope.displayedCard.isTerminal()) {
                            $scope.isRefresherExploration = false;
                            $scope.parentExplorationIds =
                                UrlService.getQueryFieldValuesAsList('parent');
                            var recommendedExplorationIds = [];
                            var includeAutogeneratedRecommendations = false;
                            if ($scope.parentExplorationIds.length > 0) {
                                $scope.isRefresherExploration = true;
                                var parentExplorationId = $scope.parentExplorationIds[$scope.parentExplorationIds.length - 1];
                                recommendedExplorationIds.push(parentExplorationId);
                            }
                            else {
                                recommendedExplorationIds =
                                    ExplorationEngineService.getAuthorRecommendedExpIds();
                                includeAutogeneratedRecommendations = true;
                            }
                            ExplorationRecommendationsService.getRecommendedSummaryDicts(recommendedExplorationIds, includeAutogeneratedRecommendations, function (summaries) {
                                $scope.recommendedExplorationSummaries = summaries;
                            });
                        }
                    };
                    var _initializeDirectiveComponents = function (initialCard, focusLabel) {
                        _addNewCard(initialCard);
                        $scope.nextCard = initialCard;
                        $rootScope.$broadcast('playerStateChange', $scope.nextCard.getStateName());
                        FocusManagerService.setFocusIfOnDesktop(focusLabel);
                        $rootScope.loadingMessage = '';
                        $scope.hasFullyLoaded = true;
                        // If the exploration is embedded, use the exploration language
                        // as site language. If the exploration language is not supported
                        // as site language, English is used as default.
                        var langCodes = constants.SUPPORTED_SITE_LANGUAGES.map(function (language) {
                            return language.id;
                        });
                        if ($scope.isIframed) {
                            var explorationLanguageCode = (ExplorationPlayerStateService.getLanguageCode());
                            if (langCodes.indexOf(explorationLanguageCode) !== -1) {
                                $translate.use(explorationLanguageCode);
                            }
                            else {
                                $translate.use('en');
                            }
                        }
                        $scope.adjustPageHeight(false, null);
                        $window.scrollTo(0, 0);
                        // The timeout is needed in order to give the recipient of the
                        // broadcast sufficient time to load.
                        $timeout(function () {
                            $rootScope.$broadcast(EVENT_NEW_CARD_OPENED, initialCard);
                        });
                    };
                    $scope.initializePage = function () {
                        hasInteractedAtLeastOnce = false;
                        $scope.recommendedExplorationSummaries = null;
                        PlayerPositionService.init(_navigateToDisplayedCard);
                        ExplorationPlayerStateService.initializePlayer(_initializeDirectiveComponents);
                    };
                    $rootScope.$on('playerStateChange', function (evt, newStateName) {
                        if (!newStateName) {
                            return;
                        }
                        // To restart the preloader for the new state if required.
                        if (!_editorPreviewMode) {
                            ImagePreloaderService.onStateChange(newStateName);
                        }
                        // Ensure the transition to a terminal state properly logs the end
                        // of the exploration.
                        if (!_editorPreviewMode && $scope.nextCard.isTerminal()) {
                            StatsReportingService.recordExplorationCompleted(newStateName, LearnerParamsService.getAllParams());
                            // If the user is a guest, has completed this exploration within
                            // the context of a collection, and the collection is whitelisted,
                            // record their temporary progress.
                            var collectionAllowsGuestProgress = (WHITELISTED_COLLECTION_IDS_FOR_SAVING_GUEST_PROGRESS.indexOf(GLOBALS.collectionId) !== -1);
                            if (collectionAllowsGuestProgress && !$scope.isLoggedIn) {
                                GuestCollectionProgressService.
                                    recordExplorationCompletedInCollection(GLOBALS.collectionId, $scope.explorationId);
                            }
                            // For single state explorations, when the exploration reaches the
                            // terminal state and explorationActuallyStarted is false, record
                            // exploration actual start event.
                            if (!explorationActuallyStarted) {
                                StatsReportingService.recordExplorationActuallyStarted(newStateName);
                                explorationActuallyStarted = true;
                            }
                        }
                    });
                    $scope.submitAnswer = function (answer, interactionRulesService) {
                        // Safety check to prevent double submissions from occurring.
                        if ($scope.answerIsBeingProcessed ||
                            !$scope.isCurrentCardAtEndOfTranscript() ||
                            $scope.displayedCard.isCompleted()) {
                            return;
                        }
                        if (!$scope.isInPreviewMode) {
                            FatigueDetectionService.recordSubmissionTimestamp();
                            if (FatigueDetectionService.isSubmittingTooFast()) {
                                FatigueDetectionService.displayTakeBreakMessage();
                                $scope.$broadcast('oppiaFeedbackAvailable');
                                return;
                            }
                        }
                        NumberAttemptsService.submitAttempt();
                        $scope.answerIsBeingProcessed = true;
                        hasInteractedAtLeastOnce = true;
                        PlayerTranscriptService.addNewInput(answer, false);
                        var timeAtServerCall = new Date().getTime();
                        PlayerPositionService.recordAnswerSubmission();
                        var currentEngineService = ExplorationPlayerStateService.getCurrentEngineService();
                        $scope.answerIsCorrect = currentEngineService.submitAnswer(answer, interactionRulesService, function (nextCard, refreshInteraction, feedbackHtml, feedbackAudioTranslations, refresherExplorationId, missingPrerequisiteSkillId, remainOnCurrentCard, wasOldStateInitial, isFirstHit, isFinalQuestion, focusLabel) {
                            $scope.nextCard = nextCard;
                            if (!_editorPreviewMode &&
                                !ExplorationPlayerStateService.isInPretestMode()) {
                                var oldStateName = PlayerPositionService.getCurrentStateName();
                                if (!remainOnCurrentCard) {
                                    StatsReportingService.recordStateTransition(oldStateName, nextCard.getStateName(), answer, LearnerParamsService.getAllParams(), isFirstHit);
                                    StatsReportingService.recordStateCompleted(oldStateName);
                                }
                                if (nextCard.isTerminal()) {
                                    StatsReportingService.recordStateCompleted(nextCard.getStateName());
                                }
                                if (wasOldStateInitial && !explorationActuallyStarted) {
                                    StatsReportingService.recordExplorationActuallyStarted(oldStateName);
                                    explorationActuallyStarted = true;
                                }
                            }
                            if (!ExplorationPlayerStateService.isInPretestMode()) {
                                $rootScope.$broadcast('playerStateChange', nextCard.getStateName());
                            }
                            // Do not wait if the interaction is supplemental -- there's
                            // already a delay bringing in the help card.
                            var millisecsLeftToWait = (!$scope.displayedCard.isInteractionInline() ? 1.0 :
                                Math.max(MIN_CARD_LOADING_DELAY_MSEC - (new Date().getTime() - timeAtServerCall), 1.0));
                            $timeout(function () {
                                $scope.$broadcast('oppiaFeedbackAvailable');
                                var pairs = (PlayerTranscriptService.getLastCard().
                                    getInputResponsePairs());
                                var lastAnswerFeedbackPair = pairs[pairs.length - 1];
                                $scope.$broadcast(EVENT_AUTOPLAY_AUDIO, {
                                    audioTranslations: feedbackAudioTranslations,
                                    html: feedbackHtml,
                                    componentName: COMPONENT_NAME_FEEDBACK
                                });
                                if (remainOnCurrentCard) {
                                    // Stay on the same card.
                                    HintsAndSolutionManagerService.recordWrongAnswer();
                                    PlayerTranscriptService.addNewResponse(feedbackHtml);
                                    var helpCardAvailable = false;
                                    if (feedbackHtml &&
                                        !$scope.displayedCard.isInteractionInline()) {
                                        helpCardAvailable = true;
                                    }
                                    if (helpCardAvailable) {
                                        $scope.$broadcast('helpCardAvailable', {
                                            helpCardHtml: feedbackHtml,
                                            hasContinueButton: false
                                        });
                                    }
                                    if (missingPrerequisiteSkillId) {
                                        $scope.displayedCard.markAsCompleted();
                                        ConceptCardBackendApiService.fetchConceptCard(missingPrerequisiteSkillId).then(function (conceptCardBackendDict) {
                                            $scope.conceptCard =
                                                ConceptCardObjectFactory.createFromBackendDict(conceptCardBackendDict);
                                            if (helpCardAvailable) {
                                                $scope.$broadcast('helpCardAvailable', {
                                                    helpCardHtml: feedbackHtml,
                                                    hasContinueButton: true
                                                });
                                            }
                                        });
                                    }
                                    if (refreshInteraction) {
                                        // Replace the previous interaction with another of the
                                        // same type.
                                        _nextFocusLabel =
                                            FocusManagerService.generateFocusLabel();
                                        PlayerTranscriptService.updateLatestInteractionHtml($scope.displayedCard.getInteractionHtml(_nextFocusLabel) + _getRandomSuffix());
                                    }
                                    $scope.redirectToRefresherExplorationConfirmed = false;
                                    if (refresherExplorationId) {
                                        // TODO(bhenning): Add tests to verify the event is
                                        // properly recorded.
                                        var confirmRedirection = function () {
                                            $scope.redirectToRefresherExplorationConfirmed = true;
                                            _recordLeaveForRefresherExp(refresherExplorationId);
                                        };
                                        $http.get(EXPLORATION_SUMMARY_DATA_URL_TEMPLATE, {
                                            params: {
                                                stringified_exp_ids: JSON.stringify([refresherExplorationId])
                                            }
                                        }).then(function (response) {
                                            if (response.data.summaries.length > 0) {
                                                RefresherExplorationConfirmationModalService.
                                                    displayRedirectConfirmationModal(refresherExplorationId, confirmRedirection);
                                            }
                                        });
                                    }
                                    FocusManagerService.setFocusIfOnDesktop(_nextFocusLabel);
                                    scrollToBottom();
                                }
                                else {
                                    // There is a new card. If there is no feedback, move on
                                    // immediately. Otherwise, give the learner a chance to read
                                    // the feedback, and display a 'Continue' button.
                                    $scope.displayedCard.markAsCompleted();
                                    if (isFinalQuestion) {
                                        $scope.moveToExploration = true;
                                        if (feedbackHtml) {
                                            PlayerTranscriptService.addNewResponse(feedbackHtml);
                                            if (!$scope.displayedCard.isInteractionInline()) {
                                                $scope.$broadcast('helpCardAvailable', {
                                                    helpCardHtml: feedbackHtml,
                                                    hasContinueButton: true
                                                });
                                            }
                                        }
                                        else {
                                            $scope.showUpcomingCard();
                                        }
                                        $scope.answerIsBeingProcessed = false;
                                        return;
                                    }
                                    FatigueDetectionService.reset();
                                    NumberAttemptsService.reset();
                                    var _isNextInteractionInline = $scope.nextCard.isInteractionInline();
                                    $scope.upcomingInlineInteractionHtml = (_isNextInteractionInline ?
                                        $scope.nextCard.getInteractionHtml() : '');
                                    $scope.upcomingInteractionInstructions =
                                        $scope.nextCard.getInteractionInstructions();
                                    if (feedbackHtml) {
                                        if (PlayerTranscriptService.hasEncounteredStateBefore(nextCard.getStateName())) {
                                            $scope.pendingCardWasSeenBefore = true;
                                        }
                                        PlayerTranscriptService.addNewResponse(feedbackHtml);
                                        if (!$scope.displayedCard.isInteractionInline()) {
                                            $scope.$broadcast('helpCardAvailable', {
                                                helpCardHtml: feedbackHtml,
                                                hasContinueButton: true
                                            });
                                        }
                                        $rootScope.$broadcast(EVENT_NEW_CARD_AVAILABLE);
                                        _nextFocusLabel = $scope.CONTINUE_BUTTON_FOCUS_LABEL;
                                        FocusManagerService.setFocusIfOnDesktop(_nextFocusLabel);
                                        scrollToBottom();
                                    }
                                    else {
                                        PlayerTranscriptService.addNewResponse(feedbackHtml);
                                        // If there is no feedback, it immediately moves on
                                        // to next card. Therefore $scope.answerIsCorrect needs
                                        // to be set to false before it proceeds to next card.
                                        $scope.answerIsCorrect = false;
                                        $scope.showPendingCard();
                                    }
                                    CurrentInteractionService.clearPresubmitHooks();
                                }
                                $scope.answerIsBeingProcessed = false;
                            }, millisecsLeftToWait);
                        });
                    };
                    CurrentInteractionService.setOnSubmitFn($scope.submitAnswer);
                    $scope.startCardChangeAnimation = false;
                    $scope.showPendingCard = function () {
                        $scope.startCardChangeAnimation = true;
                        ExplorationPlayerStateService.recordNewCardAdded();
                        $timeout(function () {
                            _addNewCard($scope.nextCard);
                            $scope.upcomingInlineInteractionHtml = null;
                            $scope.upcomingInteractionInstructions = null;
                        }, TIME_FADEOUT_MSEC + 0.1 * TIME_HEIGHT_CHANGE_MSEC);
                        $timeout(function () {
                            FocusManagerService.setFocusIfOnDesktop(_nextFocusLabel);
                            scrollToTop();
                        }, TIME_FADEOUT_MSEC + TIME_HEIGHT_CHANGE_MSEC +
                            0.5 * TIME_FADEIN_MSEC);
                        $timeout(function () {
                            $scope.startCardChangeAnimation = false;
                        }, TIME_FADEOUT_MSEC + TIME_HEIGHT_CHANGE_MSEC + TIME_FADEIN_MSEC +
                            TIME_PADDING_MSEC);
                        $rootScope.$broadcast(EVENT_NEW_CARD_OPENED, $scope.nextCard);
                    };
                    $scope.showUpcomingCard = function () {
                        var currentIndex = PlayerPositionService.getDisplayedCardIndex();
                        var conceptCardIsBeingShown = ($scope.displayedCard.getStateName() === null &&
                            !ExplorationPlayerStateService.isInPretestMode());
                        if (conceptCardIsBeingShown &&
                            PlayerTranscriptService.isLastCard(currentIndex)) {
                            $scope.returnToExplorationAfterConceptCard();
                            return;
                        }
                        if ($scope.moveToExploration) {
                            $scope.moveToExploration = false;
                            ExplorationPlayerStateService.moveToExploration(_initializeDirectiveComponents);
                            return;
                        }
                        if ($scope.displayedCard.isCompleted() &&
                            ($scope.nextCard.getStateName() ===
                                $scope.displayedCard.getStateName())) {
                            ExplorationPlayerStateService.recordNewCardAdded();
                            _addNewCard(StateCardObjectFactory.createNewCard(null, $scope.conceptCard.getExplanation(), null, null, null, null));
                            return;
                        }
                        /* This is for the following situation:
                           if A->B->C is the arrangement of cards and C redirected to A,
                           then after this, B and C are visited cards and hence
                           pendingCardWasSeenBefore would be true during both these
                           transitions and as answerIsCorrect is set to false below,
                           Continue would briefly change to Learn Again (after it is
                           clicked) during these transitions which is not required.
                           Also, if the 'if' check is not there, Learn Again button would
                           briefly switched to Continue before going to next card. */
                        if ($scope.answerIsCorrect) {
                            $scope.pendingCardWasSeenBefore = false;
                        }
                        $scope.answerIsCorrect = false;
                        $scope.showPendingCard();
                    };
                    var scrollToBottom = function () {
                        $timeout(function () {
                            var tutorCard = $('.conversation-skin-main-tutor-card');
                            if (tutorCard.length === 0) {
                                return;
                            }
                            var tutorCardBottom = (tutorCard.offset().top + tutorCard.outerHeight());
                            if ($(window).scrollTop() +
                                $(window).height() < tutorCardBottom) {
                                $('html, body').animate({
                                    scrollTop: tutorCardBottom - $(window).height() + 12
                                }, {
                                    duration: TIME_SCROLL_MSEC,
                                    easing: 'easeOutQuad'
                                });
                            }
                        }, 100);
                    };
                    var scrollToTop = function () {
                        $timeout(function () {
                            $('html, body').animate({
                                scrollTop: 0
                            }, 800, 'easeOutQuart');
                            return false;
                        });
                    };
                    $scope.submitUserRating = function (ratingValue) {
                        LearnerViewRatingService.submitUserRating(ratingValue);
                    };
                    $scope.$on('ratingUpdated', function () {
                        $scope.userRating = LearnerViewRatingService.getUserRating();
                    });
                    $window.addEventListener('beforeunload', function (e) {
                        if ($scope.redirectToRefresherExplorationConfirmed) {
                            return;
                        }
                        if (hasInteractedAtLeastOnce && !$scope.isInPreviewMode &&
                            !$scope.displayedCard.isTerminal()) {
                            StatsReportingService.recordMaybeLeaveEvent(PlayerTranscriptService.getLastStateName(), LearnerParamsService.getAllParams());
                            var confirmationMessage = ('If you navigate away from this page, your progress on the ' +
                                'exploration will be lost.');
                            (e || $window.event).returnValue = confirmationMessage;
                            return confirmationMessage;
                        }
                    });
                    // Returns whether the screen is wide enough to fit two
                    // cards (e.g., the tutor and supplemental cards) side-by-side.
                    $scope.canWindowShowTwoCards = function () {
                        return WindowDimensionsService.getWidth() > TWO_CARD_THRESHOLD_PX;
                    };
                    $window.onresize = function () {
                        $scope.adjustPageHeight(false, null);
                    };
                    $window.addEventListener('scroll', function () {
                        fixSupplementOnScroll();
                    });
                    var fixSupplementOnScroll = function () {
                        var supplementCard = $('div.conversation-skin-supplemental-card');
                        var topMargin = $('.navbar-container').height() - 20;
                        if ($(window).scrollTop() > topMargin) {
                            supplementCard.addClass('conversation-skin-supplemental-card-fixed');
                        }
                        else {
                            supplementCard.removeClass('conversation-skin-supplemental-card-fixed');
                        }
                    };
                    $scope.initializePage();
                    LearnerViewRatingService.init(function (userRating) {
                        $scope.userRating = userRating;
                    });
                    $scope.collectionId = GLOBALS.collectionId;
                    $scope.collectionTitle = GLOBALS.collectionTitle;
                    $scope.collectionSummary = null;
                    if ($scope.collectionId) {
                        $http.get('/collectionsummarieshandler/data', {
                            params: {
                                stringified_collection_ids: JSON.stringify([$scope.collectionId])
                            }
                        }).then(function (response) {
                            $scope.collectionSummary = response.data.summaries[0];
                        }, function () {
                            AlertsService.addWarning('There was an error while fetching the collection summary.');
                        });
                    }
                    $scope.onNavigateFromIframe = function () {
                        SiteAnalyticsService.registerVisitOppiaFromIframeEvent($scope.explorationId);
                    };
                    $scope.isSubmitButtonDisabled = function () {
                        var currentIndex = PlayerPositionService.getDisplayedCardIndex();
                        // This check is added because it was observed that when returning
                        // to current card after navigating through previous cards, using
                        // the arrows, the Submit button was sometimes falsely disabled.
                        // Also, since a learner's answers would always be in the current
                        // card, this additional check doesn't interfere with its normal
                        // working.
                        if (!PlayerTranscriptService.isLastCard(currentIndex)) {
                            return false;
                        }
                        return CurrentInteractionService.isSubmitButtonDisabled();
                    };
                    $scope.submitAnswerFromProgressNav = function () {
                        CurrentInteractionService.submitAnswer();
                    };
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/CorrectnessFooterDirective.ts":
/*!****************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/CorrectnessFooterDirective.ts ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for the correctness footer in the exploration player.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.directive('correctnessFooter', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                'correctness_footer_directive.html')
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/CurrentInteractionService.ts":
/*!***************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/CurrentInteractionService.ts ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Facilitates communication between the current interaction
 * and the progress nav. The former holds data about the learner's answer,
 * while the latter contains the actual "Submit" button which triggers the
 * answer submission process.
 */
oppia.factory('CurrentInteractionService', [
    function () {
        var _submitAnswerFn = null;
        var _onSubmitFn = null;
        var _validityCheckFn = null;
        var _presubmitHooks = [];
        return {
            setOnSubmitFn: function (onSubmit) {
                /**
                 * The ConversationSkinDirective should register its onSubmit
                 * callback here.
                 *
                 * @param {function(answer, interactionRulesService)} onSubmit
                 */
                _onSubmitFn = onSubmit;
            },
            registerCurrentInteraction: function (submitAnswerFn, validityCheckFn) {
                /**
                 * Each interaction directive should call registerCurrentInteraction
                 * when the interaction directive is first created.
                 *
                 * @param {function|null} submitAnswerFn - Should grab the learner's
                 *   answer and pass it to onSubmit. The interaction can pass in
                 *   null if it does not use the progress nav's submit button
                 *   (ex: MultipleChoiceInput).
                 * @param {function} validityCheckFn - The progress nav will use this
                 *   to decide whether or not to disable the submit button. If the
                 *   interaction passes in null, the submit button will remain
                 *   enabled (for the entire duration of the current interaction).
                 */
                _submitAnswerFn = submitAnswerFn || null;
                _validityCheckFn = validityCheckFn || null;
            },
            registerPresubmitHook: function (hookFn) {
                /* Register a hook that will be called right before onSubmit.
                 * All hooks for the current interaction will be cleared right
                 * before loading the next card.
                 */
                _presubmitHooks.push(hookFn);
            },
            clearPresubmitHooks: function () {
                /* Clear out all the hooks for the current interaction. Should
                 * be called before loading the next card.
                 */
                _presubmitHooks = [];
            },
            onSubmit: function (answer, interactionRulesService) {
                for (var i = 0; i < _presubmitHooks.length; i++) {
                    _presubmitHooks[i]();
                }
                _onSubmitFn(answer, interactionRulesService);
            },
            submitAnswer: function () {
                /* This starts the answer submit process, it should be called once the
                 * learner presses the "Submit" button.
                 */
                if (_submitAnswerFn === null) {
                    throw Error('The current interaction did not ' +
                        'register a _submitAnswerFn.');
                }
                else {
                    _submitAnswerFn();
                }
            },
            isSubmitButtonDisabled: function () {
                /* Returns whether or not the Submit button should be disabled based on
                 * the validity of the current answer. If the interaction does not pass
                 * in a _validityCheckFn, then _validityCheckFn will be null and by
                 * default we assume the answer is valid, so the submit button should
                 * not be disabled.
                 */
                if (_validityCheckFn === null) {
                    return false;
                }
                return !_validityCheckFn();
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts":
/*!**************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Utility service for the learner's view of an exploration.
 */
__webpack_require__(/*! domain/collection/GuestCollectionProgressService.ts */ "./core/templates/dev/head/domain/collection/GuestCollectionProgressService.ts");
__webpack_require__(/*! domain/exploration/EditableExplorationBackendApiService.ts */ "./core/templates/dev/head/domain/exploration/EditableExplorationBackendApiService.ts");
__webpack_require__(/*! domain/exploration/ExplorationObjectFactory.ts */ "./core/templates/dev/head/domain/exploration/ExplorationObjectFactory.ts");
__webpack_require__(/*! domain/exploration/ReadOnlyExplorationBackendApiService.ts */ "./core/templates/dev/head/domain/exploration/ReadOnlyExplorationBackendApiService.ts");
__webpack_require__(/*! domain/state_card/StateCardObjectFactory.ts */ "./core/templates/dev/head/domain/state_card/StateCardObjectFactory.ts");
__webpack_require__(/*! domain/utilities/LanguageUtilService.ts */ "./core/templates/dev/head/domain/utilities/LanguageUtilService.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! expressions/ExpressionInterpolationService.ts */ "./core/templates/dev/head/expressions/ExpressionInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AnswerClassificationService.ts */ "./core/templates/dev/head/pages/exploration_player/AnswerClassificationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioPreloaderService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioPreloaderService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationLanguageService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationLanguageService.ts");
__webpack_require__(/*! pages/exploration_player/ImagePreloaderService.ts */ "./core/templates/dev/head/pages/exploration_player/ImagePreloaderService.ts");
__webpack_require__(/*! pages/exploration_player/LearnerParamsService.ts */ "./core/templates/dev/head/pages/exploration_player/LearnerParamsService.ts");
__webpack_require__(/*! pages/exploration_player/NumberAttemptsService.ts */ "./core/templates/dev/head/pages/exploration_player/NumberAttemptsService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerCorrectnessFeedbackEnabledService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerCorrectnessFeedbackEnabledService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! pages/exploration_player/StateClassifierMappingService.ts */ "./core/templates/dev/head/pages/exploration_player/StateClassifierMappingService.ts");
__webpack_require__(/*! pages/exploration_player/StatsReportingService.ts */ "./core/templates/dev/head/pages/exploration_player/StatsReportingService.ts");
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/ExplorationHtmlFormatterService.ts */ "./core/templates/dev/head/services/ExplorationHtmlFormatterService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
__webpack_require__(/*! services/stateful/FocusManagerService.ts */ "./core/templates/dev/head/services/stateful/FocusManagerService.ts");
oppia.constant('INTERACTION_SPECS', GLOBALS.INTERACTION_SPECS);
// A service that provides a number of utility functions for JS used by
// the player skin.
// Note that this service is used both in the learner and the editor views.
// The URL determines which of these it is. Some methods may need to be
// implemented differently depending on whether the skin is being played
// in the learner view, or whether it is being previewed in the editor view.
oppia.factory('ExplorationEngineService', [
    '$http', '$q', '$rootScope', 'AlertsService', 'AnswerClassificationService',
    'AudioPreloaderService', 'AudioTranslationLanguageService', 'ContextService',
    'EditableExplorationBackendApiService', 'ExplorationHtmlFormatterService',
    'ExplorationObjectFactory', 'ExpressionInterpolationService',
    'FocusManagerService', 'GuestCollectionProgressService',
    'ImagePreloaderService', 'LanguageUtilService', 'LearnerParamsService',
    'NumberAttemptsService', 'PlayerCorrectnessFeedbackEnabledService',
    'PlayerTranscriptService', 'ReadOnlyExplorationBackendApiService',
    'StateCardObjectFactory', 'StateClassifierMappingService',
    'StatsReportingService', 'UrlInterpolationService', 'UserService',
    'WindowDimensionsService', 'DEFAULT_PROFILE_IMAGE_PATH', 'INTERACTION_SPECS',
    'PAGE_CONTEXT', 'WHITELISTED_COLLECTION_IDS_FOR_SAVING_GUEST_PROGRESS',
    function ($http, $q, $rootScope, AlertsService, AnswerClassificationService, AudioPreloaderService, AudioTranslationLanguageService, ContextService, EditableExplorationBackendApiService, ExplorationHtmlFormatterService, ExplorationObjectFactory, ExpressionInterpolationService, FocusManagerService, GuestCollectionProgressService, ImagePreloaderService, LanguageUtilService, LearnerParamsService, NumberAttemptsService, PlayerCorrectnessFeedbackEnabledService, PlayerTranscriptService, ReadOnlyExplorationBackendApiService, StateCardObjectFactory, StateClassifierMappingService, StatsReportingService, UrlInterpolationService, UserService, WindowDimensionsService, DEFAULT_PROFILE_IMAGE_PATH, INTERACTION_SPECS, PAGE_CONTEXT, WHITELISTED_COLLECTION_IDS_FOR_SAVING_GUEST_PROGRESS) {
        var _explorationId = ContextService.getExplorationId();
        var _editorPreviewMode = ContextService.isInExplorationEditorPage();
        var answerIsBeingProcessed = false;
        var exploration = null;
        // This list may contain duplicates. A state name is added to it each time
        // the learner moves to a new card.
        var visitedStateNames = [];
        var currentStateName = null;
        var nextStateName = null;
        // Param changes to be used ONLY in editor preview mode.
        var manualParamChanges = null;
        var initStateName = null;
        var version = GLOBALS.explorationVersion;
        var randomFromArray = function (arr) {
            return arr[Math.floor(Math.random() * arr.length)];
        };
        // Evaluate feedback.
        var makeFeedback = function (feedbackHtml, envs) {
            return ExpressionInterpolationService.processHtml(feedbackHtml, envs);
        };
        var _getRandomSuffix = function () {
            // This is a bit of a hack. When a refresh to a $scope variable
            // happens,
            // AngularJS compares the new value of the variable to its previous
            // value. If they are the same, then the variable is not updated.
            // Appending a random suffix makes the new value different from the
            // previous one, and thus indirectly forces a refresh.
            var randomSuffix = '';
            var N = Math.round(Math.random() * 1000);
            for (var i = 0; i < N; i++) {
                randomSuffix += ' ';
            }
            return randomSuffix;
        };
        // Evaluate parameters. Returns null if any evaluation fails.
        var makeParams = function (oldParams, paramChanges, envs) {
            var newParams = angular.copy(oldParams);
            if (paramChanges.every(function (pc) {
                if (pc.generatorId === 'Copier') {
                    if (!pc.customizationArgs.parse_with_jinja) {
                        newParams[pc.name] = pc.customizationArgs.value;
                    }
                    else {
                        var paramValue = ExpressionInterpolationService.processUnicode(pc.customizationArgs.value, [newParams].concat(envs));
                        if (paramValue === null) {
                            return false;
                        }
                        newParams[pc.name] = paramValue;
                    }
                }
                else {
                    // RandomSelector.
                    newParams[pc.name] = randomFromArray(pc.customizationArgs.list_of_values);
                }
                return true;
            })) {
                // All parameters were evaluated successfully.
                return newParams;
            }
            // Evaluation of some parameter failed.
            return null;
        };
        // Evaluate question string.
        var makeQuestion = function (newState, envs) {
            return ExpressionInterpolationService.processHtml(newState.content.getHtml(), envs);
        };
        // This should only be called when 'exploration' is non-null.
        var _loadInitialState = function (successCallback) {
            var initialState = exploration.getInitialState();
            var oldParams = LearnerParamsService.getAllParams();
            var newParams = makeParams(oldParams, initialState.paramChanges, [oldParams]);
            if (newParams === null) {
                AlertsService.addWarning('Expression parsing error.');
                return;
            }
            if (newParams) {
                LearnerParamsService.init(newParams);
            }
            currentStateName = exploration.initStateName;
            nextStateName = exploration.initStateName;
            var interaction = exploration.getInteraction(exploration.initStateName);
            var nextFocusLabel = FocusManagerService.generateFocusLabel();
            var interactionId = interaction.id;
            var interactionHtml = null;
            if (interactionId) {
                interactionHtml = ExplorationHtmlFormatterService.getInteractionHtml(interactionId, exploration.getInteractionCustomizationArgs(currentStateName), true, nextFocusLabel);
            }
            var questionHtml = makeQuestion(initialState, [newParams]);
            if (questionHtml === null) {
                AlertsService.addWarning('Expression parsing error.');
                return;
            }
            if (!_editorPreviewMode) {
                StatsReportingService.recordExplorationStarted(exploration.initStateName, newParams);
            }
            var initialCard = StateCardObjectFactory.createNewCard(currentStateName, questionHtml, interactionHtml, interaction, initialState.recordedVoiceovers, initialState.content.getContentId());
            successCallback(initialCard, nextFocusLabel);
        };
        // Initialize the parameters in the exploration as specified in the
        // exploration-level initial parameter changes list, followed by any
        // manual parameter changes (in editor preview mode).
        var initParams = function (manualParamChanges) {
            var baseParams = {};
            exploration.paramSpecs.forEach(function (paramName, paramSpec) {
                baseParams[paramName] = paramSpec.getType().createDefaultValue();
            });
            var startingParams = makeParams(baseParams, exploration.paramChanges.concat(manualParamChanges), [baseParams]);
            LearnerParamsService.init(startingParams);
        };
        var _getNextInteractionHtml = function (labelForFocusTarget) {
            var interactionId = exploration.getInteractionId(nextStateName);
            return ExplorationHtmlFormatterService.getInteractionHtml(interactionId, exploration.getInteractionCustomizationArgs(nextStateName), true, labelForFocusTarget);
        };
        return {
            // This should only be used in editor preview mode. It sets the
            // exploration data from what's currently specified in the editor, and
            // also initializes the parameters to empty strings.
            initSettingsFromEditor: function (activeStateNameFromPreviewTab, manualParamChangesToInit) {
                if (_editorPreviewMode) {
                    manualParamChanges = manualParamChangesToInit;
                    initStateName = activeStateNameFromPreviewTab;
                }
                else {
                    throw 'Error: cannot populate exploration in learner mode.';
                }
            },
            /**
             * Initializes an exploration, passing the data for the first state to
             * successCallback.
             *
             * In editor preview mode, populateExploration() must be called before
             * calling init().
             *
             * @param {function} successCallback - The function to execute after the
             *   initial exploration data is successfully loaded. This function will
             *   be passed two arguments:
             *   - stateName {string}, the name of the first state
             *   - initHtml {string}, an HTML string representing the content of the
             *       first state.
             */
            init: function (explorationDict, explorationVersion, preferredAudioLanguage, autoTtsEnabled, successCallback) {
                answerIsBeingProcessed = false;
                if (_editorPreviewMode) {
                    exploration = ExplorationObjectFactory.createFromBackendDict(explorationDict);
                    exploration.setInitialStateName(initStateName);
                    visitedStateNames = [exploration.getInitialState().name];
                    initParams(manualParamChanges);
                    AudioTranslationLanguageService.init(exploration.getAllVoiceoverLanguageCodes(), null, exploration.getLanguageCode(), explorationDict.auto_tts_enabled);
                    AudioPreloaderService.init(exploration);
                    AudioPreloaderService.kickOffAudioPreloader(initStateName);
                    _loadInitialState(successCallback);
                }
                else {
                    exploration = ExplorationObjectFactory.createFromBackendDict(explorationDict);
                    visitedStateNames.push(exploration.getInitialState().name);
                    version = explorationVersion;
                    initParams([]);
                    AudioTranslationLanguageService.init(exploration.getAllVoiceoverLanguageCodes(), preferredAudioLanguage, exploration.getLanguageCode(), autoTtsEnabled);
                    AudioPreloaderService.init(exploration);
                    AudioPreloaderService.kickOffAudioPreloader(exploration.getInitialState().name);
                    ImagePreloaderService.init(exploration);
                    ImagePreloaderService.kickOffImagePreloader(exploration.getInitialState().name);
                    _loadInitialState(successCallback);
                }
            },
            moveToExploration: function (successCallback) {
                _loadInitialState(successCallback);
            },
            isCurrentStateInitial: function () {
                return currentStateName === exploration.initStateName;
            },
            recordNewCardAdded: function () {
                currentStateName = nextStateName;
            },
            getExplorationId: function () {
                return _explorationId;
            },
            getExplorationTitle: function () {
                return exploration.title;
            },
            getExplorationVersion: function () {
                return version;
            },
            getAuthorRecommendedExpIds: function () {
                return exploration.getAuthorRecommendedExpIds(currentStateName);
            },
            getLanguageCode: function () {
                return exploration.getLanguageCode();
            },
            isInPreviewMode: function () {
                return !!_editorPreviewMode;
            },
            submitAnswer: function (answer, interactionRulesService, successCallback) {
                if (answerIsBeingProcessed) {
                    return;
                }
                answerIsBeingProcessed = true;
                var oldStateName = PlayerTranscriptService.getLastStateName();
                var oldState = exploration.getState(oldStateName);
                var recordedVoiceovers = oldState.recordedVoiceovers;
                var classificationResult = (AnswerClassificationService.getMatchingClassificationResult(oldStateName, oldState.interaction, answer, interactionRulesService));
                var answerIsCorrect = classificationResult.outcome.labelledAsCorrect;
                // Use angular.copy() to clone the object
                // since classificationResult.outcome points
                // at oldState.interaction.default_outcome
                var outcome = angular.copy(classificationResult.outcome);
                var newStateName = outcome.dest;
                if (!_editorPreviewMode) {
                    var feedbackIsUseful = (AnswerClassificationService.isClassifiedExplicitlyOrGoesToNewState(oldStateName, oldState, answer, interactionRulesService));
                    StatsReportingService.recordAnswerSubmitted(oldStateName, LearnerParamsService.getAllParams(), answer, classificationResult.answerGroupIndex, classificationResult.ruleIndex, classificationResult.classificationCategorization, feedbackIsUseful);
                    StatsReportingService.recordAnswerSubmitAction(oldStateName, newStateName, oldState.interaction.id, answer, outcome.feedback);
                }
                var refresherExplorationId = outcome.refresherExplorationId;
                var missingPrerequisiteSkillId = outcome.missingPrerequisiteSkillId;
                var newState = exploration.getState(newStateName);
                var isFirstHit = Boolean(visitedStateNames.indexOf(newStateName) === -1);
                if (oldStateName !== newStateName) {
                    visitedStateNames.push(newStateName);
                }
                // Compute the data for the next state.
                var oldParams = LearnerParamsService.getAllParams();
                oldParams.answer = answer;
                var feedbackHtml = makeFeedback(outcome.feedback.getHtml(), [oldParams]);
                var feedbackContentId = outcome.feedback.getContentId();
                var feedbackAudioTranslations = (recordedVoiceovers.getBindableVoiceovers(feedbackContentId));
                if (feedbackHtml === null) {
                    answerIsBeingProcessed = false;
                    AlertsService.addWarning('Expression parsing error.');
                    return;
                }
                var newParams = (newState ? makeParams(oldParams, newState.paramChanges, [oldParams]) : oldParams);
                if (newParams === null) {
                    answerIsBeingProcessed = false;
                    AlertsService.addWarning('Expression parsing error.');
                    return;
                }
                var questionHtml = makeQuestion(newState, [newParams, {
                        answer: 'answer'
                    }]);
                if (questionHtml === null) {
                    answerIsBeingProcessed = false;
                    AlertsService.addWarning('Expression parsing error.');
                    return;
                }
                // TODO(sll): Remove the 'answer' key from newParams.
                newParams.answer = answer;
                answerIsBeingProcessed = false;
                var refreshInteraction = (oldStateName !== newStateName ||
                    exploration.isInteractionInline(oldStateName));
                nextStateName = newStateName;
                var onSameCard = (oldStateName === newStateName);
                $rootScope.$broadcast('updateActiveStateIfInEditor', newStateName);
                var _nextFocusLabel = FocusManagerService.generateFocusLabel();
                var nextInteractionHtml = null;
                if (exploration.getInteraction(nextStateName).id) {
                    nextInteractionHtml = _getNextInteractionHtml(_nextFocusLabel);
                }
                if (newParams) {
                    LearnerParamsService.init(newParams);
                }
                questionHtml = questionHtml + _getRandomSuffix();
                nextInteractionHtml = nextInteractionHtml + _getRandomSuffix();
                var nextCard = StateCardObjectFactory.createNewCard(nextStateName, questionHtml, nextInteractionHtml, exploration.getInteraction(nextStateName), exploration.getState(nextStateName).recordedVoiceovers, exploration.getState(nextStateName).content.getContentId());
                successCallback(nextCard, refreshInteraction, feedbackHtml, feedbackAudioTranslations, refresherExplorationId, missingPrerequisiteSkillId, onSameCard, (oldStateName === exploration.initStateName), isFirstHit, false, _nextFocusLabel);
                return answerIsCorrect;
            },
            isAnswerBeingProcessed: function () {
                return answerIsBeingProcessed;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ExplorationFooterDirective.ts":
/*!****************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ExplorationFooterDirective.ts ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2016 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for showing author/share footer
 * in exploration player.
 */
__webpack_require__(/*! components/button-directives/hint-and-solution-buttons/hint-and-solution-buttons.directive.ts */ "./core/templates/dev/head/components/button-directives/hint-and-solution-buttons/hint-and-solution-buttons.directive.ts");
__webpack_require__(/*! domain/summary/ExplorationSummaryBackendApiService.ts */ "./core/templates/dev/head/domain/summary/ExplorationSummaryBackendApiService.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
oppia.directive('explorationFooter', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                twitterText: '@'
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/exploration_footer_directive.html'),
            controller: [
                '$scope', '$http', '$log', 'ContextService',
                'ExplorationSummaryBackendApiService', 'UrlService',
                'WindowDimensionsService',
                function ($scope, $http, $log, ContextService, ExplorationSummaryBackendApiService, UrlService, WindowDimensionsService) {
                    $scope.explorationId = ContextService.getExplorationId();
                    $scope.getStaticImageUrl = UrlInterpolationService.getStaticImageUrl;
                    $scope.iframed = UrlService.isIframed();
                    $scope.windowIsNarrow = WindowDimensionsService.isWindowNarrow();
                    WindowDimensionsService.registerOnResizeHook(function () {
                        $scope.windowIsNarrow = WindowDimensionsService.isWindowNarrow();
                        $scope.$apply();
                    });
                    $scope.contributorNames = [];
                    ExplorationSummaryBackendApiService
                        .loadPublicAndPrivateExplorationSummaries([$scope.explorationId])
                        .then(function (summaries) {
                        var summaryBackendObject = null;
                        if (summaries.length > 0) {
                            var contributorSummary = (summaries[0].human_readable_contributors_summary);
                            $scope.contributorNames = Object.keys(contributorSummary).sort(function (contributorUsername1, contributorUsername2) {
                                var commitsOfContributor1 = contributorSummary[contributorUsername1].num_commits;
                                var commitsOfContributor2 = contributorSummary[contributorUsername2].num_commits;
                                return commitsOfContributor2 - commitsOfContributor1;
                            });
                        }
                    });
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayer.ts":
/*!*******************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ExplorationPlayer.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Dependencies for the explaration player page.
 */
// TODO(vojtechjelinek): this block of requires should be removed after we
// introduce webpack for /extensions
__webpack_require__(/*! components/ck-editor-helpers/ck-editor-rte/ck-editor-rte.directive.ts */ "./core/templates/dev/head/components/ck-editor-helpers/ck-editor-rte/ck-editor-rte.directive.ts");
__webpack_require__(/*! components/ck-editor-helpers/ck-editor-widgets/ck-editor-widgets.initializer.ts */ "./core/templates/dev/head/components/ck-editor-helpers/ck-editor-widgets/ck-editor-widgets.initializer.ts");
__webpack_require__(/*! directives/AngularHtmlBindDirective.ts */ "./core/templates/dev/head/directives/AngularHtmlBindDirective.ts");
__webpack_require__(/*! directives/MathjaxBindDirective.ts */ "./core/templates/dev/head/directives/MathjaxBindDirective.ts");
__webpack_require__(/*! components/forms/forms-unicode-filters/convert-unicode-with-params-to-html.filter.ts */ "./core/templates/dev/head/components/forms/forms-unicode-filters/convert-unicode-with-params-to-html.filter.ts");
__webpack_require__(/*! components/forms/forms-unicode-filters/convert-html-to-unicode.filter.ts */ "./core/templates/dev/head/components/forms/forms-unicode-filters/convert-html-to-unicode.filter.ts");
__webpack_require__(/*! components/forms/forms-unicode-filters/convert-unicode-to-html.filter.ts */ "./core/templates/dev/head/components/forms/forms-unicode-filters/convert-unicode-to-html.filter.ts");
__webpack_require__(/*! components/forms/forms-validators/is-at-least.filter.ts */ "./core/templates/dev/head/components/forms/forms-validators/is-at-least.filter.ts");
__webpack_require__(/*! components/forms/forms-validators/is-at-most.filter.ts */ "./core/templates/dev/head/components/forms/forms-validators/is-at-most.filter.ts");
__webpack_require__(/*! components/forms/forms-validators/is-float.filter.ts */ "./core/templates/dev/head/components/forms/forms-validators/is-float.filter.ts");
__webpack_require__(/*! components/forms/forms-validators/is-integer.filter.ts */ "./core/templates/dev/head/components/forms/forms-validators/is-integer.filter.ts");
__webpack_require__(/*! components/forms/forms-validators/is-nonempty.filter.ts */ "./core/templates/dev/head/components/forms/forms-validators/is-nonempty.filter.ts");
__webpack_require__(/*! components/forms/forms-directives/apply-validation/apply-validation.directive.ts */ "./core/templates/dev/head/components/forms/forms-directives/apply-validation/apply-validation.directive.ts");
__webpack_require__(/*! components/forms/forms-directives/require-is-float/require-is-float.directive.ts */ "./core/templates/dev/head/components/forms/forms-directives/require-is-float/require-is-float.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-bool-editor/schema-based-bool-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-bool-editor/schema-based-bool-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-choices-editor/schema-based-choices-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-choices-editor/schema-based-choices-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-custom-editor/schema-based-custom-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-custom-editor/schema-based-custom-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-dict-editor/schema-based-dict-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-dict-editor/schema-based-dict-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-expression-editor/schema-based-expression-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-expression-editor/schema-based-expression-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-float-editor/schema-based-float-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-float-editor/schema-based-float-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-html-editor/schema-based-html-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-html-editor/schema-based-html-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-int-editor/schema-based-int-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-int-editor/schema-based-int-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-list-editor/schema-based-list-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-list-editor/schema-based-list-editor.directive.ts");
__webpack_require__(/*! components/forms/forms-schema-editors/schema-based-editor/schema-based-unicode-editor/schema-based-unicode-editor.directive.ts */ "./core/templates/dev/head/components/forms/forms-schema-editors/schema-based-editor/schema-based-unicode-editor/schema-based-unicode-editor.directive.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedCustomViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedCustomViewerDirective.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedDictViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedDictViewerDirective.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedHtmlViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedHtmlViewerDirective.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedListViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedListViewerDirective.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedPrimitiveViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedPrimitiveViewerDirective.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedUnicodeViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedUnicodeViewerDirective.ts");
__webpack_require__(/*! components/forms/schema_viewers/SchemaBasedViewerDirective.ts */ "./core/templates/dev/head/components/forms/schema_viewers/SchemaBasedViewerDirective.ts");
__webpack_require__(/*! filters/string-utility-filters/normalize-whitespace.filter.ts */ "./core/templates/dev/head/filters/string-utility-filters/normalize-whitespace.filter.ts");
__webpack_require__(/*! services/AutoplayedVideosService.ts */ "./core/templates/dev/head/services/AutoplayedVideosService.ts");
// ^^^ this block of requires should be removed ^^^
__webpack_require__(/*! components/common-layout-directives/attribution-guide/attribution-guide.directive.ts */ "./core/templates/dev/head/components/common-layout-directives/attribution-guide/attribution-guide.directive.ts");
__webpack_require__(/*! components/common-layout-directives/background-banner/background-banner.directive.ts */ "./core/templates/dev/head/components/common-layout-directives/background-banner/background-banner.directive.ts");
__webpack_require__(/*! pages/exploration_player/ConversationSkinDirective.ts */ "./core/templates/dev/head/pages/exploration_player/ConversationSkinDirective.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationFooterDirective.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationFooterDirective.ts");
__webpack_require__(/*! pages/exploration_player/LearnerLocalNav.ts */ "./core/templates/dev/head/pages/exploration_player/LearnerLocalNav.ts");
__webpack_require__(/*! pages/exploration_player/LearnerViewInfo.ts */ "./core/templates/dev/head/pages/exploration_player/LearnerViewInfo.ts");


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts":
/*!*******************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview A service that maintains a record of the state of the player,
 *  like engine service.
 */
__webpack_require__(/*! domain/exploration/EditableExplorationBackendApiService.ts */ "./core/templates/dev/head/domain/exploration/EditableExplorationBackendApiService.ts");
__webpack_require__(/*! domain/exploration/ReadOnlyExplorationBackendApiService.ts */ "./core/templates/dev/head/domain/exploration/ReadOnlyExplorationBackendApiService.ts");
__webpack_require__(/*! domain/question/PretestQuestionBackendApiService.ts */ "./core/templates/dev/head/domain/question/PretestQuestionBackendApiService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/NumberAttemptsService.ts */ "./core/templates/dev/head/pages/exploration_player/NumberAttemptsService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! pages/exploration_player/PretestEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/PretestEngineService.ts");
__webpack_require__(/*! pages/exploration_player/StateClassifierMappingService.ts */ "./core/templates/dev/head/pages/exploration_player/StateClassifierMappingService.ts");
__webpack_require__(/*! pages/exploration_player/StatsReportingService.ts */ "./core/templates/dev/head/pages/exploration_player/StatsReportingService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/ExplorationFeaturesBackendApiService.ts */ "./core/templates/dev/head/services/ExplorationFeaturesBackendApiService.ts");
__webpack_require__(/*! services/ExplorationFeaturesService.ts */ "./core/templates/dev/head/services/ExplorationFeaturesService.ts");
__webpack_require__(/*! services/PlaythroughIssuesService.ts */ "./core/templates/dev/head/services/PlaythroughIssuesService.ts");
__webpack_require__(/*! services/PlaythroughService.ts */ "./core/templates/dev/head/services/PlaythroughService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
oppia.factory('ExplorationPlayerStateService', [
    '$log', '$q', 'ContextService', 'EditableExplorationBackendApiService',
    'ExplorationEngineService', 'ExplorationFeaturesBackendApiService',
    'ExplorationFeaturesService', 'NumberAttemptsService',
    'PlayerCorrectnessFeedbackEnabledService', 'PlayerPositionService',
    'PlayerTranscriptService', 'PlaythroughIssuesService', 'PlaythroughService',
    'PretestEngineService', 'PretestQuestionBackendApiService',
    'ReadOnlyExplorationBackendApiService', 'StateClassifierMappingService',
    'StatsReportingService', 'UrlService',
    function ($log, $q, ContextService, EditableExplorationBackendApiService, ExplorationEngineService, ExplorationFeaturesBackendApiService, ExplorationFeaturesService, NumberAttemptsService, PlayerCorrectnessFeedbackEnabledService, PlayerPositionService, PlayerTranscriptService, PlaythroughIssuesService, PlaythroughService, PretestEngineService, PretestQuestionBackendApiService, ReadOnlyExplorationBackendApiService, StateClassifierMappingService, StatsReportingService, UrlService) {
        var currentEngineService = null;
        var inPretestMode = false;
        var editorPreviewMode = ContextService.isInExplorationEditorPage();
        var explorationId = ContextService.getExplorationId();
        var version = GLOBALS.explorationVersion;
        var storyId = UrlService.getStoryIdInPlayer();
        var initializeExplorationServices = function (returnDict, arePretestsAvailable, callback) {
            StateClassifierMappingService.init(returnDict.state_classifier_mapping);
            StatsReportingService.initSession(explorationId, returnDict.exploration.title, version, returnDict.session_id, GLOBALS.collectionId);
            PlaythroughService.initSession(explorationId, version, returnDict.record_playthrough_probability);
            PlaythroughIssuesService.initSession(explorationId, version);
            PlayerCorrectnessFeedbackEnabledService.init(returnDict.correctness_feedback_enabled);
            ExplorationEngineService.init(returnDict.exploration, returnDict.version, returnDict.preferred_audio_language_code, returnDict.auto_tts_enabled, arePretestsAvailable ? function () { } : callback);
        };
        var initializePretestServices = function (pretestQuestionDicts, callback) {
            PlayerCorrectnessFeedbackEnabledService.init(true);
            PretestEngineService.init(pretestQuestionDicts, callback);
        };
        var setExplorationMode = function () {
            inPretestMode = false;
            currentEngineService = ExplorationEngineService;
        };
        var setPretestMode = function () {
            inPretestMode = true;
            currentEngineService = PretestEngineService;
        };
        var initExplorationPreviewPlayer = function (callback) {
            setExplorationMode();
            $q.all([
                EditableExplorationBackendApiService.fetchApplyDraftExploration(explorationId),
                ExplorationFeaturesBackendApiService.fetchExplorationFeatures(explorationId),
            ]).then(function (combinedData) {
                var explorationData = combinedData[0];
                var featuresData = combinedData[1];
                ExplorationFeaturesService.init(explorationData, featuresData);
                ExplorationEngineService.init(explorationData, null, null, null, callback);
                PlayerCorrectnessFeedbackEnabledService.init(explorationData.correctness_feedback_enabled);
                NumberAttemptsService.reset();
            });
        };
        var initExplorationPlayer = function (callback) {
            var explorationDataPromise = version ?
                ReadOnlyExplorationBackendApiService.loadExploration(explorationId, version) :
                ReadOnlyExplorationBackendApiService.loadLatestExploration(explorationId);
            $q.all([
                explorationDataPromise,
                PretestQuestionBackendApiService.fetchPretestQuestions(explorationId, storyId),
                ExplorationFeaturesBackendApiService.fetchExplorationFeatures(explorationId),
            ]).then(function (combinedData) {
                var explorationData = combinedData[0];
                var pretestQuestionsData = combinedData[1];
                var featuresData = combinedData[2];
                ExplorationFeaturesService.init(explorationData, featuresData);
                if (pretestQuestionsData.length > 0) {
                    setPretestMode();
                    initializeExplorationServices(explorationData, true, callback);
                    initializePretestServices(pretestQuestionsData, callback);
                }
                else {
                    setExplorationMode();
                    initializeExplorationServices(explorationData, false, callback);
                }
            });
        };
        return {
            initializePlayer: function (callback) {
                PlayerTranscriptService.init();
                if (editorPreviewMode) {
                    initExplorationPreviewPlayer(callback);
                }
                else {
                    initExplorationPlayer(callback);
                }
            },
            getCurrentEngineService: function () {
                return currentEngineService;
            },
            isInPretestMode: function () {
                return inPretestMode;
            },
            getPretestQuestionCount: function () {
                return PretestEngineService.getPretestQuestionCount();
            },
            moveToExploration: function (callback) {
                setExplorationMode();
                ExplorationEngineService.moveToExploration(callback);
            },
            getLanguageCode: function () {
                return currentEngineService.getLanguageCode();
            },
            recordNewCardAdded: function () {
                return currentEngineService.recordNewCardAdded();
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ExplorationRecommendationsService.ts":
/*!***********************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ExplorationRecommendationsService.ts ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for recommending explorations at the end of an
 * exploration.
 */
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
oppia.factory('ExplorationRecommendationsService', [
    '$http', 'ContextService', 'UrlService', 'EXPLORATION_EDITOR_TAB_CONTEXT',
    'PAGE_CONTEXT',
    function ($http, ContextService, UrlService, EXPLORATION_EDITOR_TAB_CONTEXT, PAGE_CONTEXT) {
        var isIframed = UrlService.isIframed();
        var isInEditorPage = (ContextService.getPageContext() === PAGE_CONTEXT.EXPLORATION_EDITOR);
        var isInEditorPreviewMode = isInEditorPage && (ContextService.getEditorTabContext() ===
            EXPLORATION_EDITOR_TAB_CONTEXT.PREVIEW);
        var explorationId = ContextService.getExplorationId();
        return {
            getRecommendedSummaryDicts: function (authorRecommendedExpIds, includeAutogeneratedRecommendations, successCallback) {
                var recommendationsUrlParams = {
                    stringified_author_recommended_ids: JSON.stringify(authorRecommendedExpIds),
                    collection_id: null,
                    include_system_recommendations: null
                };
                if (GLOBALS.collectionId) {
                    recommendationsUrlParams.collection_id = GLOBALS.collectionId;
                }
                if (includeAutogeneratedRecommendations && !isInEditorPage) {
                    recommendationsUrlParams.include_system_recommendations = 'true';
                }
                $http.get('/explorehandler/recommendations/' + explorationId, {
                    params: recommendationsUrlParams
                }).then(function (response) {
                    successCallback(response.data.summaries);
                });
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ExtractImageFilenamesFromStateService.ts":
/*!***************************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ExtractImageFilenamesFromStateService.ts ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to extract image filenames in a State.
 */
__webpack_require__(/*! services/HtmlEscaperService.ts */ "./core/templates/dev/head/services/HtmlEscaperService.ts");
oppia.factory('ExtractImageFilenamesFromStateService', [
    'HtmlEscaperService', function (HtmlEscaperService) {
        var INTERACTION_TYPE_MULTIPLE_CHOICE = 'MultipleChoiceInput';
        var INTERACTION_TYPE_ITEM_SELECTION = 'ItemSelectionInput';
        var INTERACTION_TYPE_IMAGE_CLICK_INPUT = 'ImageClickInput';
        var INTERACTION_TYPE_DRAG_AND_DROP_SORT = 'DragAndDropSortInput';
        var filenamesInState = [];
        /**
         * Gets the html from the state's content.
         * @param {object} state - The state from which the html of the content
         *                         should be returned.
         */
        var _getStateContentHtml = function (state) {
            return state.content.getHtml();
        };
        /**
         * Gets the html from the outcome of the answer groups and the default
         * outcome of the state.
         * @param {object} state - The state from which the html of the outcomes of
         *                         the answer groups should be returned.
         */
        var _getOutcomesHtml = function (state) {
            var outcomesHtml = '';
            state.interaction.answerGroups.forEach(function (answerGroup) {
                var answerGroupHtml = answerGroup.outcome.feedback.getHtml();
                outcomesHtml = outcomesHtml.concat(answerGroupHtml);
            });
            if (state.interaction.defaultOutcome !== null) {
                outcomesHtml = outcomesHtml.concat(state.interaction.defaultOutcome.feedback.getHtml());
            }
            return outcomesHtml;
        };
        /**
         * Gets the html from the hints in the state.
         * @param {object} state - The state whose hints' html should be returned.
         */
        var _getHintsHtml = function (state) {
            var hintsHtml = '';
            state.interaction.hints.forEach(function (hint) {
                var hintHtml = hint.hintContent.getHtml();
                hintsHtml = hintsHtml.concat(hintHtml);
            });
            return hintsHtml;
        };
        /**
         * Gets the html from the solution in the state.
         * @param {object} state - The state whose solution's html should be
         *                         returned.
         */
        var _getSolutionHtml = function (state) {
            return state.interaction.solution.explanation.getHtml();
        };
        /**
         * Gets all the html in a state.
         * @param {object} state - The state whose html is to be fetched.
         */
        var _getAllHtmlOfState = function (state) {
            var _allHtmlInTheState = [];
            // The order of the extracted image names is same as they appear in a
            // state. The images should be preloaded in the following order ---
            // content, customizationArgs of interactions, feedback of outcomes ()
            // including feedback of default outcome if any), hints, solution if any.
            _allHtmlInTheState.push(_getStateContentHtml(state));
            if (state.interaction.id === INTERACTION_TYPE_MULTIPLE_CHOICE ||
                state.interaction.id === INTERACTION_TYPE_ITEM_SELECTION ||
                state.interaction.id === INTERACTION_TYPE_DRAG_AND_DROP_SORT) {
                var customizationArgsHtml = '';
                state.interaction.customizationArgs.choices.value.forEach(function (value) {
                    customizationArgsHtml = customizationArgsHtml.concat(value);
                });
                _allHtmlInTheState.push(customizationArgsHtml);
            }
            _allHtmlInTheState.push(_getOutcomesHtml(state));
            _allHtmlInTheState.push(_getHintsHtml(state));
            if (state.interaction.solution !== null) {
                _allHtmlInTheState.push(_getSolutionHtml(state));
            }
            return _allHtmlInTheState;
        };
        /**
         * Extracts the filepath object from the filepath-value attribute of the
         * oppia-noninteractive-image tags in the strHtml(given string).
         * @param {string} strHtml - The string from which the object of
         *                           filepath should be extracted.
         */
        var _extractFilepathValueFromOppiaNonInteractiveImageTag = function (strHtml) {
            var filenames = [];
            var dummyElement = document.createElement('div');
            dummyElement.innerHTML = (HtmlEscaperService.escapedStrToUnescapedStr(strHtml));
            var imageTagList = dummyElement.getElementsByTagName('oppia-noninteractive-image');
            for (var i = 0; i < imageTagList.length; i++) {
                // We have the attribute of filepath in oppia-noninteractive-image tag.
                // But it actually contains the filename only. We use the variable
                // filename instead of filepath since in the end we are retrieving the
                // filenames in the exploration.
                var filename = JSON.parse(imageTagList[i].getAttribute('filepath-with-value'));
                filenames.push(filename);
            }
            return filenames;
        };
        /**
         * Gets the filenames of all the images that are a part of the state.
         * @param {object} state - The state from which the filenames of the image
         *                         should be extracted.
         */
        var _getImageFilenamesInState = function (state) {
            var filenamesInState = [];
            // The Image Click Input interaction has an image whose filename is
            // directly stored in the customizationArgs.imageAndRegion.value
            // .imagePath
            if (state.interaction.id === INTERACTION_TYPE_IMAGE_CLICK_INPUT) {
                var filename = (state.interaction.customizationArgs.imageAndRegions.value.imagePath);
                filenamesInState.push(filename);
            }
            var allHtmlOfState = _getAllHtmlOfState(state);
            allHtmlOfState.forEach(function (htmlStr) {
                filenamesInState = filenamesInState.concat(_extractFilepathValueFromOppiaNonInteractiveImageTag(htmlStr));
            });
            return filenamesInState;
        };
        return {
            getImageFilenamesInState: _getImageFilenamesInState
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/FatigueDetectionService.ts":
/*!*************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/FatigueDetectionService.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for detecting spamming behavior from the learner.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.factory('FatigueDetectionService', [
    '$uibModal', 'UrlInterpolationService',
    function ($uibModal, UrlInterpolationService) {
        // 4 submissions in under 10 seconds triggers modal.
        var SPAM_COUNT_THRESHOLD = 4;
        var SPAM_WINDOW_MSEC = 10000;
        var submissionTimesMsec = [];
        return {
            recordSubmissionTimestamp: function () {
                submissionTimesMsec.push((new Date()).getTime());
            },
            isSubmittingTooFast: function () {
                if (submissionTimesMsec.length >= SPAM_COUNT_THRESHOLD) {
                    var windowStartTime = submissionTimesMsec.shift();
                    var windowEndTime = submissionTimesMsec[submissionTimesMsec.length - 1];
                    if (windowEndTime - windowStartTime < SPAM_WINDOW_MSEC) {
                        return true;
                    }
                }
                return false;
            },
            displayTakeBreakMessage: function () {
                $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/take_break_modal_directive.html'),
                    backdrop: 'static',
                    resolve: {},
                    controller: [
                        '$scope', '$uibModalInstance',
                        function ($scope, $uibModalInstance) {
                            $scope.okay = function () {
                                $uibModalInstance.close('okay');
                            };
                        }
                    ]
                });
            },
            reset: function () {
                submissionTimesMsec = [];
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/FeedbackPopupDirective.ts":
/*!************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/FeedbackPopupDirective.ts ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for the feedback popup.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! filters/string-utility-filters/get-abbreviated-text.filter.ts */ "./core/templates/dev/head/filters/string-utility-filters/get-abbreviated-text.filter.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
__webpack_require__(/*! services/stateful/BackgroundMaskService.ts */ "./core/templates/dev/head/services/stateful/BackgroundMaskService.ts");
__webpack_require__(/*! services/stateful/FocusManagerService.ts */ "./core/templates/dev/head/services/stateful/FocusManagerService.ts");
// This directive is unusual in that it should only be invoked indirectly, as
// follows:
//
// <some-html-element popover-placement="bottom"
//                    uib-popover-template="'<[getFeedbackPopoverUrl()]>'"
//                    popover-trigger="click" state-name="<[STATE_NAME]>">
// </some-html-element>
//
// The state-name argument is optional. If it is not provided, the feedback is
// assumed to apply to the exploration as a whole.
oppia.directive('feedbackPopup', [
    'ExplorationEngineService', 'UrlInterpolationService',
    function (ExplorationEngineService, UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {},
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/feedback_popup_directive.html'),
            controller: [
                '$scope', '$element', '$filter', '$http', '$log', '$timeout',
                'AlertsService', 'BackgroundMaskService', 'FocusManagerService',
                'PlayerPositionService', 'UserService', 'WindowDimensionsService',
                'FEEDBACK_SUBJECT_MAX_CHAR_LIMIT',
                function ($scope, $element, $filter, $http, $log, $timeout, AlertsService, BackgroundMaskService, FocusManagerService, PlayerPositionService, UserService, WindowDimensionsService, FEEDBACK_SUBJECT_MAX_CHAR_LIMIT) {
                    $scope.feedbackText = '';
                    $scope.isSubmitterAnonymized = false;
                    $scope.isLoggedIn = null;
                    UserService.getUserInfoAsync().then(function (userInfo) {
                        $scope.isLoggedIn = userInfo.isLoggedIn();
                    });
                    $scope.feedbackSubmitted = false;
                    // We generate a random id since there may be multiple popover
                    // elements on the same page.
                    $scope.feedbackPopoverId = ('feedbackPopover' + Math.random().toString(36).slice(2));
                    $scope.feedbackTitle = ('Feedback when the user was at card "' +
                        PlayerPositionService.getCurrentStateName() + '"');
                    if (WindowDimensionsService.isWindowNarrow()) {
                        BackgroundMaskService.activateMask();
                    }
                    FocusManagerService.setFocus($scope.feedbackPopoverId);
                    var feedbackUrl = ('/explorehandler/give_feedback/' +
                        ExplorationEngineService.getExplorationId());
                    var getTriggerElt = function () {
                        // Find the popover trigger node (the one with a popover-template
                        // attribute). This is also the DOM node that contains the state
                        // name. Since the popover DOM node is inserted as a sibling to the
                        // node, we therefore climb up the DOM tree until we find the
                        // top-level popover element. The trigger will be one of its
                        // siblings.
                        //
                        // If the trigger element cannot be found, a value of undefined is
                        // returned. This could happen if the trigger is clicked while the
                        // feedback confirmation message is being displayed.
                        var elt = $element;
                        var popoverChildElt = null;
                        for (var i = 0; i < 10; i++) {
                            elt = elt.parent();
                            if (!angular.isUndefined(elt.attr('uib-popover-template-popup'))) {
                                popoverChildElt = elt;
                                break;
                            }
                        }
                        if (!popoverChildElt) {
                            $log.error('Could not close popover element.');
                            return undefined;
                        }
                        var popoverElt = popoverChildElt.parent();
                        var triggerElt = null;
                        var childElts = popoverElt.children();
                        for (var i = 0; i < childElts.length; i++) {
                            var childElt = $(childElts[i]);
                            if (childElt.attr('uib-popover-template')) {
                                triggerElt = childElt;
                                break;
                            }
                        }
                        if (!triggerElt) {
                            $log.error('Could not find popover trigger.');
                            return undefined;
                        }
                        return triggerElt;
                    };
                    $scope.saveFeedback = function () {
                        if ($scope.feedbackText) {
                            $http.post(feedbackUrl, {
                                subject: $scope.feedbackTitle,
                                feedback: $scope.feedbackText,
                                include_author: (!$scope.isSubmitterAnonymized && $scope.isLoggedIn),
                                state_name: PlayerPositionService.getCurrentStateName()
                            });
                        }
                        $scope.feedbackSubmitted = true;
                        $timeout(function () {
                            var triggerElt = getTriggerElt();
                            if (triggerElt) {
                                triggerElt.trigger('click');
                            }
                        }, 2000);
                    };
                    $scope.closePopover = function () {
                        // Closing the popover is done by clicking on the popover trigger.
                        // The timeout is needed to postpone the click event to
                        // the subsequent digest cycle. Otherwise, an "$apply already
                        // in progress" error is raised.
                        $timeout(function () {
                            getTriggerElt().trigger('click');
                        });
                        BackgroundMaskService.deactivateMask();
                    };
                    $scope.$on('$destroy', function () {
                        BackgroundMaskService.deactivateMask();
                    });
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/HintAndSolutionModalService.ts":
/*!*****************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/HintAndSolutionModalService.ts ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for showing the hint and solution modals.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts");
__webpack_require__(/*! pages/exploration_player/HintsAndSolutionManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/HintsAndSolutionManagerService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! services/AudioPlayerService.ts */ "./core/templates/dev/head/services/AudioPlayerService.ts");
__webpack_require__(/*! services/AutogeneratedAudioPlayerService.ts */ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts");
oppia.factory('HintAndSolutionModalService', [
    '$uibModal', 'AudioPlayerService',
    'AudioTranslationManagerService',
    'AutogeneratedAudioPlayerService',
    'HintsAndSolutionManagerService', 'PlayerPositionService',
    'PlayerTranscriptService', 'UrlInterpolationService', 'COMPONENT_NAME_HINT',
    'COMPONENT_NAME_SOLUTION', 'EVENT_AUTOPLAY_AUDIO',
    function ($uibModal, AudioPlayerService, AudioTranslationManagerService, AutogeneratedAudioPlayerService, HintsAndSolutionManagerService, PlayerPositionService, PlayerTranscriptService, UrlInterpolationService, COMPONENT_NAME_HINT, COMPONENT_NAME_SOLUTION, EVENT_AUTOPLAY_AUDIO) {
        return {
            displayHintModal: function (index) {
                return $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/hint_and_solution_modal_directive.html'),
                    backdrop: 'static',
                    controller: [
                        '$scope', '$rootScope', '$uibModalInstance',
                        function ($scope, $rootScope, $uibModalInstance) {
                            $scope.isHint = true;
                            $scope.hint = HintsAndSolutionManagerService.displayHint(index);
                            var displayedCard = PlayerTranscriptService.getCard(PlayerPositionService.getDisplayedCardIndex());
                            var recordedVoiceovers = displayedCard.getRecordedVoiceovers();
                            var hintContentId = $scope.hint.getContentId();
                            AudioTranslationManagerService.setSecondaryAudioTranslations(recordedVoiceovers.getBindableVoiceovers(hintContentId), $scope.hint.getHtml(), COMPONENT_NAME_HINT);
                            $rootScope.$broadcast(EVENT_AUTOPLAY_AUDIO);
                            $scope.closeModal = function () {
                                AudioPlayerService.stop();
                                AutogeneratedAudioPlayerService.cancel();
                                AudioTranslationManagerService
                                    .clearSecondaryAudioTranslations();
                                $uibModalInstance.dismiss('cancel');
                            };
                        }
                    ]
                });
            },
            displaySolutionModal: function () {
                return $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/hint_and_solution_modal_directive.html'),
                    backdrop: 'static',
                    controller: [
                        '$scope', '$rootScope', '$uibModalInstance',
                        function ($scope, $rootScope, $uibModalInstance) {
                            $scope.isHint = false;
                            var solution = HintsAndSolutionManagerService.displaySolution();
                            var solutionContentId = solution.explanation.getContentId();
                            var displayedCard = PlayerTranscriptService.getCard(PlayerPositionService.getDisplayedCardIndex());
                            var recordedVoiceovers = displayedCard.getRecordedVoiceovers();
                            AudioTranslationManagerService.setSecondaryAudioTranslations(recordedVoiceovers.getBindableVoiceovers(solutionContentId), solution.explanation.getHtml(), COMPONENT_NAME_SOLUTION);
                            $rootScope.$broadcast(EVENT_AUTOPLAY_AUDIO);
                            var interaction = displayedCard.getInteraction();
                            $scope.shortAnswerHtml = solution.getOppiaShortAnswerResponseHtml(interaction);
                            $scope.solutionExplanationHtml =
                                solution.getOppiaSolutionExplanationResponseHtml();
                            $scope.closeModal = function () {
                                AudioPlayerService.stop();
                                AutogeneratedAudioPlayerService.cancel();
                                AudioTranslationManagerService
                                    .clearSecondaryAudioTranslations();
                                $uibModalInstance.dismiss('cancel');
                            };
                        }
                    ]
                });
            },
            displaySolutionInterstitialModal: function () {
                return $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                        'solution_interstitial_modal_directive.html'),
                    backdrop: 'static',
                    controller: [
                        '$scope', '$uibModalInstance',
                        function ($scope, $uibModalInstance) {
                            $scope.continueToSolution = function () {
                                $uibModalInstance.close();
                            };
                            $scope.cancel = function () {
                                $uibModalInstance.dismiss('cancel');
                            };
                        }
                    ]
                });
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/HintsAndSolutionManagerService.ts":
/*!********************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/HintsAndSolutionManagerService.ts ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Utility service for Hints in the learner's view.
 */
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
oppia.factory('HintsAndSolutionManagerService', [
    '$rootScope', '$timeout',
    'DELAY_FOR_HINT_FEEDBACK_MSEC', 'EVENT_NEW_CARD_AVAILABLE',
    'HINT_REQUEST_STRING_I18N_IDS', 'WAIT_FOR_FIRST_HINT_MSEC',
    'WAIT_FOR_SUBSEQUENT_HINTS_MSEC',
    function ($rootScope, $timeout, DELAY_FOR_HINT_FEEDBACK_MSEC, EVENT_NEW_CARD_AVAILABLE, HINT_REQUEST_STRING_I18N_IDS, WAIT_FOR_FIRST_HINT_MSEC, WAIT_FOR_SUBSEQUENT_HINTS_MSEC) {
        var timeout = null;
        var ACCELERATED_HINT_WAIT_TIME_MSEC = 10000;
        var WAIT_FOR_TOOLTIP_TO_BE_SHOWN_MSEC = 60000;
        var numHintsReleased = 0;
        var numHintsConsumed = 0;
        var solutionReleased = false;
        var solutionConsumed = false;
        var hintsForLatestCard = [];
        var solutionForLatestCard = null;
        var wrongAnswersSinceLastHintConsumed = 0;
        var correctAnswerSubmitted = false;
        // tooltipIsOpen is a flag which says that the tooltip is currently
        // visible to the learner.
        var tooltipIsOpen = false;
        // This is set to true as soon as a hint/solution is clicked or when the
        // tooltip has been triggered.
        var hintsDiscovered = false;
        var tooltipTimeout = null;
        $rootScope.$on(EVENT_NEW_CARD_AVAILABLE, function () {
            correctAnswerSubmitted = true;
            // This prevents tooltip to hide the Continue button of the help card in
            // mobile view.
            tooltipIsOpen = false;
        });
        // This replaces any timeouts that are already queued.
        var enqueueTimeout = function (func, timeToWaitMsec) {
            if (timeout) {
                $timeout.cancel(timeout);
            }
            timeout = $timeout(func, timeToWaitMsec);
        };
        var showTooltip = function () {
            tooltipIsOpen = true;
            hintsDiscovered = true;
        };
        var releaseHint = function () {
            if (!correctAnswerSubmitted) {
                numHintsReleased++;
                if (!hintsDiscovered && !tooltipTimeout) {
                    tooltipTimeout = $timeout(showTooltip, WAIT_FOR_TOOLTIP_TO_BE_SHOWN_MSEC);
                }
            }
        };
        var releaseSolution = function () {
            solutionReleased = true;
        };
        var accelerateHintRelease = function () {
            enqueueTimeout(releaseHint, ACCELERATED_HINT_WAIT_TIME_MSEC);
        };
        var areAllHintsExhausted = function () {
            return numHintsReleased === hintsForLatestCard.length;
        };
        var isAHintWaitingToBeViewed = function () {
            return numHintsConsumed < numHintsReleased;
        };
        var consumeHint = function () {
            hintsDiscovered = true;
            tooltipIsOpen = false;
            if (tooltipTimeout) {
                $timeout.cancel(tooltipTimeout);
            }
            numHintsConsumed++;
            wrongAnswersSinceLastHintConsumed = 0;
            var funcToEnqueue = null;
            if (!areAllHintsExhausted()) {
                funcToEnqueue = releaseHint;
            }
            else if (!!solutionForLatestCard && !solutionReleased) {
                funcToEnqueue = releaseSolution;
            }
            if (funcToEnqueue) {
                enqueueTimeout(funcToEnqueue, WAIT_FOR_SUBSEQUENT_HINTS_MSEC);
            }
        };
        return {
            reset: function (newHints, newSolution) {
                numHintsReleased = 0;
                numHintsConsumed = 0;
                solutionReleased = false;
                solutionConsumed = false;
                hintsForLatestCard = newHints;
                solutionForLatestCard = newSolution;
                wrongAnswersSinceLastHintConsumed = 0;
                correctAnswerSubmitted = false;
                if (timeout) {
                    $timeout.cancel(timeout);
                }
                if (tooltipTimeout) {
                    $timeout.cancel(tooltipTimeout);
                }
                if (hintsForLatestCard.length > 0) {
                    enqueueTimeout(releaseHint, WAIT_FOR_FIRST_HINT_MSEC);
                }
            },
            // WARNING: This method has a side-effect. If the retrieved hint is a
            // pending hint that's being viewed, it starts the timer for the next
            // hint.
            displayHint: function (index) {
                if (index === numHintsConsumed && numHintsConsumed < numHintsReleased) {
                    // The latest hint has been consumed. Start the timer.
                    consumeHint();
                }
                if (index < numHintsReleased) {
                    return hintsForLatestCard[index].hintContent;
                }
                return null;
            },
            displaySolution: function () {
                hintsDiscovered = true;
                solutionConsumed = true;
                if (tooltipTimeout) {
                    $timeout.cancel(tooltipTimeout);
                }
                return solutionForLatestCard;
            },
            getNumHints: function () {
                return hintsForLatestCard.length;
            },
            isHintViewable: function (index) {
                return index < numHintsReleased;
            },
            isHintConsumed: function (index) {
                return index < numHintsConsumed;
            },
            isHintTooltipOpen: function () {
                return tooltipIsOpen;
            },
            isSolutionViewable: function () {
                return solutionReleased;
            },
            isSolutionConsumed: function () {
                return solutionConsumed;
            },
            recordWrongAnswer: function () {
                if (isAHintWaitingToBeViewed()) {
                    return;
                }
                wrongAnswersSinceLastHintConsumed++;
                if (!areAllHintsExhausted() && !isAHintWaitingToBeViewed()) {
                    if (numHintsReleased === 0 &&
                        wrongAnswersSinceLastHintConsumed >= 2) {
                        accelerateHintRelease();
                    }
                    else if (numHintsReleased > 0 && wrongAnswersSinceLastHintConsumed >= 1) {
                        accelerateHintRelease();
                    }
                }
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ImagePreloaderService.ts":
/*!***********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ImagePreloaderService.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to preload image into AssetsBackendApiService's cache.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/ExtractImageFilenamesFromStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExtractImageFilenamesFromStateService.ts");
__webpack_require__(/*! services/AssetsBackendApiService.ts */ "./core/templates/dev/head/services/AssetsBackendApiService.ts");
__webpack_require__(/*! services/ComputeGraphService.ts */ "./core/templates/dev/head/services/ComputeGraphService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
oppia.factory('ImagePreloaderService', [
    '$q', '$uibModal', 'AssetsBackendApiService', 'ComputeGraphService',
    'ContextService', 'ExtractImageFilenamesFromStateService',
    'UrlInterpolationService',
    function ($q, $uibModal, AssetsBackendApiService, ComputeGraphService, ContextService, ExtractImageFilenamesFromStateService, UrlInterpolationService) {
        var MAX_NUM_IMAGE_FILES_TO_DOWNLOAD_SIMULTANEOUSLY = 3;
        var _filenamesOfImageCurrentlyDownloading = [];
        var _filenamesOfImageToBeDownloaded = [];
        var _filenamesOfImageFailedToDownload = [];
        var _exploration = null;
        var _states = null;
        var _hasImagePreloaderServiceStarted = false;
        // imageLoadedCallback is an object of objects (identified by the filenames
        // which are being downloaded at the time they are required by the
        // directive).The object contains the resolve method of the promise
        // attached with getInImageUrl method.
        var _imageLoadedCallback = {};
        var _hasImagePreloaderServiceStarted = false;
        var _init = function (exploration) {
            _exploration = exploration;
            _states = exploration.states;
            _hasImagePreloaderServiceStarted = true;
        };
        /**
         * Gets the Url for the image file.
         * @param {string} filename - Filename of the image whose Url is to be
         *                            created.
         * @param {function} onLoadCallback - Function that is called when the
         *                                    Url of the loaded image is obtained.
         */
        var _getImageUrl = function (filename, onLoadCallback, onErrorCallback) {
            AssetsBackendApiService.loadImage(ContextService.getExplorationId(), filename)
                .then(function (loadedImageFile) {
                if (_isInFailedDownload(loadedImageFile.filename)) {
                    _removeFromFailedDownload(loadedImageFile.filename);
                }
                var objectUrl = URL.createObjectURL(loadedImageFile.data);
                onLoadCallback(objectUrl);
            }, function (filename) {
                onErrorCallback();
            });
        };
        /**
         * Checks if the given filename is in _filenamesOfImageFailedToDownload or
         * not.
         * @param {string} filename - The filename of the image which is to be
         *                            removed from the
         *                            _filenamesOfImageFailedToDownload array.
         */
        var _isInFailedDownload = function (filename) {
            return _filenamesOfImageFailedToDownload.indexOf(filename) >= 0;
        };
        /**
         * Removes the given filename from the _filenamesOfImageFailedToDownload.
         * @param {string} filename - The filename of the file which is to be
         *                            removed from the
         *                            _filenamesOfImageFailedToDownload array.
         */
        var _removeFromFailedDownload = function (filename) {
            var index = _filenamesOfImageFailedToDownload.indexOf(filename);
            _filenamesOfImageFailedToDownload.splice(index, 1);
        };
        /**
         * Gets image files names in Bfs order from the state.
         * @param {string} sourceStateName - The name of the starting state
         *                                   from which the filenames should
         *                                   be obtained.
         */
        var _getImageFilenamesInBfsOrder = function (sourceStateName) {
            var stateNamesInBfsOrder = (ComputeGraphService.computeBfsTraversalOfStates(_exploration.getInitialState().name, _exploration.getStates(), sourceStateName));
            var imageFilenames = [];
            stateNamesInBfsOrder.forEach(function (stateName) {
                var state = _states.getState(stateName);
                ExtractImageFilenamesFromStateService.getImageFilenamesInState(state)
                    .forEach(function (filename) {
                    imageFilenames.push(filename);
                });
            });
            return imageFilenames;
        };
        /**
         * Removes the filename from the _filenamesOfImageCurrentlyDownloading and
         * initiates the loading of the next image file.
         * @param {string} filename - The filename which is to be removed from the
         *                            _filenamesOfImageCurrentlyDownloading array.
         */
        var _removeCurrentAndLoadNextImage = function (filename) {
            _filenamesOfImageCurrentlyDownloading = (_filenamesOfImageCurrentlyDownloading.filter(function (imageFilename) {
                return filename !== imageFilename;
            }));
            if (_filenamesOfImageToBeDownloaded.length > 0) {
                var nextImageFilename = _filenamesOfImageToBeDownloaded.shift();
                _filenamesOfImageCurrentlyDownloading.push(nextImageFilename);
                _loadImage(nextImageFilename);
            }
        };
        /**
         * Handles the loading of the image file.
         * @param {string} imageFilename - The filename of the image to be loaded.
         */
        var _loadImage = function (imageFilename) {
            AssetsBackendApiService.loadImage(ContextService.getExplorationId(), imageFilename)
                .then(function (loadedImage) {
                _removeCurrentAndLoadNextImage(loadedImage.filename);
                if (_imageLoadedCallback[loadedImage.filename]) {
                    var onLoadImageResolve = ((_imageLoadedCallback[loadedImage.filename]).resolveMethod);
                    var objectUrl = URL.createObjectURL(loadedImage.data);
                    onLoadImageResolve(objectUrl);
                    _imageLoadedCallback[loadedImage.filename] = null;
                }
            }, function (filename) {
                if (_imageLoadedCallback[filename]) {
                    var onFailedDownload = ((_imageLoadedCallback[filename]).rejectMethod);
                    onFailedDownload();
                    _imageLoadedCallback[filename] = null;
                }
                _filenamesOfImageFailedToDownload.push(filename);
                _removeCurrentAndLoadNextImage(filename);
            });
        };
        /**
         * Initiates the image preloader beginning from the sourceStateName.
         * @param {string} sourceStateName - The name of the state from which
         *                                   preloader should start.
         */
        var _kickOffImagePreloader = function (sourceStateName) {
            _filenamesOfImageToBeDownloaded = (_getImageFilenamesInBfsOrder(sourceStateName));
            var imageFilesInGivenState = ExtractImageFilenamesFromStateService
                .getImageFilenamesInState(_states.getState(sourceStateName));
            _filenamesOfImageFailedToDownload = _filenamesOfImageFailedToDownload
                .filter(function (filename) {
                return imageFilesInGivenState.indexOf(filename) === -1;
            });
            while (_filenamesOfImageCurrentlyDownloading.length <
                MAX_NUM_IMAGE_FILES_TO_DOWNLOAD_SIMULTANEOUSLY &&
                _filenamesOfImageToBeDownloaded.length > 0) {
                var imageFilename = _filenamesOfImageToBeDownloaded.shift();
                _filenamesOfImageCurrentlyDownloading.push(imageFilename);
                _loadImage(imageFilename);
            }
        };
        /**
         * Cancels the preloading of the images that are being downloaded.
         */
        var _cancelPreloading = function () {
            AssetsBackendApiService.abortAllCurrentImageDownloads();
            _filenamesOfImageCurrentlyDownloading = [];
        };
        /**
         * When the state changes, it decides whether to restart the preloader
         * starting from the 'stateName' state or not.
         * @param {string} stateName - The name of the state the user shifts to.
         */
        var _onStateChange = function (stateName) {
            if (stateName !== _exploration.getInitialState().name) {
                _imageLoadedCallback = {};
                var imageFilenamesInState = [];
                var noOfImageFilesCurrentlyDownloading = 0;
                var noOfImagesNeitherInCacheNorDownloading = 0;
                var state = _states.getState(stateName);
                imageFilenamesInState = (ExtractImageFilenamesFromStateService
                    .getImageFilenamesInState(state));
                imageFilenamesInState.forEach(function (filename) {
                    var isFileCurrentlyDownloading = (_filenamesOfImageCurrentlyDownloading.indexOf(filename) >= 0);
                    if (!AssetsBackendApiService.isCached(filename) &&
                        !isFileCurrentlyDownloading) {
                        noOfImagesNeitherInCacheNorDownloading += 1;
                    }
                    if (isFileCurrentlyDownloading) {
                        noOfImageFilesCurrentlyDownloading += 1;
                    }
                });
                if (noOfImagesNeitherInCacheNorDownloading > 0 &&
                    noOfImageFilesCurrentlyDownloading <= 1) {
                    _cancelPreloading();
                    _kickOffImagePreloader(stateName);
                }
            }
        };
        /**
        * Gets the dimensions of the images from the filename provided.
        * @param {string} filename - The string from which the dimensions of the
        *                           images should be extracted.
        */
        var getDimensionsOfImage = function (filename) {
            var dimensionsRegex = RegExp('[^/]+_height_([0-9]+)_width_([0-9]+)\.(png|jpeg|jpg|gif)$', 'g');
            var imageDimensions = dimensionsRegex.exec(filename);
            if (imageDimensions) {
                var dimensions = {
                    height: Number(imageDimensions[1]),
                    width: Number(imageDimensions[2])
                };
                return dimensions;
            }
            else {
                throw new Error('The image name is invalid, it does not contain dimensions.');
            }
        };
        return {
            init: _init,
            kickOffImagePreloader: _kickOffImagePreloader,
            getDimensionsOfImage: getDimensionsOfImage,
            onStateChange: _onStateChange,
            isInFailedDownload: _isInFailedDownload,
            isLoadingImageFile: function (filename) {
                return _filenamesOfImageCurrentlyDownloading.indexOf(filename) !== -1;
            },
            restartImagePreloader: function (sourceStateName) {
                _cancelPreloading();
                _kickOffImagePreloader(sourceStateName);
            },
            getFilenamesOfImageCurrentlyDownloading: function () {
                return _filenamesOfImageCurrentlyDownloading;
            },
            getImageUrl: function (filename) {
                return $q(function (resolve, reject) {
                    if (AssetsBackendApiService.isCached(filename) ||
                        _isInFailedDownload(filename)) {
                        _getImageUrl(filename, resolve, reject);
                    }
                    else {
                        _imageLoadedCallback[filename] = {
                            resolveMethod: resolve,
                            rejectMethod: reject
                        };
                    }
                });
            },
            inExplorationPlayer: function () {
                return _hasImagePreloaderServiceStarted;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/InputResponsePairDirective.ts":
/*!****************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/InputResponsePairDirective.ts ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for an input/response pair in the learner view.
 */
__webpack_require__(/*! pages/exploration_player/AudioTranslationManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationPlayerStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! services/AudioPlayerService.ts */ "./core/templates/dev/head/services/AudioPlayerService.ts");
__webpack_require__(/*! services/AutogeneratedAudioPlayerService.ts */ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts");
__webpack_require__(/*! services/ExplorationHtmlFormatterService.ts */ "./core/templates/dev/head/services/ExplorationHtmlFormatterService.ts");
oppia.directive('inputResponsePair', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                data: '=',
                oppiaAvatarImageUrl: '&',
                profilePicture: '&',
                getInputResponsePairId: '&inputResponsePairId',
                isLastPair: '&',
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                'input_response_pair_directive.html'),
            controller: [
                '$scope', 'ExplorationEngineService', 'PlayerTranscriptService',
                'ExplorationHtmlFormatterService', 'INTERACTION_SPECS',
                'PlayerPositionService', 'COMPONENT_NAME_FEEDBACK',
                'AudioTranslationManagerService', 'AudioPlayerService',
                'AutogeneratedAudioPlayerService', 'AUDIO_HIGHLIGHT_CSS_CLASS',
                'ExplorationPlayerStateService',
                function ($scope, ExplorationEngineService, PlayerTranscriptService, ExplorationHtmlFormatterService, INTERACTION_SPECS, PlayerPositionService, COMPONENT_NAME_FEEDBACK, AudioTranslationManagerService, AudioPlayerService, AutogeneratedAudioPlayerService, AUDIO_HIGHLIGHT_CSS_CLASS, ExplorationPlayerStateService) {
                    $scope.getAnswerPopoverUrl = function () {
                        return UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                            'answer_popup_container_directive.html');
                    };
                    $scope.isCurrentCardAtEndOfTranscript = function () {
                        return PlayerTranscriptService.isLastCard(PlayerPositionService.getDisplayedCardIndex());
                    };
                    $scope.getAnswerHtml = function () {
                        var displayedCard = PlayerTranscriptService.getCard(PlayerPositionService.getDisplayedCardIndex());
                        var interaction = displayedCard.getInteraction();
                        if ($scope.data) {
                            return ExplorationHtmlFormatterService.getAnswerHtml($scope.data.learnerInput, interaction.id, interaction.customizationArgs);
                        }
                    };
                    // Returns a HTML string representing a short summary of the answer
                    // , or null if the answer does not have to be summarized.
                    $scope.getShortAnswerHtml = function () {
                        var displayedCard = PlayerTranscriptService.getCard(PlayerPositionService.getDisplayedCardIndex());
                        var interaction = displayedCard.getInteraction();
                        var shortAnswerHtml = '';
                        if ($scope.data && interaction.id &&
                            INTERACTION_SPECS[interaction.id].needs_summary) {
                            shortAnswerHtml = (ExplorationHtmlFormatterService.getShortAnswerHtml($scope.data.learnerInput, interaction.id, interaction.customizationArgs));
                        }
                        return shortAnswerHtml;
                    };
                    $scope.getFeedbackAudioHighlightClass = function () {
                        if (!$scope.isLastPair) {
                            return '';
                        }
                        if (AudioTranslationManagerService
                            .getCurrentComponentName() ===
                            COMPONENT_NAME_FEEDBACK &&
                            (AudioPlayerService.isPlaying() ||
                                AutogeneratedAudioPlayerService.isPlaying())) {
                            return AUDIO_HIGHLIGHT_CSS_CLASS;
                        }
                    };
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/LearnerLocalNav.ts":
/*!*****************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/LearnerLocalNav.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Controller for the local navigation in the learner view.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationPlayerStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts");
__webpack_require__(/*! pages/exploration_player/FeedbackPopupDirective.ts */ "./core/templates/dev/head/pages/exploration_player/FeedbackPopupDirective.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.service.ts */ "./core/templates/dev/head/pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.service.ts");
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
__webpack_require__(/*! services/stateful/FocusManagerService.ts */ "./core/templates/dev/head/services/stateful/FocusManagerService.ts");
oppia.constant('FLAG_EXPLORATION_URL_TEMPLATE', '/flagexplorationhandler/<exploration_id>');
oppia.controller('LearnerLocalNav', [
    '$http', '$rootScope', '$scope', '$uibModal', 'AlertsService',
    'ExplorationEngineService', 'ExplorationPlayerStateService',
    'FocusManagerService', 'ShowSuggestionModalForLearnerLocalViewService',
    'UrlInterpolationService', 'UserService', 'FEEDBACK_POPOVER_PATH',
    'FLAG_EXPLORATION_URL_TEMPLATE',
    function ($http, $rootScope, $scope, $uibModal, AlertsService, ExplorationEngineService, ExplorationPlayerStateService, FocusManagerService, ShowSuggestionModalForLearnerLocalViewService, UrlInterpolationService, UserService, FEEDBACK_POPOVER_PATH, FLAG_EXPLORATION_URL_TEMPLATE) {
        $scope.explorationId = ExplorationEngineService.getExplorationId();
        $scope.canEdit = GLOBALS.canEdit;
        $scope.username = '';
        $rootScope.loadingMessage = 'Loading';
        UserService.getUserInfoAsync().then(function (userInfo) {
            $scope.username = userInfo.getUsername();
            $rootScope.loadingMessage = '';
        });
        $scope.getFeedbackPopoverUrl = function () {
            return UrlInterpolationService.getDirectiveTemplateUrl(FEEDBACK_POPOVER_PATH);
        };
        $scope.showLearnerSuggestionModal = function () {
            ShowSuggestionModalForLearnerLocalViewService.showSuggestionModal('edit_exploration_state_content', {});
        };
        $scope.showFlagExplorationModal = function () {
            $uibModal.open({
                templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/flag_exploration_modal_directive.html'),
                backdrop: true,
                controller: [
                    '$scope', '$uibModalInstance', 'PlayerPositionService',
                    function ($scope, $uibModalInstance, PlayerPositionService) {
                        $scope.flagMessageTextareaIsShown = false;
                        var stateName = PlayerPositionService.getCurrentStateName();
                        $scope.showFlagMessageTextarea = function (value) {
                            if (value) {
                                $scope.flagMessageTextareaIsShown = true;
                                FocusManagerService.setFocus('flagMessageTextarea');
                            }
                        };
                        $scope.submitReport = function () {
                            if ($scope.flagMessage) {
                                $uibModalInstance.close({
                                    report_type: $scope.flag,
                                    report_text: $scope.flagMessage,
                                    state: stateName
                                });
                            }
                        };
                        $scope.cancel = function () {
                            $uibModalInstance.dismiss('cancel');
                        };
                    }
                ]
            }).result.then(function (result) {
                var flagExplorationUrl = UrlInterpolationService.interpolateUrl(FLAG_EXPLORATION_URL_TEMPLATE, {
                    exploration_id: $scope.explorationId
                });
                var report = ('[' + result.state + '] (' + result.report_type + ') ' +
                    result.report_text);
                $http.post(flagExplorationUrl, {
                    report_text: report
                }).error(function (error) {
                    AlertsService.addWarning(error);
                });
                $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                        'exploration_successfully_flagged_modal_directive.html'),
                    backdrop: true,
                    controller: [
                        '$scope', '$uibModalInstance',
                        function ($scope, $uibModalInstance) {
                            $scope.close = function () {
                                $uibModalInstance.dismiss('cancel');
                            };
                        }
                    ]
                });
            });
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/LearnerParamsService.ts":
/*!**********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/LearnerParamsService.ts ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview A service that maintains the current set of parameters for the
 * learner.
 */
oppia.factory('LearnerParamsService', [function () {
        var _paramDict = {};
        return {
            // TODO(sll): Forbid use of 'answer', 'choices' as possible keys.
            init: function (initParamSpecs) {
                // The initParamSpecs arg is a dict mapping the parameter names used in
                // the exploration to their default values.
                _paramDict = angular.copy(initParamSpecs);
            },
            getValue: function (paramName) {
                if (!_paramDict.hasOwnProperty(paramName)) {
                    throw 'Invalid parameter name: ' + paramName;
                }
                else {
                    return angular.copy(_paramDict[paramName]);
                }
            },
            setValue: function (paramName, newParamValue) {
                // TODO(sll): Currently, all parameters are strings. In the future, we
                // will need to maintain information about parameter types.
                if (!_paramDict.hasOwnProperty(paramName)) {
                    throw 'Cannot set unknown parameter: ' + paramName;
                }
                else {
                    _paramDict[paramName] = String(newParamValue);
                }
            },
            getAllParams: function () {
                return angular.copy(_paramDict);
            }
        };
    }]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/LearnerViewInfo.ts":
/*!*****************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/LearnerViewInfo.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Controllers for the learner view info section of the
 * footer.
 */
__webpack_require__(/*! components/profile-link-directives/profile-link-image/profile-link-image.directive.ts */ "./core/templates/dev/head/components/profile-link-directives/profile-link-image/profile-link-image.directive.ts");
__webpack_require__(/*! components/common-layout-directives/sharing-links/sharing-links.directive.ts */ "./core/templates/dev/head/components/common-layout-directives/sharing-links/sharing-links.directive.ts");
__webpack_require__(/*! filters/summarize-nonnegative-number.filter.ts */ "./core/templates/dev/head/filters/summarize-nonnegative-number.filter.ts");
__webpack_require__(/*! filters/string-utility-filters/truncate-and-capitalize.filter.ts */ "./core/templates/dev/head/filters/string-utility-filters/truncate-and-capitalize.filter.ts");
__webpack_require__(/*! components/ratings/rating-computation/rating-computation.service.ts */ "./core/templates/dev/head/components/ratings/rating-computation/rating-computation.service.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/DateTimeFormatService.ts */ "./core/templates/dev/head/services/DateTimeFormatService.ts");
oppia.controller('LearnerViewInfo', [
    '$http', '$log', '$scope', '$uibModal', 'ContextService',
    'UrlInterpolationService', 'EXPLORATION_SUMMARY_DATA_URL_TEMPLATE',
    function ($http, $log, $scope, $uibModal, ContextService, UrlInterpolationService, EXPLORATION_SUMMARY_DATA_URL_TEMPLATE) {
        var explorationId = ContextService.getExplorationId();
        var expInfo = null;
        $scope.showInformationCard = function () {
            if (expInfo) {
                openInformationCardModal();
            }
            else {
                $http.get(EXPLORATION_SUMMARY_DATA_URL_TEMPLATE, {
                    params: {
                        stringified_exp_ids: JSON.stringify([explorationId]),
                        include_private_explorations: JSON.stringify(true)
                    }
                }).then(function (response) {
                    expInfo = response.data.summaries[0];
                    openInformationCardModal();
                }, function () {
                    $log.error('Information card failed to load for exploration ' + explorationId);
                });
            }
        };
        var openInformationCardModal = function () {
            $uibModal.open({
                animation: true,
                templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/information_card_modal_directive.html'),
                windowClass: 'oppia-modal-information-card',
                resolve: {
                    expInfo: function () {
                        return expInfo;
                    }
                },
                controller: [
                    '$scope', '$window', '$uibModalInstance', 'DateTimeFormatService',
                    'RatingComputationService', 'expInfo', 'UrlInterpolationService',
                    function ($scope, $window, $uibModalInstance, DateTimeFormatService, RatingComputationService, expInfo, UrlInterpolationService) {
                        var getExplorationTagsSummary = function (arrayOfTags) {
                            var tagsToShow = [];
                            var tagsInTooltip = [];
                            var MAX_CHARS_TO_SHOW = 45;
                            for (var i = 0; i < arrayOfTags.length; i++) {
                                var newLength = (tagsToShow.toString() + arrayOfTags[i]).length;
                                if (newLength < MAX_CHARS_TO_SHOW) {
                                    tagsToShow.push(arrayOfTags[i]);
                                }
                                else {
                                    tagsInTooltip.push(arrayOfTags[i]);
                                }
                            }
                            return {
                                tagsToShow: tagsToShow,
                                tagsInTooltip: tagsInTooltip
                            };
                        };
                        var getLastUpdatedString = function (millisSinceEpoch) {
                            return DateTimeFormatService.getLocaleAbbreviatedDatetimeString(millisSinceEpoch);
                        };
                        $scope.DEFAULT_TWITTER_SHARE_MESSAGE_PLAYER = (GLOBALS.DEFAULT_TWITTER_SHARE_MESSAGE_PLAYER);
                        $scope.averageRating = (RatingComputationService.computeAverageRating(expInfo.ratings));
                        var contributorsSummary = (expInfo.human_readable_contributors_summary || {});
                        $scope.contributorNames = Object.keys(contributorsSummary).sort(function (contributorUsername1, contributorUsername2) {
                            var commitsOfContributor1 = contributorsSummary[contributorUsername1].num_commits;
                            var commitsOfContributor2 = contributorsSummary[contributorUsername2].num_commits;
                            return commitsOfContributor2 - commitsOfContributor1;
                        });
                        $scope.explorationId = expInfo.id;
                        $scope.explorationTags = getExplorationTagsSummary(expInfo.tags);
                        $scope.explorationTitle = expInfo.title;
                        $scope.infoCardBackgroundCss = {
                            'background-color': expInfo.thumbnail_bg_color
                        };
                        $scope.infoCardBackgroundImageUrl = expInfo.thumbnail_icon_url;
                        $scope.getStaticImageUrl = (UrlInterpolationService.getStaticImageUrl);
                        $scope.lastUpdatedString = getLastUpdatedString(expInfo.last_updated_msec);
                        $scope.numViews = expInfo.num_views;
                        $scope.objective = expInfo.objective;
                        $scope.explorationIsPrivate = (expInfo.status === 'private');
                        $scope.cancel = function () {
                            $uibModalInstance.dismiss();
                        };
                    }
                ]
            });
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/LearnerViewRatingService.ts":
/*!**************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/LearnerViewRatingService.ts ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for the rating functionality in the learner view.
 */
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
oppia.factory('LearnerViewRatingService', [
    '$http', '$rootScope', 'ExplorationEngineService',
    function ($http, $rootScope, ExplorationEngineService) {
        var explorationId = ExplorationEngineService.getExplorationId();
        var ratingsUrl = '/explorehandler/rating/' + explorationId;
        var userRating;
        return {
            init: function (successCallback) {
                $http.get(ratingsUrl).then(function (response) {
                    successCallback(response.data.user_rating);
                    userRating = response.data.user_rating;
                    $rootScope.$broadcast('ratingServiceInitialized');
                });
            },
            submitUserRating: function (ratingValue) {
                $http.put(ratingsUrl, {
                    user_rating: ratingValue
                });
                userRating = ratingValue;
                $rootScope.$broadcast('ratingUpdated');
            },
            getUserRating: function () {
                return userRating;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/NumberAttemptsService.ts":
/*!***********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/NumberAttemptsService.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to track the number of answer attempts by the learner
 * within a card.
 */
oppia.factory('NumberAttemptsService', [
    function () {
        var numberAttempts = 0;
        return {
            submitAttempt: function () {
                numberAttempts++;
            },
            reset: function () {
                numberAttempts = 0;
            },
            getNumberAttempts: function () {
                return numberAttempts;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/PlayerCorrectnessFeedbackEnabledService.ts":
/*!*****************************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/PlayerCorrectnessFeedbackEnabledService.ts ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service which sets and determines whether the correctness
 * feedback is enabled or not.
 */
oppia.factory('PlayerCorrectnessFeedbackEnabledService', [function () {
        var _correctnessFeedbackIsEnabled = false;
        var _init = function (correctnessFeedbackIsEnabled) {
            _correctnessFeedbackIsEnabled = correctnessFeedbackIsEnabled;
        };
        return {
            init: function (correctnessFeedbackIsEnabled) {
                _init(correctnessFeedbackIsEnabled);
            },
            isEnabled: function () {
                return _correctnessFeedbackIsEnabled;
            }
        };
    }]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts":
/*!***********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for keeping track of the learner's position.
 */
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
oppia.factory('PlayerPositionService', [
    'PlayerTranscriptService', function (PlayerTranscriptService) {
        var displayedCardIndex = null;
        var onChangeCallback = null;
        var learnerJustSubmittedAnAnswer = false;
        return {
            init: function (callback) {
                displayedCardIndex = null;
                onChangeCallback = callback;
            },
            getCurrentStateName: function () {
                return (PlayerTranscriptService.getCard(displayedCardIndex).getStateName());
            },
            setDisplayedCardIndex: function (index) {
                var oldIndex = displayedCardIndex;
                displayedCardIndex = index;
                if (oldIndex !== displayedCardIndex) {
                    onChangeCallback();
                }
            },
            getDisplayedCardIndex: function () {
                return displayedCardIndex;
            },
            recordAnswerSubmission: function () {
                learnerJustSubmittedAnAnswer = true;
            },
            recordNavigationButtonClick: function () {
                learnerJustSubmittedAnAnswer = false;
            },
            hasLearnerJustSubmittedAnAnswer: function () {
                return learnerJustSubmittedAnAnswer;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts":
/*!*************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for the learner view transcript.
 */
__webpack_require__(/*! domain/state_card/StateCardObjectFactory.ts */ "./core/templates/dev/head/domain/state_card/StateCardObjectFactory.ts");
// A service that maintains the transcript of the playthrough (i.e., what cards
// are shown, what answers have been given, etc. Note that this service does
// not maintain the currently-active card -- it's more like a log of what the
// learner has 'discovered' so far.
oppia.factory('PlayerTranscriptService', [
    '$log', 'StateCardObjectFactory', function ($log, StateCardObjectFactory) {
        // Each element of this array represents a 'StateCard' domain object.
        //
        // Note that every card in this transcript is visible on the screen. The
        // 'card.getDestStateName()' field is intended to identify transcripts where
        // there is a card 'in reserve', but the learner has not yet navigated to it
        // -- this happens if the current card offers feedback to the learner before
        // they carry on.
        var transcript = [];
        var numAnswersSubmitted = 0;
        return {
            restore: function (oldTranscript) {
                transcript = angular.copy(oldTranscript);
            },
            init: function () {
                transcript = [];
                numAnswersSubmitted = 0;
            },
            hasEncounteredStateBefore: function (stateName) {
                return transcript.some(function (transcriptItem) {
                    return transcriptItem.getStateName() === stateName;
                });
            },
            addNewCard: function (newCard) {
                transcript.push(newCard);
                numAnswersSubmitted = 0;
            },
            addPreviousCard: function () {
                if (transcript.length === 1) {
                    throw Error('Exploration player is on the first card and hence no previous ' +
                        'card exists.');
                }
                // TODO(aks681): Once worked examples are introduced, modify the below
                // line to take into account the number of worked examples displayed.
                var copyOfPreviousCard = angular.copy(transcript[transcript.length - 2]);
                copyOfPreviousCard.markAsNotCompleted();
                transcript.push(copyOfPreviousCard);
            },
            addNewInput: function (input, isHint) {
                var card = this.getLastCard();
                var pairs = card.getInputResponsePairs();
                if (pairs.length > 0 && card.getLastOppiaResponse() === null) {
                    throw Error('Trying to add an input before the response for the previous ' +
                        'input has been received.');
                }
                if (!isHint) {
                    numAnswersSubmitted += 1;
                }
                transcript[transcript.length - 1].addInputResponsePair({
                    learnerInput: input,
                    oppiaResponse: null,
                    isHint: isHint
                });
            },
            addNewResponse: function (response) {
                var card = this.getLastCard();
                card.setLastOppiaResponse(response);
            },
            getNumCards: function () {
                return transcript.length;
            },
            getCard: function (index) {
                if (index < 0 || index >= transcript.length) {
                    $log.error('Requested card with index ' + index +
                        ', but transcript only has length ' +
                        transcript.length + ' cards.');
                }
                return transcript[index];
            },
            getLastAnswerOnDisplayedCard: function (displayedCardIndex) {
                if (this.isLastCard(displayedCardIndex) ||
                    transcript[displayedCardIndex].getStateName() === null ||
                    transcript[displayedCardIndex].getInputResponsePairs().length === 0) {
                    return null;
                }
                else {
                    return transcript[displayedCardIndex].
                        getInputResponsePairs().slice(-1)[0].learnerInput;
                }
            },
            isLastCard: function (index) {
                return index === transcript.length - 1;
            },
            getLastCard: function () {
                return this.getCard(transcript.length - 1);
            },
            getNumSubmitsForLastCard: function () {
                return numAnswersSubmitted;
            },
            updateLatestInteractionHtml: function (newInteractionHtml) {
                this.getLastCard().setInteractionHtml(newInteractionHtml);
            },
            getLastStateName: function () {
                return this.getLastCard().getStateName();
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/PretestEngineService.ts":
/*!**********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/PretestEngineService.ts ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Utility service for the pretests for an exploration.
 */
__webpack_require__(/*! domain/question/QuestionObjectFactory.ts */ "./core/templates/dev/head/domain/question/QuestionObjectFactory.ts");
__webpack_require__(/*! domain/state_card/StateCardObjectFactory.ts */ "./core/templates/dev/head/domain/state_card/StateCardObjectFactory.ts");
__webpack_require__(/*! expressions/ExpressionInterpolationService.ts */ "./core/templates/dev/head/expressions/ExpressionInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AnswerClassificationService.ts */ "./core/templates/dev/head/pages/exploration_player/AnswerClassificationService.ts");
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/ExplorationHtmlFormatterService.ts */ "./core/templates/dev/head/services/ExplorationHtmlFormatterService.ts");
__webpack_require__(/*! services/stateful/FocusManagerService.ts */ "./core/templates/dev/head/services/stateful/FocusManagerService.ts");
oppia.constant('INTERACTION_SPECS', GLOBALS.INTERACTION_SPECS);
oppia.factory('PretestEngineService', [
    '$http', '$q', '$rootScope', 'AlertsService', 'AnswerClassificationService',
    'ContextService', 'ExplorationHtmlFormatterService',
    'ExpressionInterpolationService', 'FocusManagerService',
    'QuestionObjectFactory', 'StateCardObjectFactory',
    'INTERACTION_DISPLAY_MODE_INLINE', 'INTERACTION_SPECS',
    function ($http, $q, $rootScope, AlertsService, AnswerClassificationService, ContextService, ExplorationHtmlFormatterService, ExpressionInterpolationService, FocusManagerService, QuestionObjectFactory, StateCardObjectFactory, INTERACTION_DISPLAY_MODE_INLINE, INTERACTION_SPECS) {
        var _explorationId = ContextService.getExplorationId();
        var version = GLOBALS.explorationVersion;
        var answerIsBeingProcessed = false;
        var pretestQuestions = [];
        var currentIndex = null;
        var nextIndex = null;
        var randomFromArray = function (arr) {
            return arr[Math.floor(Math.random() * arr.length)];
        };
        // Evaluate feedback.
        var makeFeedback = function (feedbackHtml, envs) {
            return ExpressionInterpolationService.processHtml(feedbackHtml, envs);
        };
        // Evaluate question string.
        var makeQuestion = function (newState, envs) {
            return ExpressionInterpolationService.processHtml(newState.content.getHtml(), envs);
        };
        var _getRandomSuffix = function () {
            // This is a bit of a hack. When a refresh to a $scope variable
            // happens,
            // AngularJS compares the new value of the variable to its previous
            // value. If they are the same, then the variable is not updated.
            // Appending a random suffix makes the new value different from the
            // previous one, and thus indirectly forces a refresh.
            var randomSuffix = '';
            var N = Math.round(Math.random() * 1000);
            for (var i = 0; i < N; i++) {
                randomSuffix += ' ';
            }
            return randomSuffix;
        };
        // This should only be called when 'exploration' is non-null.
        var _loadInitialQuestion = function (successCallback) {
            var initialState = pretestQuestions[0].getStateData();
            var questionHtml = makeQuestion(initialState, []);
            if (questionHtml === null) {
                AlertsService.addWarning('Expression parsing error.');
                return;
            }
            currentIndex = 0;
            nextIndex = 0;
            var interaction = initialState.interaction;
            var nextFocusLabel = FocusManagerService.generateFocusLabel();
            var interactionId = interaction.id;
            var interactionHtml = null;
            if (interactionId) {
                interactionHtml = ExplorationHtmlFormatterService.getInteractionHtml(interactionId, interaction.customizationArgs, true, nextFocusLabel);
            }
            var initialCard = StateCardObjectFactory.createNewCard(null, questionHtml, interactionHtml, interaction, initialState.recordedVoiceovers, initialState.content.getContentId());
            successCallback(initialCard, nextFocusLabel);
        };
        var _getCurrentStateData = function () {
            return pretestQuestions[currentIndex].getStateData();
        };
        var _getNextStateData = function () {
            return pretestQuestions[nextIndex].getStateData();
        };
        var _getNextInteractionHtml = function (labelForFocusTarget) {
            var interactionId = _getNextStateData().interaction.id;
            return ExplorationHtmlFormatterService.getInteractionHtml(interactionId, _getNextStateData().interaction.customizationArgs, true, labelForFocusTarget);
        };
        return {
            /**
             * Initializes the pretests for an exploration, passing the data for the
             * first question to successCallback.
             *
             *
             * @param {function} successCallback - The function to execute after the
             *   pretest question data is successfully loaded. This function will
             *   be passed two arguments:
             *   - initHtml {string}, an HTML string representing the content of the
             *       first state.
             */
            init: function (pretestQuestionDicts, successCallback) {
                answerIsBeingProcessed = false;
                for (var i = 0; i < pretestQuestionDicts.length; i++) {
                    pretestQuestions.push(QuestionObjectFactory.createFromBackendDict(pretestQuestionDicts[i]));
                }
                _loadInitialQuestion(successCallback);
            },
            recordNewCardAdded: function () {
                currentIndex = nextIndex;
            },
            getPretestQuestionCount: function () {
                return pretestQuestions.length;
            },
            getExplorationId: function () {
                return _explorationId;
            },
            getExplorationVersion: function () {
                return version;
            },
            getLanguageCode: function () {
                return pretestQuestions[currentIndex].getLanguageCode();
            },
            isInPreviewMode: function () {
                return false;
            },
            submitAnswer: function (answer, interactionRulesService, successCallback) {
                if (answerIsBeingProcessed) {
                    return;
                }
                answerIsBeingProcessed = true;
                var oldIndex = currentIndex;
                var oldState = _getCurrentStateData();
                var recordedVoiceovers = oldState.recordedVoiceovers;
                var classificationResult = (AnswerClassificationService.getMatchingClassificationResult(null, oldState.interaction, answer, interactionRulesService));
                var answerIsCorrect = classificationResult.outcome.labelledAsCorrect;
                // Use angular.copy() to clone the object
                // since classificationResult.outcome points
                // at oldState.interaction.default_outcome
                var outcome = angular.copy(classificationResult.outcome);
                // Compute the data for the next state.
                var oldParams = {
                    answer: answer
                };
                var feedbackHtml = makeFeedback(outcome.feedback.getHtml(), [oldParams]);
                var feedbackContentId = outcome.feedback.getContentId();
                var feedbackAudioTranslations = (recordedVoiceovers.getBindableVoiceovers(feedbackContentId));
                if (feedbackHtml === null) {
                    answerIsBeingProcessed = false;
                    AlertsService.addWarning('Expression parsing error.');
                    return;
                }
                var newState = null;
                if (answerIsCorrect && (currentIndex < pretestQuestions.length - 1)) {
                    newState = pretestQuestions[currentIndex + 1].getStateData();
                }
                else {
                    newState = oldState;
                }
                var questionHtml = makeQuestion(newState, [oldParams, {
                        answer: 'answer'
                    }]);
                if (questionHtml === null) {
                    answerIsBeingProcessed = false;
                    AlertsService.addWarning('Expression parsing error.');
                    return;
                }
                answerIsBeingProcessed = false;
                var interactionId = oldState.interaction.id;
                var interactionIsInline = (!interactionId ||
                    INTERACTION_SPECS[interactionId].display_mode ===
                        INTERACTION_DISPLAY_MODE_INLINE);
                var refreshInteraction = (answerIsCorrect || interactionIsInline);
                nextIndex = currentIndex + 1;
                var isFinalQuestion = (nextIndex === pretestQuestions.length);
                var onSameCard = !answerIsCorrect;
                var _nextFocusLabel = FocusManagerService.generateFocusLabel();
                var nextCard = null;
                if (!isFinalQuestion) {
                    var nextInteractionHtml = _getNextInteractionHtml(_nextFocusLabel);
                    questionHtml = questionHtml + _getRandomSuffix();
                    nextInteractionHtml = nextInteractionHtml + _getRandomSuffix();
                    nextCard = StateCardObjectFactory.createNewCard(true, questionHtml, nextInteractionHtml, _getNextStateData().interaction, _getNextStateData().recordedVoiceovers, _getNextStateData().content.getContentId());
                }
                successCallback(nextCard, refreshInteraction, feedbackHtml, feedbackAudioTranslations, null, null, onSameCard, null, null, isFinalQuestion, _nextFocusLabel);
                return answerIsCorrect;
            },
            isAnswerBeingProcessed: function () {
                return answerIsBeingProcessed;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/ProgressNavDirective.ts":
/*!**********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/ProgressNavDirective.ts ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Directive for navigation in the conversation skin.
 */
__webpack_require__(/*! pages/exploration_player/ContinueButtonDirective.ts */ "./core/templates/dev/head/pages/exploration_player/ContinueButtonDirective.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationPlayerStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
oppia.directive('progressNav', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                onSubmit: '&',
                onClickContinueButton: '&',
                isLearnAgainButton: '&',
                getDisplayedCard: '&displayedCard',
                isSubmitButtonShown: '&submitButtonIsShown',
                isSubmitButtonDisabled: '&submitButtonIsDisabled'
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/progress_nav_directive.html'),
            controller: [
                '$scope', '$rootScope', 'PlayerPositionService', 'UrlService',
                'PlayerTranscriptService', 'ExplorationEngineService',
                'WindowDimensionsService', 'TWO_CARD_THRESHOLD_PX',
                'CONTINUE_BUTTON_FOCUS_LABEL', 'INTERACTION_SPECS',
                'ExplorationPlayerStateService',
                function ($scope, $rootScope, PlayerPositionService, UrlService, PlayerTranscriptService, ExplorationEngineService, WindowDimensionsService, TWO_CARD_THRESHOLD_PX, CONTINUE_BUTTON_FOCUS_LABEL, INTERACTION_SPECS, ExplorationPlayerStateService) {
                    $scope.CONTINUE_BUTTON_FOCUS_LABEL = CONTINUE_BUTTON_FOCUS_LABEL;
                    $scope.isIframed = UrlService.isIframed();
                    var transcriptLength = 0;
                    var interactionIsInline = true;
                    var interactionHasNavSubmitButton = false;
                    var updateDisplayedCardInfo = function () {
                        transcriptLength = PlayerTranscriptService.getNumCards();
                        $scope.displayedCardIndex =
                            PlayerPositionService.getDisplayedCardIndex();
                        $scope.displayedCard = $scope.getDisplayedCard();
                        $scope.hasPrevious = $scope.displayedCardIndex > 0;
                        $scope.hasNext = !PlayerTranscriptService.isLastCard($scope.displayedCardIndex);
                        $scope.conceptCardIsBeingShown = ($scope.displayedCard.getStateName() === null &&
                            !ExplorationPlayerStateService.isInPretestMode());
                        var interaction = $scope.displayedCard.getInteraction();
                        if (!$scope.conceptCardIsBeingShown) {
                            interactionIsInline = ($scope.displayedCard.isInteractionInline());
                            $scope.interactionCustomizationArgs =
                                $scope.displayedCard.getInteractionCustomizationArgs();
                            $scope.interactionId = $scope.displayedCard.getInteractionId();
                            if ($scope.interactionId) {
                                interactionHasNavSubmitButton = (Boolean($scope.interactionId) &&
                                    INTERACTION_SPECS[$scope.interactionId].
                                        show_generic_submit_button);
                            }
                        }
                        $scope.helpCardHasContinueButton = false;
                    };
                    $scope.$watch(function () {
                        return PlayerPositionService.getDisplayedCardIndex();
                    }, updateDisplayedCardInfo);
                    $scope.$on('helpCardAvailable', function (evt, helpCard) {
                        $scope.helpCardHasContinueButton = helpCard.hasContinueButton;
                    });
                    $scope.changeCard = function (index) {
                        if (index >= 0 && index < transcriptLength) {
                            PlayerPositionService.recordNavigationButtonClick();
                            PlayerPositionService.setDisplayedCardIndex(index);
                            $rootScope.$broadcast('updateActiveStateIfInEditor', PlayerPositionService.getCurrentStateName());
                        }
                        else {
                            throw Error('Target card index out of bounds.');
                        }
                    };
                    // Returns whether the screen is wide enough to fit two
                    // cards (e.g., the tutor and supplemental cards) side-by-side.
                    $scope.canWindowShowTwoCards = function () {
                        return WindowDimensionsService.getWidth() > TWO_CARD_THRESHOLD_PX;
                    };
                    $scope.shouldGenericSubmitButtonBeShown = function () {
                        if ($scope.interactionId === 'ItemSelectionInput' &&
                            $scope.interactionCustomizationArgs
                                .maxAllowableSelectionCount.value > 1) {
                            return true;
                        }
                        return (interactionHasNavSubmitButton && (interactionIsInline ||
                            !$scope.canWindowShowTwoCards()));
                    };
                    $scope.shouldContinueButtonBeShown = function () {
                        if ($scope.conceptCardIsBeingShown) {
                            return true;
                        }
                        return Boolean(interactionIsInline &&
                            $scope.displayedCard.isCompleted() &&
                            $scope.displayedCard.getLastOppiaResponse());
                    };
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/RefresherExplorationConfirmationModalService.ts":
/*!**********************************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/RefresherExplorationConfirmationModalService.ts ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for managing the redirection to a refresher
 * exploration.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
oppia.factory('RefresherExplorationConfirmationModalService', [
    '$uibModal', 'ExplorationEngineService', 'UrlInterpolationService',
    'UrlService',
    function ($uibModal, ExplorationEngineService, UrlInterpolationService, UrlService) {
        return {
            displayRedirectConfirmationModal: function (refresherExplorationId, redirectConfirmationCallback) {
                $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                        'refresher_exploration_confirmation_modal_directive.html'),
                    backdrop: 'static',
                    controller: [
                        '$scope', '$uibModalInstance', '$window', '$timeout',
                        function ($scope, $uibModalInstance, $window, $timeout) {
                            $scope.confirmRedirect = function () {
                                redirectConfirmationCallback();
                                var collectionId = UrlService.getUrlParams().collection_id;
                                var parentIdList = UrlService.getQueryFieldValuesAsList('parent');
                                var EXPLORATION_URL_TEMPLATE = '/explore/<exploration_id>';
                                var url = UrlInterpolationService.interpolateUrl(EXPLORATION_URL_TEMPLATE, {
                                    exploration_id: refresherExplorationId
                                });
                                if (collectionId) {
                                    url = UrlService.addField(url, 'collection_id', collectionId);
                                }
                                for (var i = 0; i < parentIdList.length; i++) {
                                    url = UrlService.addField(url, 'parent', parentIdList[i]);
                                }
                                url = UrlService.addField(url, 'parent', ExplorationEngineService.getExplorationId());
                                // Wait a little before redirecting the page to ensure other
                                // tasks started here (e.g. event recording) have sufficient
                                // time to complete.
                                // TODO(bhenning): Find a reliable way to send events that does
                                // not get interrupted with browser redirection.
                                $timeout(function () {
                                    $window.open(url, '_self');
                                }, 150);
                                // Close the dialog to ensure the confirmation cannot be called
                                // multiple times.
                                $uibModalInstance.close();
                            };
                            $scope.cancelRedirect = function () {
                                $uibModalInstance.dismiss('cancel');
                            };
                        }
                    ]
                });
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/StatsReportingService.ts":
/*!***********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/StatsReportingService.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Services for stats reporting.
 */
__webpack_require__(/*! domain/utilities/StopwatchObjectFactory.ts */ "./core/templates/dev/head/domain/utilities/StopwatchObjectFactory.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AnswerClassificationService.ts */ "./core/templates/dev/head/pages/exploration_player/AnswerClassificationService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/MessengerService.ts */ "./core/templates/dev/head/services/MessengerService.ts");
__webpack_require__(/*! services/PlaythroughService.ts */ "./core/templates/dev/head/services/PlaythroughService.ts");
__webpack_require__(/*! services/SiteAnalyticsService.ts */ "./core/templates/dev/head/services/SiteAnalyticsService.ts");
oppia.constant('STATS_EVENT_TYPES', {
    EVENT_TYPE_START_EXPLORATION: 'start',
    EVENT_TYPE_ACTUAL_START_EXPLORATION: 'actual_start',
    EVENT_TYPE_COMPLETE_EXPLORATION: 'complete',
    EVENT_TYPE_STATE_HIT: 'state_hit',
    EVENT_TYPE_STATE_COMPLETED: 'state_complete',
    EVENT_TYPE_ANSWER_SUBMITTED: 'answer_submitted',
    EVENT_TYPE_SOLUTION_HIT: 'solution_hit',
    EVENT_TYPE_LEAVE_FOR_REFRESHER_EXP: 'leave_for_refresher_exp',
});
oppia.constant('STATS_REPORTING_URLS', {
    ANSWER_SUBMITTED: '/explorehandler/answer_submitted_event/<exploration_id>',
    EXPLORATION_COMPLETED: ('/explorehandler/exploration_complete_event/<exploration_id>'),
    EXPLORATION_MAYBE_LEFT: ('/explorehandler/exploration_maybe_leave_event/<exploration_id>'),
    EXPLORATION_STARTED: ('/explorehandler/exploration_start_event/<exploration_id>'),
    STATE_HIT: '/explorehandler/state_hit_event/<exploration_id>',
    STATE_COMPLETED: '/explorehandler/state_complete_event/<exploration_id>',
    EXPLORATION_ACTUALLY_STARTED: ('/explorehandler/exploration_actual_start_event/<exploration_id>'),
    SOLUTION_HIT: '/explorehandler/solution_hit_event/<exploration_id>',
    LEAVE_FOR_REFRESHER_EXP: ('/explorehandler/leave_for_refresher_exp_event/<exploration_id>'),
    STATS_EVENTS: '/explorehandler/stats_events/<exploration_id>'
});
oppia.factory('StatsReportingService', [
    '$http', '$interval', 'ContextService', 'MessengerService',
    'PlaythroughService', 'SiteAnalyticsService', 'StopwatchObjectFactory',
    'UrlInterpolationService', 'DEFAULT_OUTCOME_CLASSIFICATION',
    'PAGE_CONTEXT', 'STATS_EVENT_TYPES', 'STATS_REPORTING_URLS',
    function ($http, $interval, ContextService, MessengerService, PlaythroughService, SiteAnalyticsService, StopwatchObjectFactory, UrlInterpolationService, DEFAULT_OUTCOME_CLASSIFICATION, PAGE_CONTEXT, STATS_EVENT_TYPES, STATS_REPORTING_URLS) {
        var explorationId = null;
        var explorationTitle = null;
        var explorationVersion = null;
        var sessionId = null;
        var stateStopwatch = null;
        var optionalCollectionId = undefined;
        var statesVisited = {};
        var numStatesVisited = 0;
        var explorationStarted = false;
        var explorationActuallyStarted = false;
        var explorationIsComplete = false;
        var _editorPreviewMode = ContextService.isInExplorationEditorPage();
        // The following dict will contain all stats data accumulated over the
        // interval time and will be reset when the dict is sent to backend for
        // recording.
        var aggregatedStats = {
            num_starts: null,
            num_completions: null,
            num_actual_starts: null,
            state_stats_mapping: null
        };
        var refreshAggregatedStats = function () {
            aggregatedStats = {
                num_starts: 0,
                num_completions: 0,
                num_actual_starts: 0,
                state_stats_mapping: {}
            };
        };
        var createDefaultStateStatsMapping = function (stateName) {
            aggregatedStats.state_stats_mapping[stateName] = {
                total_answers_count: 0,
                useful_feedback_count: 0,
                total_hit_count: 0,
                first_hit_count: 0,
                num_times_solution_viewed: 0,
                num_completions: 0
            };
        };
        var getFullStatsUrl = function (urlIdentifier) {
            return UrlInterpolationService.interpolateUrl(STATS_REPORTING_URLS[urlIdentifier], {
                exploration_id: explorationId
            });
        };
        if (!_editorPreviewMode) {
            $interval(function () {
                postStatsToBackend();
            }, 300000);
        }
        // This method is called whenever a learner tries to leave an exploration,
        // when a learner starts an exploration, when a learner completes an
        // exploration and also every five minutes.
        var postStatsToBackend = function () {
            if (explorationIsComplete) {
                return;
            }
            $http.post(getFullStatsUrl('STATS_EVENTS'), {
                aggregated_stats: aggregatedStats,
                exp_version: explorationVersion
            });
            refreshAggregatedStats();
        };
        return {
            initSession: function (newExplorationId, newExplorationTitle, newExplorationVersion, newSessionId, collectionId) {
                explorationId = newExplorationId;
                explorationTitle = newExplorationTitle;
                explorationVersion = newExplorationVersion;
                sessionId = newSessionId;
                stateStopwatch = StopwatchObjectFactory.create();
                optionalCollectionId = collectionId;
                refreshAggregatedStats();
            },
            // Note that this also resets the stateStopwatch.
            recordExplorationStarted: function (stateName, params) {
                if (explorationStarted) {
                    return;
                }
                aggregatedStats.num_starts += 1;
                createDefaultStateStatsMapping(stateName);
                aggregatedStats.state_stats_mapping[stateName].total_hit_count += 1;
                aggregatedStats.state_stats_mapping[stateName].first_hit_count += 1;
                postStatsToBackend();
                $http.post(getFullStatsUrl('EXPLORATION_STARTED'), {
                    params: params,
                    session_id: sessionId,
                    state_name: stateName,
                    version: explorationVersion
                });
                $http.post(getFullStatsUrl('STATE_HIT'), {
                    client_time_spent_in_secs: 0.0,
                    exploration_version: explorationVersion,
                    new_state_name: stateName,
                    old_params: params,
                    session_id: sessionId,
                });
                MessengerService.sendMessage(MessengerService.EXPLORATION_LOADED, {
                    explorationVersion: explorationVersion,
                    explorationTitle: explorationTitle
                });
                statesVisited[stateName] = true;
                numStatesVisited = 1;
                SiteAnalyticsService.registerNewCard(1);
                stateStopwatch.reset();
                explorationStarted = true;
            },
            recordExplorationActuallyStarted: function (stateName) {
                if (explorationActuallyStarted) {
                    return;
                }
                aggregatedStats.num_actual_starts += 1;
                $http.post(getFullStatsUrl('EXPLORATION_ACTUALLY_STARTED'), {
                    exploration_version: explorationVersion,
                    state_name: stateName,
                    session_id: sessionId
                });
                PlaythroughService.recordExplorationStartAction(stateName);
                explorationActuallyStarted = true;
            },
            recordSolutionHit: function (stateName) {
                if (!aggregatedStats.state_stats_mapping.hasOwnProperty(stateName)) {
                    createDefaultStateStatsMapping(stateName);
                }
                aggregatedStats.state_stats_mapping[stateName].num_times_solution_viewed += 1;
                $http.post(getFullStatsUrl('SOLUTION_HIT'), {
                    exploration_version: explorationVersion,
                    state_name: stateName,
                    session_id: sessionId,
                    time_spent_in_state_secs: stateStopwatch.getTimeInSecs()
                });
            },
            recordLeaveForRefresherExp: function (stateName, refresherExpId) {
                $http.post(getFullStatsUrl('LEAVE_FOR_REFRESHER_EXP'), {
                    exploration_version: explorationVersion,
                    refresher_exp_id: refresherExpId,
                    state_name: stateName,
                    session_id: sessionId,
                    time_spent_in_state_secs: stateStopwatch.getTimeInSecs()
                });
            },
            // Note that this also resets the stateStopwatch.
            recordStateTransition: function (oldStateName, newStateName, answer, oldParams, isFirstHit) {
                if (!aggregatedStats.state_stats_mapping.hasOwnProperty(newStateName)) {
                    createDefaultStateStatsMapping(newStateName);
                }
                aggregatedStats.state_stats_mapping[newStateName].total_hit_count += 1;
                if (isFirstHit) {
                    aggregatedStats.state_stats_mapping[newStateName].first_hit_count += 1;
                }
                $http.post(getFullStatsUrl('STATE_HIT'), {
                    // This is the time spent since the last submission.
                    client_time_spent_in_secs: stateStopwatch.getTimeInSecs(),
                    exploration_version: explorationVersion,
                    new_state_name: newStateName,
                    old_params: oldParams,
                    session_id: sessionId,
                });
                // Broadcast information about the state transition to listeners.
                MessengerService.sendMessage(MessengerService.STATE_TRANSITION, {
                    explorationVersion: explorationVersion,
                    jsonAnswer: JSON.stringify(answer),
                    newStateName: newStateName,
                    oldStateName: oldStateName,
                    paramValues: oldParams
                });
                if (!statesVisited.hasOwnProperty(newStateName)) {
                    statesVisited[newStateName] = true;
                    numStatesVisited++;
                    SiteAnalyticsService.registerNewCard(numStatesVisited);
                }
                stateStopwatch.reset();
            },
            recordStateCompleted: function (stateName) {
                if (!aggregatedStats.state_stats_mapping.hasOwnProperty(stateName)) {
                    createDefaultStateStatsMapping(stateName);
                }
                aggregatedStats.state_stats_mapping[stateName].num_completions += 1;
                $http.post(getFullStatsUrl('STATE_COMPLETED'), {
                    exp_version: explorationVersion,
                    state_name: stateName,
                    session_id: sessionId,
                    time_spent_in_state_secs: stateStopwatch.getTimeInSecs()
                });
            },
            recordExplorationCompleted: function (stateName, params) {
                aggregatedStats.num_completions += 1;
                $http.post(getFullStatsUrl('EXPLORATION_COMPLETED'), {
                    client_time_spent_in_secs: stateStopwatch.getTimeInSecs(),
                    collection_id: optionalCollectionId,
                    params: params,
                    session_id: sessionId,
                    state_name: stateName,
                    version: explorationVersion
                });
                MessengerService.sendMessage(MessengerService.EXPLORATION_COMPLETED, {
                    explorationVersion: explorationVersion,
                    paramValues: params
                });
                SiteAnalyticsService.registerFinishExploration();
                postStatsToBackend();
                PlaythroughService.recordExplorationQuitAction(stateName, stateStopwatch.getTimeInSecs());
                PlaythroughService.recordPlaythrough(true);
                explorationIsComplete = true;
            },
            recordAnswerSubmitted: function (stateName, params, answer, answerGroupIndex, ruleIndex, classificationCategorization, feedbackIsUseful) {
                if (!aggregatedStats.state_stats_mapping.hasOwnProperty(stateName)) {
                    createDefaultStateStatsMapping(stateName);
                }
                aggregatedStats.state_stats_mapping[stateName].total_answers_count += 1;
                if (feedbackIsUseful) {
                    aggregatedStats.state_stats_mapping[stateName].useful_feedback_count += 1;
                }
                $http.post(getFullStatsUrl('ANSWER_SUBMITTED'), {
                    answer: answer,
                    params: params,
                    version: explorationVersion,
                    session_id: sessionId,
                    client_time_spent_in_secs: stateStopwatch.getTimeInSecs(),
                    old_state_name: stateName,
                    answer_group_index: answerGroupIndex,
                    rule_spec_index: ruleIndex,
                    classification_categorization: classificationCategorization
                });
            },
            recordMaybeLeaveEvent: function (stateName, params) {
                $http.post(getFullStatsUrl('EXPLORATION_MAYBE_LEFT'), {
                    client_time_spent_in_secs: stateStopwatch.getTimeInSecs(),
                    collection_id: optionalCollectionId,
                    params: params,
                    session_id: sessionId,
                    state_name: stateName,
                    version: explorationVersion
                });
                postStatsToBackend();
                PlaythroughService.recordExplorationQuitAction(stateName, stateStopwatch.getTimeInSecs());
                PlaythroughService.recordPlaythrough();
            },
            recordAnswerSubmitAction: function (stateName, destStateName, interactionId, answer, feedback) {
                PlaythroughService.recordAnswerSubmitAction(stateName, destStateName, interactionId, answer, feedback, stateStopwatch.getTimeInSecs());
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/SupplementalCardDirective.ts":
/*!***************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/SupplementalCardDirective.ts ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2016 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Controller for the supplemental card.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts");
__webpack_require__(/*! pages/exploration_player/CurrentInteractionService.ts */ "./core/templates/dev/head/pages/exploration_player/CurrentInteractionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! services/AudioPlayerService.ts */ "./core/templates/dev/head/services/AudioPlayerService.ts");
__webpack_require__(/*! services/AutogeneratedAudioPlayerService.ts */ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
oppia.directive('supplementalCard', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                onClickContinueButton: '&',
                isLearnAgainButton: '&',
                getDisplayedCard: '&displayedCard',
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/supplemental_card_directive.html'),
            controller: [
                '$scope', '$timeout', '$window',
                'WindowDimensionsService', 'CONTENT_FOCUS_LABEL_PREFIX',
                'TWO_CARD_THRESHOLD_PX', 'EVENT_ACTIVE_CARD_CHANGED',
                'CONTINUE_BUTTON_FOCUS_LABEL', 'AudioTranslationManagerService',
                'AudioPlayerService', 'AutogeneratedAudioPlayerService',
                'COMPONENT_NAME_FEEDBACK', 'AUDIO_HIGHLIGHT_CSS_CLASS',
                'CurrentInteractionService',
                function ($scope, $timeout, $window, WindowDimensionsService, CONTENT_FOCUS_LABEL_PREFIX, TWO_CARD_THRESHOLD_PX, EVENT_ACTIVE_CARD_CHANGED, CONTINUE_BUTTON_FOCUS_LABEL, AudioTranslationManagerService, AudioPlayerService, AutogeneratedAudioPlayerService, COMPONENT_NAME_FEEDBACK, AUDIO_HIGHLIGHT_CSS_CLASS, CurrentInteractionService) {
                    var updateDisplayedCard = function () {
                        $scope.displayedCard = $scope.getDisplayedCard();
                        $scope.clearHelpCard();
                        $scope.lastAnswer = null;
                        if ($scope.displayedCard.isCompleted()) {
                            $scope.lastAnswer = $scope.displayedCard.getLastAnswer();
                        }
                    };
                    $scope.OPPIA_AVATAR_IMAGE_URL = (UrlInterpolationService.getStaticImageUrl('/avatar/oppia_avatar_100px.svg'));
                    $scope.CONTINUE_BUTTON_FOCUS_LABEL = CONTINUE_BUTTON_FOCUS_LABEL;
                    $scope.helpCardHtml = null;
                    $scope.helpCardHasContinueButton = false;
                    $scope.windowDimensionsService = WindowDimensionsService;
                    // We use the max because the height property of the help card is
                    // unstable while animating, causing infinite digest errors.
                    var maxHelpCardHeightSeen = 0;
                    $scope.clearHelpCard = function () {
                        $scope.helpCardHtml = null;
                        $scope.helpCardHasContinueButton = false;
                        maxHelpCardHeightSeen = 0;
                    };
                    $scope.isHelpCardTall = function () {
                        var helpCard = $('.conversation-skin-help-card');
                        if (helpCard.height() > maxHelpCardHeightSeen) {
                            maxHelpCardHeightSeen = helpCard.height();
                        }
                        return maxHelpCardHeightSeen > $(window).height() - 100;
                    };
                    $scope.getHelpCardBottomPosition = function () {
                        var helpCard = $('.conversation-skin-help-card');
                        var container = $('.conversation-skin-supplemental-card-container');
                        return Math.max(container.height() - helpCard.height() / 2, 0);
                    };
                    CurrentInteractionService.registerPresubmitHook(function () {
                        // Do not clear the help card or submit an answer if there is an
                        // upcoming card.
                        if ($scope.displayedCard.isCompleted()) {
                            return;
                        }
                        $scope.clearHelpCard();
                    });
                    $scope.$on(EVENT_ACTIVE_CARD_CHANGED, function () {
                        updateDisplayedCard();
                    });
                    $scope.$on('helpCardAvailable', function (event, helpCard) {
                        $scope.helpCardHtml = helpCard.helpCardHtml;
                        $scope.helpCardHasContinueButton = helpCard.hasContinueButton;
                    });
                    $scope.getFeedbackAudioHighlightClass = function () {
                        if (AudioTranslationManagerService
                            .getCurrentComponentName() ===
                            COMPONENT_NAME_FEEDBACK &&
                            (AudioPlayerService.isPlaying() ||
                                AutogeneratedAudioPlayerService.isPlaying())) {
                            return AUDIO_HIGHLIGHT_CSS_CLASS;
                        }
                    };
                    updateDisplayedCard();
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/exploration_player/TutorCardDirective.ts":
/*!********************************************************************************!*\
  !*** ./core/templates/dev/head/pages/exploration_player/TutorCardDirective.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Controller for the Tutor Card.
 */
__webpack_require__(/*! directives/AngularHtmlBindDirective.ts */ "./core/templates/dev/head/directives/AngularHtmlBindDirective.ts");
__webpack_require__(/*! pages/exploration_player/AudioBarDirective.ts */ "./core/templates/dev/head/pages/exploration_player/AudioBarDirective.ts");
__webpack_require__(/*! pages/exploration_player/InputResponsePairDirective.ts */ "./core/templates/dev/head/pages/exploration_player/InputResponsePairDirective.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/exploration_player/AudioPreloaderService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioPreloaderService.ts");
__webpack_require__(/*! pages/exploration_player/AudioTranslationManagerService.ts */ "./core/templates/dev/head/pages/exploration_player/AudioTranslationManagerService.ts");
__webpack_require__(/*! pages/exploration_player/CurrentInteractionService.ts */ "./core/templates/dev/head/pages/exploration_player/CurrentInteractionService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/ExplorationPlayerStateService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationPlayerStateService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerConstants.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerConstants.ts");
__webpack_require__(/*! services/AudioPlayerService.ts */ "./core/templates/dev/head/services/AudioPlayerService.ts");
__webpack_require__(/*! services/AutogeneratedAudioPlayerService.ts */ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts");
__webpack_require__(/*! services/ContextService.ts */ "./core/templates/dev/head/services/ContextService.ts");
__webpack_require__(/*! services/UserService.ts */ "./core/templates/dev/head/services/UserService.ts");
__webpack_require__(/*! services/contextual/DeviceInfoService.ts */ "./core/templates/dev/head/services/contextual/DeviceInfoService.ts");
__webpack_require__(/*! services/contextual/UrlService.ts */ "./core/templates/dev/head/services/contextual/UrlService.ts");
__webpack_require__(/*! services/contextual/WindowDimensionsService.ts */ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts");
oppia.animation('.conversation-skin-responses-animate-slide', function () {
    return {
        removeClass: function (element, className, done) {
            if (className !== 'ng-hide') {
                done();
                return;
            }
            element.hide().slideDown(400, done);
        },
        addClass: function (element, className, done) {
            if (className !== 'ng-hide') {
                done();
                return;
            }
            element.slideUp(400, done);
        }
    };
});
oppia.directive('tutorCard', [
    'UrlInterpolationService', function (UrlInterpolationService) {
        return {
            restrict: 'E',
            scope: {
                isLearnAgainButton: '&',
                onDismiss: '&',
                getDisplayedCard: '&displayedCard',
                startCardChangeAnimation: '=',
            },
            templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                'tutor_card_directive.html'),
            controller: [
                '$scope', '$timeout', '$rootScope', '$anchorScroll', '$location',
                'ExplorationEngineService', 'UrlService',
                'ContextService', 'PAGE_CONTEXT',
                'WindowDimensionsService', 'DeviceInfoService', 'AudioPlayerService',
                'AutogeneratedAudioPlayerService', 'AudioPreloaderService',
                'AudioTranslationManagerService', 'CurrentInteractionService',
                'TWO_CARD_THRESHOLD_PX', 'CONTENT_FOCUS_LABEL_PREFIX',
                'CONTINUE_BUTTON_FOCUS_LABEL', 'EVENT_ACTIVE_CARD_CHANGED',
                'EVENT_NEW_CARD_AVAILABLE', 'UserService',
                'COMPONENT_NAME_CONTENT', 'AUDIO_HIGHLIGHT_CSS_CLASS',
                'DEFAULT_PROFILE_IMAGE_PATH', 'ExplorationPlayerStateService',
                'INTERACTION_SPECS', 'INTERACTION_DISPLAY_MODE_INLINE',
                function ($scope, $timeout, $rootScope, $anchorScroll, $location, ExplorationEngineService, UrlService, ContextService, PAGE_CONTEXT, WindowDimensionsService, DeviceInfoService, AudioPlayerService, AutogeneratedAudioPlayerService, AudioPreloaderService, AudioTranslationManagerService, CurrentInteractionService, TWO_CARD_THRESHOLD_PX, CONTENT_FOCUS_LABEL_PREFIX, CONTINUE_BUTTON_FOCUS_LABEL, EVENT_ACTIVE_CARD_CHANGED, EVENT_NEW_CARD_AVAILABLE, UserService, COMPONENT_NAME_CONTENT, AUDIO_HIGHLIGHT_CSS_CLASS, DEFAULT_PROFILE_IMAGE_PATH, ExplorationPlayerStateService, INTERACTION_SPECS, INTERACTION_DISPLAY_MODE_INLINE) {
                    var _editorPreviewMode = ContextService.isInExplorationEditorPage();
                    var updateDisplayedCard = function () {
                        $scope.arePreviousResponsesShown = false;
                        $scope.lastAnswer = null;
                        $scope.conceptCardIsBeingShown = Boolean(!$scope.getDisplayedCard().getInteraction());
                        $scope.interactionIsActive =
                            !$scope.getDisplayedCard().isCompleted();
                        $scope.$on(EVENT_NEW_CARD_AVAILABLE, function (evt, data) {
                            $scope.interactionIsActive = false;
                        });
                        CurrentInteractionService.registerPresubmitHook(function () {
                            $scope.waitingForOppiaFeedback = true;
                        });
                        if (!$scope.interactionIsActive) {
                            $scope.lastAnswer = $scope.getDisplayedCard().getLastAnswer();
                        }
                        if (!$scope.conceptCardIsBeingShown) {
                            $scope.interactionInstructions = ($scope.getDisplayedCard().getInteractionInstructions());
                            $scope.contentAudioTranslations = ($scope.getDisplayedCard().getVoiceovers());
                            AudioTranslationManagerService.clearSecondaryAudioTranslations();
                            AudioTranslationManagerService.setContentAudioTranslations(angular.copy($scope.contentAudioTranslations), $scope.getDisplayedCard().getContentHtml(), COMPONENT_NAME_CONTENT);
                            AudioPlayerService.stop();
                            AudioPreloaderService.clearMostRecentlyRequestedAudioFilename();
                            AutogeneratedAudioPlayerService.cancel();
                        }
                    };
                    $scope.isInteractionInline = function () {
                        if ($scope.conceptCardIsBeingShown) {
                            return true;
                        }
                        return $scope.getDisplayedCard().isInteractionInline();
                    };
                    $scope.getContentAudioHighlightClass = function () {
                        if (AudioTranslationManagerService
                            .getCurrentComponentName() ===
                            COMPONENT_NAME_CONTENT &&
                            (AudioPlayerService.isPlaying() ||
                                AutogeneratedAudioPlayerService.isPlaying())) {
                            return AUDIO_HIGHLIGHT_CSS_CLASS;
                        }
                    };
                    $scope.arePreviousResponsesShown = false;
                    $scope.waitingForOppiaFeedback = false;
                    $scope.windowDimensionsService = WindowDimensionsService;
                    $scope.isIframed = UrlService.isIframed();
                    $scope.OPPIA_AVATAR_IMAGE_URL = (UrlInterpolationService.getStaticImageUrl('/avatar/oppia_avatar_100px.svg'));
                    $scope.profilePicture = UrlInterpolationService.getStaticImageUrl('/avatar/user_blue_72px.png');
                    if (!_editorPreviewMode) {
                        UserService.getProfileImageDataUrlAsync()
                            .then(function (dataUrl) {
                            $scope.profilePicture = dataUrl;
                        });
                    }
                    else {
                        $scope.profilePicture = (UrlInterpolationService.getStaticImageUrl(DEFAULT_PROFILE_IMAGE_PATH));
                    }
                    $scope.getContentFocusLabel = function (index) {
                        return CONTENT_FOCUS_LABEL_PREFIX + index;
                    };
                    $scope.toggleShowPreviousResponses = function () {
                        $scope.arePreviousResponsesShown =
                            !$scope.arePreviousResponsesShown;
                    };
                    $scope.isWindowNarrow = function () {
                        return WindowDimensionsService.isWindowNarrow();
                    };
                    $scope.canWindowShowTwoCards = function () {
                        return WindowDimensionsService.getWidth() > TWO_CARD_THRESHOLD_PX;
                    };
                    $scope.showAudioBar = function () {
                        return (!$scope.isIframed &&
                            !ExplorationPlayerStateService.isInPretestMode());
                    };
                    $scope.isContentAudioTranslationAvailable = function () {
                        if ($scope.conceptCardIsBeingShown) {
                            return false;
                        }
                        return ($scope.getDisplayedCard().isContentAudioTranslationAvailable());
                    };
                    $scope.isCurrentCardAtEndOfTranscript = function () {
                        return !$scope.getDisplayedCard().isCompleted();
                    };
                    $scope.isOnTerminalCard = function () {
                        return ($scope.getDisplayedCard().isTerminal());
                    };
                    $scope.getInputResponsePairId = function (index) {
                        return 'input-response-pair-' + index;
                    };
                    $scope.$on(EVENT_ACTIVE_CARD_CHANGED, function () {
                        updateDisplayedCard();
                    });
                    $scope.$on('oppiaFeedbackAvailable', function () {
                        $scope.waitingForOppiaFeedback = false;
                        // Auto scroll to the new feedback on mobile device.
                        if (DeviceInfoService.isMobileDevice()) {
                            var latestFeedbackIndex = ($scope.getDisplayedCard().getInputResponsePairs().length - 1);
                            /* Reference: https://stackoverflow.com/questions/40134381
                               $anchorScroll() without changing actual hash value of url works
                               only when written inside a timeout of 0 ms. */
                            $anchorScroll.yOffset = 80;
                            $location.hash($scope.getInputResponsePairId(latestFeedbackIndex));
                            $anchorScroll();
                        }
                    });
                    updateDisplayedCard();
                }
            ]
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.controller.ts":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.controller.ts ***!
  \****************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Controller to show suggestion modal in learner local view.
 */
__webpack_require__(/*! pages/exploration_player/ExplorationEngineService.ts */ "./core/templates/dev/head/pages/exploration_player/ExplorationEngineService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerPositionService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerPositionService.ts");
__webpack_require__(/*! pages/exploration_player/PlayerTranscriptService.ts */ "./core/templates/dev/head/pages/exploration_player/PlayerTranscriptService.ts");
__webpack_require__(/*! pages/show-suggestion-editor-pages/suggestion-modal.service.ts */ "./core/templates/dev/head/pages/show-suggestion-editor-pages/suggestion-modal.service.ts");
angular.module('showSuggestionModalForLocalViewModule').controller('ShowSuggestionModalForLearnerLocalView', [
    '$scope', '$timeout', '$uibModalInstance', 'ExplorationEngineService',
    'PlayerPositionService', 'PlayerTranscriptService',
    'SuggestionModalService',
    function ($scope, $timeout, $uibModalInstance, ExplorationEngineService, PlayerPositionService, PlayerTranscriptService, SuggestionModalService) {
        var stateName = PlayerPositionService.getCurrentStateName();
        var displayedCard = PlayerTranscriptService.getCard(PlayerPositionService.getDisplayedCardIndex());
        $scope.originalHtml = displayedCard.getContentHtml();
        $scope.description = '';
        // ng-model needs to bind to a property of an object on
        // the scope (the property cannot sit directly on the scope)
        // Reference https://stackoverflow.com/q/12618342
        $scope.suggestionData = { suggestionHtml: $scope.originalHtml };
        $scope.showEditor = false;
        // Rte initially displays content unrendered for a split second
        $timeout(function () {
            $scope.showEditor = true;
        }, 500);
        $scope.cancelSuggestion = function () {
            SuggestionModalService.cancelSuggestion($uibModalInstance);
        };
        $scope.submitSuggestion = function () {
            var data = {
                target_id: ExplorationEngineService.getExplorationId(),
                version: ExplorationEngineService.getExplorationVersion(),
                stateName: stateName,
                suggestion_type: 'edit_exploration_state_content',
                target_type: 'exploration',
                description: $scope.description,
                suggestionHtml: $scope.suggestionData.suggestionHtml,
            };
            $uibModalInstance.close(data);
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.service.ts":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.service.ts ***!
  \*************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to display suggestion modal in learner local view.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.controller.ts */ "./core/templates/dev/head/pages/show-suggestion-editor-pages/show-suggestion-modal-for-learner-local-view/show-suggestion-modal-for-learner-local-view.controller.ts");
__webpack_require__(/*! services/AlertsService.ts */ "./core/templates/dev/head/services/AlertsService.ts");
angular.module('showSuggestionModalForLocalViewModule').factory('ShowSuggestionModalForLearnerLocalViewService', [
    '$http', '$uibModal', 'AlertsService', 'UrlInterpolationService',
    function ($http, $uibModal, AlertsService, UrlInterpolationService) {
        var _templateUrl = UrlInterpolationService.getDirectiveTemplateUrl('/pages/show-suggestion-editor-pages/' +
            'show-suggestion-modal-for-learner-local-view/' +
            'show-suggestion-modal-for-learner-local-view.directive.html');
        var _showEditStateContentSuggestionModal = function () {
            $uibModal.open({
                templateUrl: _templateUrl,
                backdrop: 'static',
                resolve: {},
                controller: 'ShowSuggestionModalForLearnerLocalView',
            }).result.then(function (result) {
                var data = {
                    suggestion_type: result.suggestion_type,
                    target_type: result.target_type,
                    target_id: result.target_id,
                    target_version_at_submission: result.version,
                    assigned_reviewer_id: null,
                    final_reviewer_id: null,
                    description: result.description,
                    change: {
                        cmd: 'edit_state_property',
                        property_name: 'content',
                        state_name: result.stateName,
                        new_value: {
                            html: result.suggestionHtml
                        }
                    }
                };
                var url = '/suggestionhandler/';
                $http.post(url, data).error(function (res) {
                    AlertsService.addWarning(res);
                });
                $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration_player/' +
                        'learner_suggestion_submitted_modal_directive.html'),
                    backdrop: true,
                    resolve: {},
                    controller: [
                        '$scope', '$uibModalInstance',
                        function ($scope, $uibModalInstance) {
                            $scope.close = function () {
                                $uibModalInstance.dismiss();
                            };
                        }
                    ]
                });
            });
        };
        return {
            showSuggestionModal: function (suggestionType, extraParams) {
                if (suggestionType === 'edit_exploration_state_content') {
                    _showEditStateContentSuggestionModal();
                }
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/pages/show-suggestion-editor-pages/suggestion-modal.service.ts":
/*!************************************************************************************************!*\
  !*** ./core/templates/dev/head/pages/show-suggestion-editor-pages/suggestion-modal.service.ts ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to handle common code for suggestion modal display.
 */
angular.module('suggestionModalModule').factory('SuggestionModalService', [function () {
        return {
            SUGGESTION_ACCEPTED_MSG: 'This suggestion has already been ' +
                'accepted.',
            SUGGESTION_REJECTED_MSG: 'This suggestion has already been ' +
                'rejected.',
            SUGGESTION_INVALID_MSG: 'This suggestion was made ' +
                'for a state that no longer exists. It cannot be accepted.',
            UNSAVED_CHANGES_MSG: 'You have unsaved changes to ' +
                'this exploration. Please save/discard your unsaved changes if ' +
                'you wish to accept.',
            ACTION_ACCEPT_SUGGESTION: 'accept',
            ACTION_REJECT_SUGGESTION: 'reject',
            ACTION_RESUBMIT_SUGGESTION: 'resubmit',
            SUGGESTION_ACCEPTED: 'accepted',
            SUGGESTION_REJECTED: 'rejected',
            acceptSuggestion: function ($uibModalInstance, paramDict) {
                $uibModalInstance.close(paramDict);
            },
            rejectSuggestion: function ($uibModalInstance, paramDict) {
                $uibModalInstance.close(paramDict);
            },
            cancelSuggestion: function ($uibModalInstance) {
                $uibModalInstance.dismiss('cancel');
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/AssetsBackendApiService.ts":
/*!*********************************************************************!*\
  !*** ./core/templates/dev/head/services/AssetsBackendApiService.ts ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to serve as the interface for fetching and uploading
 * assets from Google Cloud Storage.
 */
__webpack_require__(/*! domain/utilities/AudioFileObjectFactory.ts */ "./core/templates/dev/head/domain/utilities/AudioFileObjectFactory.ts");
__webpack_require__(/*! domain/utilities/FileDownloadRequestObjectFactory.ts */ "./core/templates/dev/head/domain/utilities/FileDownloadRequestObjectFactory.ts");
__webpack_require__(/*! domain/utilities/ImageFileObjectFactory.ts */ "./core/templates/dev/head/domain/utilities/ImageFileObjectFactory.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.factory('AssetsBackendApiService', [
    '$http', '$q', 'AudioFileObjectFactory', 'FileDownloadRequestObjectFactory',
    'ImageFileObjectFactory', 'UrlInterpolationService', 'DEV_MODE',
    function ($http, $q, AudioFileObjectFactory, FileDownloadRequestObjectFactory, ImageFileObjectFactory, UrlInterpolationService, DEV_MODE) {
        if (!DEV_MODE && !GLOBALS.GCS_RESOURCE_BUCKET_NAME) {
            throw Error('GCS_RESOURCE_BUCKET_NAME is not set in prod.');
        }
        // List of filenames that have been requested for but have
        // yet to return a response.
        var _audioFilesCurrentlyBeingRequested = [];
        var _imageFilesCurrentlyBeingRequested = [];
        var ASSET_TYPE_AUDIO = 'audio';
        var ASSET_TYPE_IMAGE = 'image';
        var GCS_PREFIX = ('https://storage.googleapis.com/' +
            GLOBALS.GCS_RESOURCE_BUCKET_NAME + '/exploration');
        var AUDIO_DOWNLOAD_URL_TEMPLATE = ((DEV_MODE ? '/assetsdevhandler' : GCS_PREFIX) +
            '/<exploration_id>/assets/audio/<filename>');
        var IMAGE_DOWNLOAD_URL_TEMPLATE = ((DEV_MODE ? '/assetsdevhandler' : GCS_PREFIX) +
            '/<exploration_id>/assets/image/<filename>');
        var AUDIO_UPLOAD_URL_TEMPLATE = '/createhandler/audioupload/<exploration_id>';
        // Map from asset filename to asset blob.
        var assetsCache = {};
        var _fetchFile = function (explorationId, filename, assetType, successCallback, errorCallback) {
            var canceler = $q.defer();
            if (assetType === ASSET_TYPE_AUDIO) {
                _audioFilesCurrentlyBeingRequested.push(FileDownloadRequestObjectFactory.createNew(filename, canceler));
            }
            else {
                _imageFilesCurrentlyBeingRequested.push(FileDownloadRequestObjectFactory.createNew(filename, canceler));
            }
            $http({
                method: 'GET',
                responseType: 'blob',
                url: _getDownloadUrl(explorationId, filename, assetType),
                timeout: canceler.promise
            }).success(function (data) {
                var assetBlob = null;
                try {
                    if (assetType === ASSET_TYPE_AUDIO) {
                        // Add type for audio assets. Without this, translations can
                        // not be played on Safari.
                        assetBlob = new Blob([data], { type: 'audio/mpeg' });
                    }
                    else {
                        assetBlob = new Blob([data]);
                    }
                }
                catch (exception) {
                    window.BlobBuilder = window.BlobBuilder ||
                        window.WebKitBlobBuilder ||
                        window.MozBlobBuilder ||
                        window.MSBlobBuilder;
                    if (exception.name === 'TypeError' && window.BlobBuilder) {
                        var blobBuilder = new BlobBuilder();
                        blobBuilder.append(data);
                        assetBlob = blobBuilder.getBlob(assetType.concat('/*'));
                    }
                    else {
                        throw exception;
                    }
                }
                assetsCache[filename] = assetBlob;
                if (assetType === ASSET_TYPE_AUDIO) {
                    successCallback(AudioFileObjectFactory.createNew(filename, assetBlob));
                }
                else {
                    successCallback(ImageFileObjectFactory.createNew(filename, assetBlob));
                }
            }).error(function () {
                errorCallback(filename);
            })['finally'](function () {
                _removeFromFilesCurrentlyBeingRequested(filename, assetType);
            });
        };
        var _abortAllCurrentDownloads = function (assetType) {
            if (assetType === ASSET_TYPE_AUDIO) {
                _audioFilesCurrentlyBeingRequested.forEach(function (request) {
                    request.canceler.resolve();
                });
                _audioFilesCurrentlyBeingRequested = [];
            }
            else {
                _imageFilesCurrentlyBeingRequested.forEach(function (request) {
                    request.canceler.resolve();
                });
                _imageFilesCurrentlyBeingRequested = [];
            }
        };
        var _removeFromFilesCurrentlyBeingRequested = function (filename, assetType) {
            if (_isAssetCurrentlyBeingRequested(filename, ASSET_TYPE_AUDIO)) {
                for (var index = 0; index <
                    _audioFilesCurrentlyBeingRequested.length; index++) {
                    if (_audioFilesCurrentlyBeingRequested[index].filename === filename) {
                        _audioFilesCurrentlyBeingRequested.splice(index, 1);
                        break;
                    }
                }
            }
            else if (_isAssetCurrentlyBeingRequested(filename, ASSET_TYPE_IMAGE)) {
                for (var index = 0; index <
                    _imageFilesCurrentlyBeingRequested.length; index++) {
                    if (_imageFilesCurrentlyBeingRequested[index].filename === filename) {
                        _imageFilesCurrentlyBeingRequested.splice(index, 1);
                        break;
                    }
                }
            }
        };
        var _saveAudio = function (explorationId, filename, rawAssetData, successCallback, errorCallback) {
            var form = new FormData();
            form.append('raw_audio_file', rawAssetData);
            form.append('payload', JSON.stringify({
                filename: filename
            }));
            form.append('csrf_token', GLOBALS.csrf_token);
            $.ajax({
                url: _getAudioUploadUrl(explorationId),
                data: form,
                processData: false,
                contentType: false,
                type: 'POST',
                dataType: 'text',
                dataFilter: function (data) {
                    // Remove the XSSI prefix.
                    var transformedData = data.substring(5);
                    return JSON.parse(transformedData);
                },
            }).done(function (response) {
                if (successCallback) {
                    successCallback(response);
                }
            }).fail(function (data) {
                // Remove the XSSI prefix.
                var transformedData = data.responseText.substring(5);
                var parsedResponse = angular.fromJson(transformedData);
                console.error(parsedResponse);
                if (errorCallback) {
                    errorCallback(parsedResponse);
                }
            });
        };
        var _getDownloadUrl = function (explorationId, filename, assetType) {
            return UrlInterpolationService.interpolateUrl((assetType === ASSET_TYPE_AUDIO ? AUDIO_DOWNLOAD_URL_TEMPLATE :
                IMAGE_DOWNLOAD_URL_TEMPLATE), {
                exploration_id: explorationId,
                filename: filename
            });
        };
        var _getAudioUploadUrl = function (explorationId) {
            return UrlInterpolationService.interpolateUrl(AUDIO_UPLOAD_URL_TEMPLATE, {
                exploration_id: explorationId
            });
        };
        var _isAssetCurrentlyBeingRequested = function (filename, assetType) {
            if (assetType === ASSET_TYPE_AUDIO) {
                return _audioFilesCurrentlyBeingRequested.some(function (request) {
                    return request.filename === filename;
                });
            }
            else {
                return _imageFilesCurrentlyBeingRequested.some(function (request) {
                    return request.filename === filename;
                });
            }
        };
        var _isCached = function (filename) {
            return assetsCache.hasOwnProperty(filename);
        };
        return {
            loadAudio: function (explorationId, filename) {
                return $q(function (resolve, reject) {
                    if (_isCached(filename)) {
                        resolve(AudioFileObjectFactory.createNew(filename, assetsCache[filename]));
                    }
                    else {
                        _fetchFile(explorationId, filename, ASSET_TYPE_AUDIO, resolve, reject);
                    }
                });
            },
            loadImage: function (explorationId, filename) {
                return $q(function (resolve, reject) {
                    if (_isCached(filename)) {
                        resolve(ImageFileObjectFactory.createNew(filename, assetsCache[filename]));
                    }
                    else {
                        _fetchFile(explorationId, filename, ASSET_TYPE_IMAGE, resolve, reject);
                    }
                });
            },
            saveAudio: function (explorationId, filename, rawAssetData) {
                return $q(function (resolve, reject) {
                    _saveAudio(explorationId, filename, rawAssetData, resolve, reject);
                });
            },
            isCached: function (filename) {
                return _isCached(filename);
            },
            getAudioDownloadUrl: function (explorationId, filename) {
                return _getDownloadUrl(explorationId, filename, ASSET_TYPE_AUDIO);
            },
            abortAllCurrentAudioDownloads: function () {
                _abortAllCurrentDownloads(ASSET_TYPE_AUDIO);
            },
            abortAllCurrentImageDownloads: function () {
                _abortAllCurrentDownloads(ASSET_TYPE_IMAGE);
            },
            getAssetsFilesCurrentlyBeingRequested: function () {
                return { audio: _audioFilesCurrentlyBeingRequested,
                    image: _imageFilesCurrentlyBeingRequested
                };
            },
            getImageUrlForPreview: function (explorationId, filename) {
                return _getDownloadUrl(explorationId, filename, ASSET_TYPE_IMAGE);
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/AudioPlayerService.ts":
/*!****************************************************************!*\
  !*** ./core/templates/dev/head/services/AudioPlayerService.ts ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to operate the playback of audio.
 */
oppia.factory('AudioPlayerService', [
    '$q', '$timeout', 'AssetsBackendApiService', 'AudioTranslationManagerService',
    'ContextService', 'ngAudio',
    function ($q, $timeout, AssetsBackendApiService, AudioTranslationManagerService, ContextService, ngAudio) {
        var _currentTrackFilename = null;
        var _currentTrack = null;
        var _currentTrackDuration = null;
        var _load = function (filename, successCallback, errorCallback) {
            if (filename !== _currentTrackFilename) {
                AssetsBackendApiService.loadAudio(ContextService.getExplorationId(), filename)
                    .then(function (loadedAudiofile) {
                    var blobUrl = URL.createObjectURL(loadedAudiofile.data);
                    _currentTrack = ngAudio.load(blobUrl);
                    _currentTrackFilename = filename;
                    // ngAudio doesn't seem to provide any way of detecting
                    // when native audio object has finished loading -- see
                    // https://github.com/danielstern/ngAudio/issues/139. It seems
                    // that after creating an ngAudio object, the native audio
                    // object is asynchronously loaded. So we use a timeout
                    // to grab native audio.
                    // TODO(tjiang11): Look for a better way to handle this.
                    $timeout(function () {
                        // _currentTrack could be null if the learner stops audio
                        // shortly after loading a new card or language. In such
                        // cases, we do not want to attempt setting the 'onended'
                        // property of the audio.
                        if (_currentTrack !== null) {
                            _currentTrack.audio.onended = function () {
                                _currentTrack = null;
                                _currentTrackFilename = null;
                                AudioTranslationManagerService
                                    .clearSecondaryAudioTranslations();
                            };
                        }
                    }, 100);
                    successCallback();
                }, function (reason) {
                    errorCallback(reason);
                });
            }
        };
        var _play = function () {
            if (_currentTrack) {
                _currentTrack.play();
            }
        };
        var _pause = function () {
            if (_currentTrack) {
                _currentTrack.pause();
            }
        };
        var _stop = function () {
            if (_currentTrack) {
                _currentTrack.stop();
                _currentTrackFilename = null;
                _currentTrack = null;
            }
        };
        var _rewind = function (seconds) {
            if (_currentTrack) {
                var currentSeconds = _currentTrack.progress * _currentTrack.duration;
                var rewindedProgress = (currentSeconds - seconds) / _currentTrack.duration;
                _currentTrack.progress = rewindedProgress;
            }
        };
        return {
            load: function (filename) {
                return $q(function (resolve, reject) {
                    _load(filename, resolve, reject);
                });
            },
            play: function () {
                _play();
            },
            pause: function () {
                _pause();
            },
            stop: function () {
                _stop();
            },
            rewind: function (seconds) {
                _rewind(seconds);
            },
            getCurrentTime: function () {
                if (_currentTrack) {
                    return Math.round(_currentTrack.currentTime);
                }
                else {
                    return 0;
                }
            },
            getAudioDuration: function () {
                if (_currentTrack && _currentTrack.audio) {
                    return Math.round(_currentTrack.audio.duration);
                }
                else {
                    return 0;
                }
            },
            getProgress: function () {
                if (!_currentTrack) {
                    return 0;
                }
                return _currentTrack.progress;
            },
            setProgress: function (progress) {
                if (_currentTrack) {
                    _currentTrack.progress = progress;
                }
            },
            isPlaying: function () {
                return Boolean(_currentTrack && !_currentTrack.paused);
            },
            isTrackLoaded: function () {
                return Boolean(_currentTrack);
            },
            clear: function () {
                _currentTrack = null;
                _currentTrackFilename = null;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts":
/*!*****************************************************************************!*\
  !*** ./core/templates/dev/head/services/AutogeneratedAudioPlayerService.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to operate the playback of autogenerated audio
 * using the SpeechSynthesis API.
 */
__webpack_require__(/*! services/SpeechSynthesisChunkerService.ts */ "./core/templates/dev/head/services/SpeechSynthesisChunkerService.ts");
oppia.factory('AutogeneratedAudioPlayerService', [
    'SpeechSynthesisChunkerService',
    function (SpeechSynthesisChunkerService) {
        var DEFAULT_PLAYBACK_RATE = 0.92;
        var DEFAULT_PLAYBACK_VOLUME = 1;
        // Not all browsers support SpeechSynthesisUtterance, so we need the
        // check to prevent a "SpeechSynthesisUtterance is not defined" error.
        var _speechSynthesis = null;
        var utterance = null;
        if (window.hasOwnProperty('speechSynthesis')) {
            _speechSynthesis = window.speechSynthesis;
            utterance = new SpeechSynthesisUtterance();
        }
        var _play = function (html, language, audioFinishedCallback) {
            SpeechSynthesisChunkerService.cancel();
            var message = SpeechSynthesisChunkerService.convertToSpeakableText(html);
            utterance.text = message;
            utterance.lang = language;
            utterance.rate = DEFAULT_PLAYBACK_RATE;
            utterance.volume = DEFAULT_PLAYBACK_VOLUME;
            SpeechSynthesisChunkerService.speak(utterance, function () {
                audioFinishedCallback();
            });
        };
        return {
            play: function (html, language, audioFinishedCallback) {
                return _play(html, language, audioFinishedCallback);
            },
            cancel: function () {
                SpeechSynthesisChunkerService.cancel();
            },
            isPlaying: function () {
                return _speechSynthesis && _speechSynthesis.speaking;
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/AutoplayedVideosService.ts":
/*!*********************************************************************!*\
  !*** ./core/templates/dev/head/services/AutoplayedVideosService.ts ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// About this service:
// In the exploration player, a video should only autoplay when it is first seen
// on a new card, and not when the learner clicks back to previous cards in
// their exploration playthrough. This service maintains a list of videos that
// have been played, so that we know not to autoplay them on a second pass.
//
// Caveat: if the same video is shown twice in the exploration, the second and
// subsequent instances of that video will not autoplay. We believe this
// occurrence is rare, and have not accounted for it here. If it turns out
// to be an issue, we may need to instead assign a unique id to each rich-text
// component and use that id instead to determine whether to suppress
// autoplaying.
oppia.factory('AutoplayedVideosService', [function () {
        var autoplayedVideosDict = {};
        return {
            addAutoplayedVideo: function (videoId) {
                autoplayedVideosDict[videoId] = true;
            },
            hasVideoBeenAutoplayed: function (videoId) {
                return Boolean(autoplayedVideosDict[videoId]);
            }
        };
    }]);


/***/ }),

/***/ "./core/templates/dev/head/services/ComputeGraphService.ts":
/*!*****************************************************************!*\
  !*** ./core/templates/dev/head/services/ComputeGraphService.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for computing a graphical representation of an
 * exploration.
 */
oppia.factory('ComputeGraphService', [
    'INTERACTION_SPECS', function (INTERACTION_SPECS) {
        var _computeGraphData = function (initStateId, states) {
            var nodes = {};
            var links = [];
            var finalStateIds = states.getFinalStateNames();
            states.getStateNames().forEach(function (stateName) {
                var interaction = states.getState(stateName).interaction;
                nodes[stateName] = stateName;
                if (interaction.id) {
                    var groups = interaction.answerGroups;
                    for (var h = 0; h < groups.length; h++) {
                        links.push({
                            source: stateName,
                            target: groups[h].outcome.dest,
                        });
                    }
                    if (interaction.defaultOutcome) {
                        links.push({
                            source: stateName,
                            target: interaction.defaultOutcome.dest,
                        });
                    }
                }
            });
            return {
                finalStateIds: finalStateIds,
                initStateId: initStateId,
                links: links,
                nodes: nodes
            };
        };
        var _computeBfsTraversalOfStates = function (initStateId, states, sourceStateName) {
            var stateGraph = _computeGraphData(initStateId, states);
            var stateNamesInBfsOrder = [];
            var queue = [];
            var seen = {};
            seen[sourceStateName] = true;
            queue.push(sourceStateName);
            while (queue.length > 0) {
                var currStateName = queue.shift();
                stateNamesInBfsOrder.push(currStateName);
                for (var e = 0; e < stateGraph.links.length; e++) {
                    var edge = stateGraph.links[e];
                    var dest = edge.target;
                    if (edge.source === currStateName && !seen.hasOwnProperty(dest)) {
                        seen[dest] = true;
                        queue.push(dest);
                    }
                }
            }
            return stateNamesInBfsOrder;
        };
        return {
            compute: function (initStateId, states) {
                return _computeGraphData(initStateId, states);
            },
            computeBfsTraversalOfStates: function (initStateId, states, sourceStateName) {
                return _computeBfsTraversalOfStates(initStateId, states, sourceStateName);
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/ExplorationFeaturesBackendApiService.ts":
/*!**********************************************************************************!*\
  !*** ./core/templates/dev/head/services/ExplorationFeaturesBackendApiService.ts ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for fetching the features the exploration editor is
 * configured to support.
 */
oppia.constant('EXPLORATION_FEATURES_URL', '/explorehandler/features/<exploration_id>');
oppia.factory('ExplorationFeaturesBackendApiService', [
    '$http', 'UrlInterpolationService', 'EXPLORATION_FEATURES_URL',
    function ($http, UrlInterpolationService, EXPLORATION_FEATURES_URL) {
        return {
            /**
             * Retrieves data regarding the features the given exploration supports.
             *
             * NOTE: This service requires play-access for the Exploration so that the
             * features can be fetched in both the exploration player and editor.
             *
             * @returns {Object.<string, *>} - Describes the features the given
             *     exploration supports.
             */
            fetchExplorationFeatures: function (explorationId) {
                return $http.get(UrlInterpolationService.interpolateUrl(EXPLORATION_FEATURES_URL, { exploration_id: explorationId })).then(function (response) {
                    return response.data;
                });
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/ExplorationFeaturesService.ts":
/*!************************************************************************!*\
  !*** ./core/templates/dev/head/services/ExplorationFeaturesService.ts ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for determining the visibility of advanced features in
 *               the exploration editor.
 */
oppia.factory('ExplorationFeaturesService', [function () {
        var settings = {
            areParametersEnabled: false,
            isImprovementsTabEnabled: false,
            isPlaythroughRecordingEnabled: false,
        };
        return {
            init: function (explorationData, featuresData) {
                settings.isImprovementsTabEnabled =
                    featuresData.is_improvements_tab_enabled;
                settings.isPlaythroughRecordingEnabled =
                    featuresData.is_exploration_whitelisted;
                if (explorationData.param_changes &&
                    explorationData.param_changes.length > 0) {
                    this.enableParameters();
                }
                else {
                    for (var state in explorationData.states) {
                        if (explorationData.states[state].param_changes.length > 0) {
                            this.enableParameters();
                            break;
                        }
                    }
                }
            },
            areParametersEnabled: function () {
                return settings.areParametersEnabled;
            },
            isImprovementsTabEnabled: function () {
                return settings.isImprovementsTabEnabled;
            },
            isPlaythroughRecordingEnabled: function () {
                return settings.isPlaythroughRecordingEnabled;
            },
            enableParameters: function () {
                settings.areParametersEnabled = true;
            },
        };
    }]);


/***/ }),

/***/ "./core/templates/dev/head/services/MessengerService.ts":
/*!**************************************************************!*\
  !*** ./core/templates/dev/head/services/MessengerService.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for sending messages to a parent iframe. All outbound
 * communication with a parent iframe should pass through here. (This
 * communication should be outbound only; reverse communication should NOT
 * be attempted due to cross-domain security issues.)
 */
oppia.factory('MessengerService', ['$log', '$window', function ($log, $window) {
        var isPositiveInteger = function (n) {
            return (typeof n === 'number' && n % 1 === 0 && n > 0);
        };
        var isBoolean = function (b) {
            return typeof b === 'boolean';
        };
        var SUPPORTED_HASHDICT_VERSIONS = [
            '0.0.0', '0.0.1', '0.0.2', '0.0.3'
        ];
        var MESSAGE_VALIDATORS = {
            heightChange: function (payload) {
                return isPositiveInteger(payload.height) && isBoolean(payload.scroll);
            },
            explorationLoaded: function () {
                return true;
            },
            stateTransition: function (payload) {
                return Boolean(payload.oldStateName) || Boolean(payload.newStateName);
            },
            explorationReset: function (payload) {
                return Boolean(payload.stateName);
            },
            explorationCompleted: function () {
                return true;
            }
        };
        var getPayload = {
            heightChange: function (data) {
                return {
                    height: data.height,
                    scroll: data.scroll
                };
            },
            explorationLoaded: function (data) {
                return {
                    explorationVersion: data.explorationVersion,
                    explorationTitle: data.explorationTitle
                };
            },
            stateTransition: function (data) {
                return {
                    explorationVersion: data.explorationVersion,
                    oldStateName: data.oldStateName,
                    jsonAnswer: data.jsonAnswer,
                    newStateName: data.newStateName
                };
            },
            explorationCompleted: function (data) {
                return {
                    explorationVersion: data.explorationVersion
                };
            },
            // DEPRECATED
            explorationReset: function (data) {
                return {
                    stateName: data
                };
            }
        };
        var messenger = {
            HEIGHT_CHANGE: 'heightChange',
            EXPLORATION_LOADED: 'explorationLoaded',
            STATE_TRANSITION: 'stateTransition',
            EXPLORATION_RESET: 'explorationReset',
            EXPLORATION_COMPLETED: 'explorationCompleted',
            sendMessage: function (messageTitle, messageData) {
                // TODO(sll): For the stateTransition and explorationCompleted events,
                // we now send paramValues in the messageData. We should broadcast these
                // to the parent page as well.
                // TODO(sll): Delete/deprecate 'reset exploration' from the list of
                // events sent to a container page.
                // Only send a message to the parent if the oppia window is iframed and
                // a hash is passed in.
                var rawHash = $window.location.hash.substring(1);
                if ($window.parent !== $window && rawHash &&
                    MESSAGE_VALIDATORS.hasOwnProperty(messageTitle)) {
                    // Protractor tests may prepend a / to this hash, which we remove:
                    var hash = (rawHash.charAt(0) === '/') ? rawHash.substring(1) : rawHash;
                    var hashParts = hash.split('&');
                    var hashDict = {
                        version: null,
                        secret: null,
                        tagid: null
                    };
                    for (var i = 0; i < hashParts.length; i++) {
                        if (hashParts[i].indexOf('=') === -1) {
                            $log.error('Invalid hash for embedding: ' + hash);
                            return;
                        }
                        var separatorLocation = hashParts[i].indexOf('=');
                        hashDict[hashParts[i].substring(0, separatorLocation)] = (hashParts[i].substring(separatorLocation + 1));
                    }
                    if (!hashDict.version || !hashDict.secret) {
                        $log.error('Invalid hash for embedding: ' + hash);
                        return;
                    }
                    if (SUPPORTED_HASHDICT_VERSIONS.indexOf(hashDict.version) !== -1) {
                        $log.info('Posting message to parent: ' + messageTitle);
                        var payload = getPayload[messageTitle](messageData);
                        if (!MESSAGE_VALIDATORS[messageTitle](payload)) {
                            $log.error('Error validating payload: ' + payload);
                            return;
                        }
                        $log.info(payload);
                        var objToSendToParent = {
                            title: messageTitle,
                            payload: payload,
                            sourceTagId: null,
                            secret: null
                        };
                        if (hashDict.version === '0.0.0') {
                            // Ensure backwards-compatibility.
                            objToSendToParent.sourceTagId = hashDict.tagid;
                            objToSendToParent.secret = hashDict.secret;
                        }
                        // The targetOrigin needs to be * because any page can iframe an
                        // exploration.
                        $window.parent.postMessage(JSON.stringify(objToSendToParent), '*');
                    }
                    else {
                        $log.error('Unknown version for embedding: ' + hashDict.version);
                        return;
                    }
                }
            }
        };
        return messenger;
    }]);


/***/ }),

/***/ "./core/templates/dev/head/services/PlaythroughIssuesBackendApiService.ts":
/*!********************************************************************************!*\
  !*** ./core/templates/dev/head/services/PlaythroughIssuesBackendApiService.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for fetching issues and playthroughs from the backend.
 */
__webpack_require__(/*! domain/statistics/PlaythroughObjectFactory.ts */ "./core/templates/dev/head/domain/statistics/PlaythroughObjectFactory.ts");
__webpack_require__(/*! domain/statistics/PlaythroughIssueObjectFactory.ts */ "./core/templates/dev/head/domain/statistics/PlaythroughIssueObjectFactory.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
oppia.constant('FETCH_ISSUES_URL', '/issuesdatahandler/<exploration_id>');
oppia.constant('FETCH_PLAYTHROUGH_URL', '/playthroughdatahandler/<exploration_id>/<playthrough_id>');
oppia.constant('RESOLVE_ISSUE_URL', '/resolveissuehandler/<exploration_id>');
oppia.factory('PlaythroughIssuesBackendApiService', [
    '$http', 'PlaythroughIssueObjectFactory', 'PlaythroughObjectFactory',
    'UrlInterpolationService', 'FETCH_ISSUES_URL', 'FETCH_PLAYTHROUGH_URL',
    'RESOLVE_ISSUE_URL',
    function ($http, PlaythroughIssueObjectFactory, PlaythroughObjectFactory, UrlInterpolationService, FETCH_ISSUES_URL, FETCH_PLAYTHROUGH_URL, RESOLVE_ISSUE_URL) {
        /** @type {PlaythroughIssue[]} */
        var cachedIssues = null;
        var getFullIssuesUrl = function (explorationId) {
            return UrlInterpolationService.interpolateUrl(FETCH_ISSUES_URL, {
                exploration_id: explorationId
            });
        };
        var getFullPlaythroughUrl = function (expId, playthroughId) {
            return UrlInterpolationService.interpolateUrl(FETCH_PLAYTHROUGH_URL, {
                exploration_id: expId,
                playthrough_id: playthroughId
            });
        };
        var getFullResolveIssueUrl = function (explorationId) {
            return UrlInterpolationService.interpolateUrl(RESOLVE_ISSUE_URL, {
                exploration_id: explorationId
            });
        };
        return {
            fetchIssues: function (explorationId, explorationVersion) {
                if (cachedIssues !== null) {
                    return Promise.resolve(cachedIssues);
                }
                else {
                    return $http.get(getFullIssuesUrl(explorationId), {
                        params: {
                            exp_version: explorationVersion
                        }
                    }).then(function (response) {
                        var unresolvedIssueBackendDicts = response.data;
                        cachedIssues = unresolvedIssueBackendDicts.map(PlaythroughIssueObjectFactory.createFromBackendDict);
                        return cachedIssues;
                    });
                }
            },
            fetchPlaythrough: function (expId, playthroughId) {
                return $http.get(getFullPlaythroughUrl(expId, playthroughId)).then(function (response) {
                    var playthroughBackendDict = response.data;
                    return PlaythroughObjectFactory.createFromBackendDict(playthroughBackendDict);
                });
            },
            resolveIssue: function (issueToResolve, expId, expVersion) {
                return $http.post(getFullResolveIssueUrl(expId), {
                    exp_issue_dict: issueToResolve.toBackendDict(),
                    exp_version: expVersion
                }).then(function () {
                    var issueIndex = cachedIssues.findIndex(function (issue) {
                        return angular.equals(issue, issueToResolve);
                    });
                    if (issueIndex === -1) {
                        var invalidIssueError = new Error('An issue which was not fetched from the backend has been ' +
                            'resolved');
                        return Promise.reject(invalidIssueError);
                    }
                    else {
                        cachedIssues.splice(issueIndex, 1);
                    }
                });
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/PlaythroughIssuesService.ts":
/*!**********************************************************************!*\
  !*** ./core/templates/dev/head/services/PlaythroughIssuesService.ts ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2018 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for retrieving issues and playthroughs.
 */
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/PlaythroughIssuesBackendApiService.ts */ "./core/templates/dev/head/services/PlaythroughIssuesBackendApiService.ts");
oppia.factory('PlaythroughIssuesService', [
    '$uibModal', 'PlaythroughIssuesBackendApiService', 'UrlInterpolationService',
    'ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS', 'ISSUE_TYPE_EARLY_QUIT',
    'ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS',
    function ($uibModal, PlaythroughIssuesBackendApiService, UrlInterpolationService, ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS, ISSUE_TYPE_EARLY_QUIT, ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS) {
        var issues = null;
        var explorationId = null;
        var explorationVersion = null;
        var currentPlaythrough = null;
        var renderEarlyQuitIssueStatement = function () {
            return 'Several learners exited the exploration in less than a minute.';
        };
        var renderMultipleIncorrectIssueStatement = function (stateName) {
            return 'Several learners submitted answers to card "' + stateName +
                '" several times, then gave up and quit.';
        };
        var renderCyclicTransitionsIssueStatement = function (stateName) {
            return 'Several learners ended up in a cyclic loop revisiting card "' +
                stateName + '" many times.';
        };
        var renderEarlyQuitIssueSuggestions = function (issue) {
            var suggestions = [
                ('Review the cards up to and including "' +
                    issue.issueCustomizationArgs.state_name.value + '" for errors, ' +
                    'ambiguities, or insufficient motivation.'),
            ];
            return suggestions;
        };
        var renderMultipleIncorrectIssueSuggestions = function (stateName) {
            var suggestions = [
                ('Check the wording of the card "' + stateName + '" to ensure it is ' +
                    'not confusing.'),
                ('Consider addressing the answers submitted in the sample ' +
                    'playthroughs explicitly using answer groups.'),
            ];
            return suggestions;
        };
        var renderCyclicTransitionsIssueSuggestions = function (issue) {
            var stateNames = issue.issueCustomizationArgs.state_names.value;
            var finalIndex = stateNames.length - 1;
            var suggestions = [
                ('Check that the concept presented in "' + stateNames[0] + '" has ' +
                    'been reinforced sufficiently by the time the learner gets to "' +
                    stateNames[finalIndex] + '".'),
            ];
            return suggestions;
        };
        return {
            /** Prepares the PlaythroughIssuesService for subsequent calls to other
             * functions.
             *
             * @param {string} newExplorationId - the exploration id the service will
             *    be targeting.
             * @param {number} newExplorationVersion - the version of the exploration
             *    the service will be targeting.
             */
            initSession: function (newExplorationId, newExplorationVersion) {
                explorationId = newExplorationId;
                explorationVersion = newExplorationVersion;
            },
            getIssues: function () {
                return PlaythroughIssuesBackendApiService.fetchIssues(explorationId, explorationVersion);
            },
            getPlaythrough: function (playthroughId) {
                return PlaythroughIssuesBackendApiService.fetchPlaythrough(explorationId, playthroughId);
            },
            renderIssueStatement: function (issue) {
                var issueType = issue.issueType;
                if (issueType === ISSUE_TYPE_EARLY_QUIT) {
                    return renderEarlyQuitIssueStatement();
                }
                else if (issueType === ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS) {
                    return renderMultipleIncorrectIssueStatement(issue.issueCustomizationArgs.state_name.value);
                }
                else if (issueType === ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS) {
                    return renderCyclicTransitionsIssueStatement(issue.issueCustomizationArgs.state_names.value[0]);
                }
            },
            renderIssueSuggestions: function (issue) {
                var issueType = issue.issueType;
                if (issueType === ISSUE_TYPE_EARLY_QUIT) {
                    return renderEarlyQuitIssueSuggestions(issue);
                }
                else if (issueType === ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS) {
                    return renderMultipleIncorrectIssueSuggestions(issue.issueCustomizationArgs.state_name.value);
                }
                else if (issueType === ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS) {
                    return renderCyclicTransitionsIssueSuggestions(issue);
                }
            },
            resolveIssue: function (issue) {
                return PlaythroughIssuesBackendApiService.resolveIssue(issue, explorationId, explorationVersion);
            },
            openPlaythroughModal: function (playthroughId, index) {
                this.getPlaythrough(playthroughId).then(function (playthrough) {
                    $uibModal.open({
                        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/pages/exploration-editor-page/statistics-tab/' +
                            'statistics-tab-templates/state-stats-modal.template.html'),
                        backdrop: true,
                        resolve: {
                            playthrough: function () {
                                return playthrough;
                            },
                            playthroughIndex: function () {
                                return index;
                            }
                        },
                        controller: [
                            '$scope', '$uibModalInstance', 'playthroughIndex',
                            'playthrough', 'AlertsService', 'LearnerActionRenderService',
                            function ($scope, $uibModalInstance, playthroughIndex, playthrough, AlertsService, LearnerActionRenderService) {
                                $scope.playthroughIndex = playthroughIndex;
                                $scope.displayBlocks =
                                    LearnerActionRenderService.getDisplayBlocks(playthrough.actions);
                                $scope.reversedDisplayBlocks =
                                    $scope.displayBlocks.slice().reverse();
                                var blockActionIndexMapping = {};
                                $scope.displayBlocks.reduce(function (runningTotal, displayBlock, i) {
                                    blockActionIndexMapping[i] =
                                        runningTotal - displayBlock.length;
                                    return blockActionIndexMapping[i];
                                }, playthrough.actions.length + 1);
                                $scope.maxHidden = $scope.displayBlocks.length - 1;
                                $scope.getDisplayBlockIndex = function (displayBlock) {
                                    return $scope.displayBlocks.indexOf(displayBlock);
                                };
                                $scope.isDisplayBlockOnInitDisplay = function (block) {
                                    return $scope.getDisplayBlockIndex(block) === 0;
                                };
                                $scope.createDisplayBlockNavId = function (block) {
                                    return $scope.getDisplayBlockIndex(block) + 1;
                                };
                                $scope.renderBlockHtml = function (displayBlock) {
                                    var index = $scope.getDisplayBlockIndex(displayBlock);
                                    return LearnerActionRenderService.renderDisplayBlockHTML(displayBlock, blockActionIndexMapping[index]);
                                };
                                var getRemainingActionsElements = function (pIdx, i) {
                                    return document.getElementById('remainingActions' + pIdx.toString() + i.toString());
                                };
                                /**
                                 * Shows the remaining display blocks and the arrow div. If
                                 * there is only one display block, the arrow div is not
                                 * shown at all. If the current shown display block is the
                                 * second last display block, the arrow div is hidden after
                                 * the final display block is shown. Else, the following
                                 * display block is displayed.
                                 */
                                $scope.showRemainingActions = function (pIdx) {
                                    // If there is only one display block left to be shown,
                                    // the arrow is not required.
                                    if ($scope.maxHidden === 1) {
                                        getRemainingActionsElements(pIdx, $scope.maxHidden)
                                            .style.display = 'block';
                                        document.getElementById('arrowDiv').style.display = 'none';
                                    }
                                    else {
                                        var currentShown = 0;
                                        var i;
                                        for (i = $scope.maxHidden; i > 0; i--) {
                                            if (getRemainingActionsElements(pIdx, i).style.display ===
                                                'block') {
                                                currentShown = i;
                                                break;
                                            }
                                        }
                                        if (currentShown === 0) {
                                            getRemainingActionsElements(pIdx, currentShown + 1)
                                                .style.display = 'block';
                                        }
                                        else if (currentShown === $scope.maxHidden - 1) {
                                            getRemainingActionsElements(pIdx, $scope.maxHidden)
                                                .style.display = 'block';
                                            document.getElementById('arrowDiv').style.display =
                                                'none';
                                        }
                                        else {
                                            getRemainingActionsElements(pIdx, currentShown + 1)
                                                .style.display = 'block';
                                        }
                                    }
                                };
                                $scope.cancel = function () {
                                    $uibModalInstance.dismiss('cancel');
                                    AlertsService.clearWarnings();
                                };
                            }
                        ]
                    });
                });
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/PlaythroughService.ts":
/*!****************************************************************!*\
  !*** ./core/templates/dev/head/services/PlaythroughService.ts ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for recording and scrutinizing playthroughs.
 */
__webpack_require__(/*! domain/statistics/LearnerActionObjectFactory.ts */ "./core/templates/dev/head/domain/statistics/LearnerActionObjectFactory.ts");
__webpack_require__(/*! domain/statistics/PlaythroughObjectFactory.ts */ "./core/templates/dev/head/domain/statistics/PlaythroughObjectFactory.ts");
__webpack_require__(/*! domain/utilities/StopwatchObjectFactory.ts */ "./core/templates/dev/head/domain/utilities/StopwatchObjectFactory.ts");
__webpack_require__(/*! domain/utilities/UrlInterpolationService.ts */ "./core/templates/dev/head/domain/utilities/UrlInterpolationService.ts");
__webpack_require__(/*! services/ExplorationFeaturesService.ts */ "./core/templates/dev/head/services/ExplorationFeaturesService.ts");
oppia.constant('STORE_PLAYTHROUGH_URL', '/explorehandler/store_playthrough/<exploration_id>');
oppia.factory('PlaythroughService', [
    '$http', 'ExplorationFeaturesService', 'LearnerActionObjectFactory',
    'PlaythroughObjectFactory', 'StopwatchObjectFactory',
    'UrlInterpolationService', 'ACTION_TYPE_ANSWER_SUBMIT',
    'ACTION_TYPE_EXPLORATION_QUIT', 'ACTION_TYPE_EXPLORATION_START',
    'CURRENT_ACTION_SCHEMA_VERSION', 'CURRENT_ISSUE_SCHEMA_VERSION',
    'EARLY_QUIT_THRESHOLD_IN_SECS', 'ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS',
    'ISSUE_TYPE_EARLY_QUIT', 'ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS',
    'NUM_INCORRECT_ANSWERS_THRESHOLD', 'NUM_REPEATED_CYCLES_THRESHOLD',
    'PAGE_CONTEXT', 'STORE_PLAYTHROUGH_URL',
    function ($http, ExplorationFeaturesService, LearnerActionObjectFactory, PlaythroughObjectFactory, StopwatchObjectFactory, UrlInterpolationService, ACTION_TYPE_ANSWER_SUBMIT, ACTION_TYPE_EXPLORATION_QUIT, ACTION_TYPE_EXPLORATION_START, CURRENT_ACTION_SCHEMA_VERSION, CURRENT_ISSUE_SCHEMA_VERSION, EARLY_QUIT_THRESHOLD_IN_SECS, ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS, ISSUE_TYPE_EARLY_QUIT, ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS, NUM_INCORRECT_ANSWERS_THRESHOLD, NUM_REPEATED_CYCLES_THRESHOLD, PAGE_CONTEXT, STORE_PLAYTHROUGH_URL) {
        var playthrough = null;
        var expStopwatch = null;
        var isLearnerInSamplePopulation = null;
        var multipleIncorrectStateName = {
            state_name: null,
            num_times_incorrect: null
        };
        var cycleIdentifier = {
            cycle: null,
            num_cycles: null
        };
        var visitedStates = [];
        var misTracker = false;
        var cstTracker = false;
        var removeOldQuitAction = function () {
            var quitAction = playthrough.actions[playthrough.actions.length - 1];
            // After the second quit action is recorded, the first quit is removed
            // using this method. This ensures that there are only two quit actions
            // in the playthrough actions list at a time.
            playthrough.actions = playthrough.actions.filter(function (action) {
                return action.actionType !== ACTION_TYPE_EXPLORATION_QUIT;
            });
            playthrough.actions.push(quitAction);
        };
        var _determineIfLearnerIsInSamplePopulation = function (probability) {
            return Math.random() < probability;
        };
        var createMultipleIncorrectIssueTracker = function (initStateName) {
            if (misTracker) {
                return;
            }
            multipleIncorrectStateName = {
                state_name: initStateName,
                num_times_incorrect: 0
            };
            misTracker = true;
        };
        var createCyclicIssueTracker = function (initStateName) {
            if (cstTracker) {
                return;
            }
            cycleIdentifier = {
                cycle: '',
                num_cycles: 0
            };
            visitedStates.unshift(initStateName);
            cstTracker = true;
        };
        var incrementIncorrectAnswerInMultipleIncorrectIssueTracker = function () {
            multipleIncorrectStateName.num_times_incorrect += 1;
        };
        var recordStateTransitionInMultipleIncorrectIssueTracker = function (destStateName) {
            if (multipleIncorrectStateName.num_times_incorrect <
                NUM_INCORRECT_ANSWERS_THRESHOLD) {
                multipleIncorrectStateName.state_name = destStateName;
                multipleIncorrectStateName.num_times_incorrect = 0;
            }
        };
        var recordStateTransitionInCyclicIssueTracker = function (destStateName) {
            if (cycleIdentifier.num_cycles < NUM_REPEATED_CYCLES_THRESHOLD) {
                if (visitedStates.indexOf(destStateName) !== -1) {
                    // Cycle identified.
                    var cycleStartIndex = visitedStates.indexOf(destStateName);
                    visitedStates.push(destStateName);
                    var cycleString = visitedStates.slice(cycleStartIndex, visitedStates.length).toString();
                    if (cycleIdentifier.cycle === cycleString) {
                        cycleIdentifier.num_cycles += 1;
                    }
                    else {
                        cycleIdentifier.cycle = cycleString;
                        cycleIdentifier.num_cycles = 1;
                    }
                    visitedStates = [destStateName];
                }
                else {
                    visitedStates.push(destStateName);
                }
            }
        };
        var isMultipleIncorrectSubmissionsIssue = function () {
            return multipleIncorrectStateName.num_times_incorrect >=
                NUM_INCORRECT_ANSWERS_THRESHOLD;
        };
        var isCyclicStateTransitionsIssue = function () {
            return cycleIdentifier.num_cycles >= NUM_REPEATED_CYCLES_THRESHOLD;
        };
        var isEarlyQuitIssue = function (timeSpentInExpInSecs) {
            return timeSpentInExpInSecs < EARLY_QUIT_THRESHOLD_IN_SECS;
        };
        var analyzePlaythrough = function () {
            // The ordering of checks in this method is such that the priority of
            // issues to be recorded in case of multiple issues is captured. This
            // follows MultipleIncorrectSubmissionsIssue ->
            // CyclicStateTransitionsIssue -> EarlyQuitIssue.
            var timeSpentInExpInSecs = expStopwatch.getTimeInSecs();
            if (isMultipleIncorrectSubmissionsIssue()) {
                playthrough.issueType = ISSUE_TYPE_MULTIPLE_INCORRECT_SUBMISSIONS;
                playthrough.issueCustomizationArgs = {
                    state_name: {
                        value: multipleIncorrectStateName.state_name
                    },
                    num_times_answered_incorrectly: {
                        value: multipleIncorrectStateName.num_times_incorrect
                    }
                };
            }
            else if (isCyclicStateTransitionsIssue()) {
                playthrough.issueType = ISSUE_TYPE_CYCLIC_STATE_TRANSITIONS;
                playthrough.issueCustomizationArgs = {
                    state_names: {
                        value: cycleIdentifier.cycle.split(',')
                    }
                };
            }
            else if (isEarlyQuitIssue(timeSpentInExpInSecs)) {
                playthrough.issueType = ISSUE_TYPE_EARLY_QUIT;
                playthrough.issueCustomizationArgs = {
                    state_name: {
                        value: playthrough.actions[playthrough.actions.length - 1].actionCustomizationArgs
                            .state_name.value
                    },
                    time_spent_in_exp_in_secs: {
                        value: timeSpentInExpInSecs
                    }
                };
            }
        };
        var storePlaythrough = function (isNewPlaythrough) {
            var playthroughId = isNewPlaythrough ? null : playthrough.playthroughId;
            var promise = $http.post(getFullPlaythroughUrl(), {
                playthrough_data: playthrough.toBackendDict(),
                issue_schema_version: CURRENT_ISSUE_SCHEMA_VERSION,
                playthrough_id: playthroughId
            });
            if (isNewPlaythrough) {
                promise.then(function (response) {
                    if (response.data.playthrough_stored) {
                        // In cases where maximum number of playthroughs already exists, the
                        // above flag is not True and playthrough ID is not set.
                        playthrough.playthroughId = response.data.playthrough_id;
                    }
                });
            }
        };
        var getFullPlaythroughUrl = function () {
            return UrlInterpolationService.interpolateUrl(STORE_PLAYTHROUGH_URL, {
                exploration_id: playthrough.expId
            });
        };
        var isPlaythroughDiscarded = function () {
            return !ExplorationFeaturesService.isPlaythroughRecordingEnabled() ||
                !isLearnerInSamplePopulation;
        };
        return {
            initSession: function (explorationId, explorationVersion, playthroughProbability) {
                isLearnerInSamplePopulation =
                    _determineIfLearnerIsInSamplePopulation(playthroughProbability);
                playthrough = PlaythroughObjectFactory.createNew(null, explorationId, explorationVersion, null, {}, []);
                expStopwatch = StopwatchObjectFactory.create();
            },
            getPlaythrough: function () {
                return playthrough;
            },
            recordExplorationStartAction: function (initStateName) {
                if (isPlaythroughDiscarded()) {
                    return;
                }
                var expStartLearnerAction = LearnerActionObjectFactory.createNew(ACTION_TYPE_EXPLORATION_START, {
                    state_name: {
                        value: initStateName
                    }
                }, CURRENT_ACTION_SCHEMA_VERSION);
                playthrough.actions.unshift(expStartLearnerAction);
                createMultipleIncorrectIssueTracker(initStateName);
                createCyclicIssueTracker(initStateName);
                expStopwatch.reset();
            },
            recordAnswerSubmitAction: function (stateName, destStateName, interactionId, answer, feedback, timeSpentInStateSecs) {
                if (isPlaythroughDiscarded()) {
                    return;
                }
                if (!cstTracker) {
                    createCyclicIssueTracker(stateName);
                }
                if (!misTracker) {
                    createMultipleIncorrectIssueTracker(stateName);
                }
                playthrough.actions.push(LearnerActionObjectFactory.createNew(ACTION_TYPE_ANSWER_SUBMIT, {
                    state_name: {
                        value: stateName
                    },
                    dest_state_name: {
                        value: destStateName
                    },
                    interaction_id: {
                        value: interactionId
                    },
                    submitted_answer: {
                        value: answer
                    },
                    feedback: {
                        value: feedback
                    },
                    time_spent_state_in_msecs: {
                        value: timeSpentInStateSecs
                    }
                }, CURRENT_ACTION_SCHEMA_VERSION));
                var didNotMoveToNextState = (destStateName === stateName);
                if (didNotMoveToNextState) {
                    incrementIncorrectAnswerInMultipleIncorrectIssueTracker();
                }
                else {
                    recordStateTransitionInMultipleIncorrectIssueTracker(destStateName);
                    recordStateTransitionInCyclicIssueTracker(destStateName);
                }
            },
            recordExplorationQuitAction: function (stateName, timeSpentInStateSecs) {
                if (isPlaythroughDiscarded()) {
                    return;
                }
                playthrough.actions.push(LearnerActionObjectFactory.createNew(ACTION_TYPE_EXPLORATION_QUIT, {
                    state_name: {
                        value: stateName
                    },
                    time_spent_in_state_in_msecs: {
                        value: timeSpentInStateSecs
                    }
                }, CURRENT_ACTION_SCHEMA_VERSION));
            },
            recordPlaythrough: function (isExplorationComplete) {
                if (isPlaythroughDiscarded()) {
                    return;
                }
                if (isExplorationComplete) {
                    // If the exploration is completed, do not check for issues.
                    return;
                }
                if (playthrough.playthroughId) {
                    // Playthrough ID exists, so issue has already been identified.
                    removeOldQuitAction();
                    if (playthrough.issueType === ISSUE_TYPE_EARLY_QUIT) {
                        // If the existing issue is of type early quit, and some other issue
                        // can be identified, update the issue since early quit has lower
                        // priority.
                        analyzePlaythrough();
                    }
                    storePlaythrough(false);
                }
                else {
                    // Playthrough ID doesn't exist.
                    analyzePlaythrough();
                    if (playthrough.issueType) {
                        // Issue type exists, so an issue is identified after analyzing the
                        // playthrough, and the playthrough is stored.
                        storePlaythrough(true);
                    }
                }
            },
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/RteHelperService.ts":
/*!**************************************************************!*\
  !*** ./core/templates/dev/head/services/RteHelperService.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview A helper service for the Rich text editor(RTE).
 */
oppia.constant('RTE_COMPONENT_SPECS', richTextComponents);
oppia.factory('RteHelperService', [
    '$document', '$filter', '$interpolate', '$log', '$uibModal',
    'ContextService', 'FocusManagerService', 'HtmlEscaperService',
    'UrlInterpolationService', 'RTE_COMPONENT_SPECS',
    function ($document, $filter, $interpolate, $log, $uibModal, ContextService, FocusManagerService, HtmlEscaperService, UrlInterpolationService, RTE_COMPONENT_SPECS) {
        var _RICH_TEXT_COMPONENTS = [];
        Object.keys(RTE_COMPONENT_SPECS).sort().forEach(function (componentId) {
            _RICH_TEXT_COMPONENTS.push({
                backendId: RTE_COMPONENT_SPECS[componentId].backend_id,
                customizationArgSpecs: angular.copy(RTE_COMPONENT_SPECS[componentId].customization_arg_specs),
                id: RTE_COMPONENT_SPECS[componentId].frontend_id,
                iconDataUrl: RTE_COMPONENT_SPECS[componentId].icon_data_url,
                isComplex: RTE_COMPONENT_SPECS[componentId].is_complex,
                isBlockElement: RTE_COMPONENT_SPECS[componentId].is_block_element,
                requiresFs: RTE_COMPONENT_SPECS[componentId].requires_fs,
                tooltip: RTE_COMPONENT_SPECS[componentId].tooltip
            });
        });
        var _createCustomizationArgDictFromAttrs = function (attrs) {
            var customizationArgsDict = {};
            for (var i = 0; i < attrs.length; i++) {
                var attr = attrs[i];
                if (attr.name === 'class' || attr.name === 'src' ||
                    attr.name === '_moz_resizing') {
                    continue;
                }
                var separatorLocation = attr.name.indexOf('-with-value');
                if (separatorLocation === -1) {
                    $log.error('RTE Error: invalid customization attribute ' + attr.name);
                    continue;
                }
                var argName = attr.name.substring(0, separatorLocation);
                customizationArgsDict[argName] = HtmlEscaperService.escapedJsonToObj(attr.value);
            }
            return customizationArgsDict;
        };
        return {
            createCustomizationArgDictFromAttrs: function (attrs) {
                return _createCustomizationArgDictFromAttrs(attrs);
            },
            getRichTextComponents: function () {
                return angular.copy(_RICH_TEXT_COMPONENTS);
            },
            isInlineComponent: function (richTextComponent) {
                var inlineComponents = ['link', 'math'];
                return inlineComponents.indexOf(richTextComponent) !== -1;
            },
            // The refocusFn arg is a function that restores focus to the text editor
            // after exiting the modal, and moves the cursor back to where it was
            // before the modal was opened.
            _openCustomizationModal: function (customizationArgSpecs, attrsCustomizationArgsDict, onSubmitCallback, onDismissCallback, refocusFn) {
                $document[0].execCommand('enableObjectResizing', false, false);
                var modalDialog = $uibModal.open({
                    templateUrl: UrlInterpolationService.getDirectiveTemplateUrl('/components/forms/forms-templates/' +
                        'customize-rte-component-modal.template.html'),
                    backdrop: 'static',
                    resolve: {},
                    controller: [
                        '$scope', '$uibModalInstance', '$timeout',
                        function ($scope, $uibModalInstance, $timeout) {
                            $scope.customizationArgSpecs = customizationArgSpecs;
                            // Without this code, the focus will remain in the background RTE
                            // even after the modal loads. This switches the focus to a
                            // temporary field in the modal which is then removed from the
                            // DOM.
                            // TODO(sll): Make this switch to the first input field in the
                            // modal instead.
                            $scope.modalIsLoading = true;
                            FocusManagerService.setFocus('tmpFocusPoint');
                            $timeout(function () {
                                $scope.modalIsLoading = false;
                            });
                            $scope.tmpCustomizationArgs = [];
                            for (var i = 0; i < customizationArgSpecs.length; i++) {
                                var caName = customizationArgSpecs[i].name;
                                $scope.tmpCustomizationArgs.push({
                                    name: caName,
                                    value: (attrsCustomizationArgsDict.hasOwnProperty(caName) ?
                                        angular.copy(attrsCustomizationArgsDict[caName]) :
                                        customizationArgSpecs[i].default_value)
                                });
                            }
                            $scope.cancel = function () {
                                $uibModalInstance.dismiss('cancel');
                            };
                            $scope.save = function () {
                                $scope.$broadcast('externalSave');
                                var customizationArgsDict = {};
                                for (var i = 0; i < $scope.tmpCustomizationArgs.length; i++) {
                                    var caName = $scope.tmpCustomizationArgs[i].name;
                                    customizationArgsDict[caName] = ($scope.tmpCustomizationArgs[i].value);
                                }
                                $uibModalInstance.close(customizationArgsDict);
                            };
                        }
                    ]
                });
                modalDialog.result.then(onSubmitCallback, onDismissCallback);
                // 'finally' is a JS keyword. If it is just used in its ".finally" form,
                // the minification process throws an error.
                modalDialog.result['finally'](refocusFn);
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/SpeechSynthesisChunkerService.ts":
/*!***************************************************************************!*\
  !*** ./core/templates/dev/head/services/SpeechSynthesisChunkerService.ts ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2017 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service to chunk a piece of text into smaller parts
 * to feed into SpeechSynthesis, because SpeechSynthesis always times
 * out after 200-300 characters.
 *
 * Code is adapted from:
 * https://gist.github.com/woollsta/2d146f13878a301b36d7
 *
 * Credits to Peter Woolley and Brett Zamir.
 */
oppia.factory('SpeechSynthesisChunkerService', [
    '$timeout', 'RTE_COMPONENT_SPECS', function ($timeout, RTE_COMPONENT_SPECS) {
        // Max number of characters to fit into one chunk.
        var CHUNK_LENGTH = 160;
        var _speechSynthesis = window.speechSynthesis;
        var RTE_COMPONENT_NAMES = {
            Collapsible: '',
            Image: '',
            Link: '',
            Math: '',
            Tabs: '',
            Video: ''
        };
        Object.keys(RTE_COMPONENT_SPECS).forEach(function (componentSpec) {
            RTE_COMPONENT_NAMES[componentSpec] =
                RTE_COMPONENT_SPECS[componentSpec].frontend_id;
        });
        // Punctuation marks that should result in an audible pause when playing
        // back autogenerated audio.
        var PUNCTUATION_MARKS_TO_END_CHUNKS = '.!?:;';
        // Punctuation marks that we don't want to influence the playing back of
        // autogenerated audio.
        var PUNCTUATION_MARKS_TO_IGNORE = '"';
        var cancelRequested = false;
        /**
         * Takes an utterance, and plays it in separate utterances each of at
         *    most 160 characters in length.
         * @param {SpeechSynthesisUtterance} utterance - The original utterance
         *    that contains the whole message to speak.
         * @param {Number} offset - An integer indicating what offset in the text
         *    to begin the next chunked utterance.
         * @param {requestCallback} - Callback that is activated when the last
         *    chunked utterance finishes playing.
         */
        var _speechUtteranceChunker = function (utterance, offset, callback) {
            var newUtterance;
            var text = (offset !== undefined ?
                utterance.text.substring(offset) : utterance.text);
            // This regex pattern finds the next string at most 160
            // characters in length that ends on a punctuation mark in
            // PUNCTUATION_MARKS_TO_END_CHUNKS.
            var delimitChunkRegex = new RegExp('^[\\s\\S]{' +
                Math.floor(CHUNK_LENGTH / 4) + ',' + CHUNK_LENGTH + '}[' +
                PUNCTUATION_MARKS_TO_END_CHUNKS + ']{1}|^[\\s\\S]{1,' +
                CHUNK_LENGTH + '}$|^[\\s\\S]{1,' + CHUNK_LENGTH + '} ');
            var chunkArray = text.match(delimitChunkRegex);
            if (chunkArray === null ||
                chunkArray[0] === undefined ||
                chunkArray[0].length <= 2) {
                // Call once all text has been spoken.
                if (callback !== undefined) {
                    callback();
                }
                return;
            }
            var chunk = chunkArray[0];
            newUtterance = new SpeechSynthesisUtterance(chunk);
            // Copy properties from the current utterance to the next utterance,
            // excluding the text being spoken.
            for (var property in utterance) {
                if (property !== 'text') {
                    newUtterance[property] = utterance[property];
                }
            }
            newUtterance.onend = function () {
                if (cancelRequested) {
                    cancelRequested = false;
                    return;
                }
                offset += chunk.length;
                _speechUtteranceChunker(utterance, offset, callback);
            };
            // IMPORTANT!! Do not remove: Logging the object out fixes some onend
            // firing issues. Placing the speak invocation inside a callback
            // fixes ordering and onend issues.
            // eslint-disable-next-line no-console
            console.log(newUtterance);
            $timeout(function () {
                speechSynthesis.speak(newUtterance);
            }, 0);
        };
        var _convertToSpeakableText = function (html) {
            var elt = $('<div>' + html + '</div>');
            // Convert links into speakable text by extracting the readable value.
            elt.find('oppia-noninteractive-' + RTE_COMPONENT_NAMES.Link)
                .replaceWith(function () {
                if (this.attributes['text-with-value'] !== undefined) {
                    return this.attributes['text-with-value'].textContent.replace(/&quot;/g, '');
                }
            });
            // Convert LaTeX to speakable text.
            elt.find('oppia-noninteractive-' + RTE_COMPONENT_NAMES.Math)
                .replaceWith(function () {
                if (this.attributes['raw_latex-with-value'] !== undefined) {
                    return _formatLatexToSpeakableText(this.attributes['raw_latex-with-value'].textContent);
                }
            });
            html = elt.html();
            // Replace certain HTML elements with periods to indicate
            // pauses in speaking. Also, for some reason, there's a lot
            // of whitespace (like hundreds of characters) so we trim
            // it off to avoid blank chunks.
            html = html.replace(new RegExp('</li>', 'g'), '.').trim();
            // Strip away HTML tags.
            var tmp = $('<div></div>');
            tmp.html(html);
            var textToSpeakWithoutPauses = tmp.text();
            var textToSpeak = '';
            // Insert a space after punctuation marks to ensure that chunking will
            // end on the desired punctuation marks so that SpeechSynthesis will
            // pause more naturally. Remove any punctuation marks that have no
            // effect on speaking.
            for (var i = 0; i < textToSpeakWithoutPauses.length; i++) {
                if (PUNCTUATION_MARKS_TO_IGNORE.indexOf(textToSpeakWithoutPauses.charAt(i)) > -1) {
                    continue;
                }
                textToSpeak += textToSpeakWithoutPauses.charAt(i);
                if (PUNCTUATION_MARKS_TO_END_CHUNKS.indexOf(textToSpeakWithoutPauses.charAt(i)) > -1) {
                    textToSpeak += ' ';
                }
            }
            return textToSpeak;
        };
        var _formatLatexToSpeakableText = function (latex) {
            return latex
                .replace(/&quot;/g, '')
                .replace(/\\/g, '')
                .replace(/\s+/, ' ')
                // Separate consecutive characters with spaces so that 'ab'
                // is pronounced 'a' followed by 'b'.
                .split('').join(' ')
                .replace(/\s*(\d+)\s*/g, '$1')
                // Replace dashes with 'minus'.
                .replace(/-/g, ' minus ')
                // Ensure that 'x^2' is pronounced 'x squared' rather than
                // 'x caret 2'.
                .replace(/\s*\^\s*/g, '^')
                // Speak 'x^y' as 'x to the power of y' unless the exponent is two or
                // three, in which case Web Speech will read 'squared' and 'cubed'
                // respectively.
                .replace(/(.*)\^(\{*[0-9].+|[0-14-9]\}*)/g, '$1 to the power of $2')
                // Handle simple fractions.
                .replace(/f\sr\sa\sc\s\{\s*(.+)\s*\}\s\{\s*(.+)\s*\}/g, '$1/$2')
                // If a fraction contains a variable, then say (numerator) 'over'
                // (denominator).
                .replace(/(\d*\D+)\/(\d*\D*)|(\d*\D*)\/(\d*\D+)/g, '$1 over $2')
                // Handle basic trigonometric functions.
                .replace(/t\sa\sn/g, 'the tangent of')
                .replace(/s\si\sn/g, 'the sine of')
                .replace(/c\so\ss/g, 'the cosine of')
                // Handle square roots.
                .replace(/s\sq\sr\st\s\{\s*(.+)\s*\}/g, 'the square root of $1')
                // Remove brackets.
                .replace(/[\}\{]/g, '')
                // Replace multiple spaces with single space.
                .replace(/\s\s+/g, ' ')
                .trim();
        };
        return {
            speak: function (utterance, callback) {
                cancelRequested = false;
                _speechUtteranceChunker(utterance, 0, callback);
            },
            cancel: function () {
                cancelRequested = true;
                if (_speechSynthesis) {
                    _speechSynthesis.cancel();
                }
            },
            convertToSpeakableText: function (html) {
                return _convertToSpeakableText(html);
            },
            formatLatexToSpeakableText: function (latex) {
                return _formatLatexToSpeakableText(latex);
            }
        };
    }
]);


/***/ }),

/***/ "./core/templates/dev/head/services/contextual/WindowDimensionsService.ts":
/*!********************************************************************************!*\
  !*** ./core/templates/dev/head/services/contextual/WindowDimensionsService.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for computing the window dimensions.
 */
oppia.factory('WindowDimensionsService', ['$window', function ($window) {
        var onResizeHooks = [];
        angular.element($window).bind('resize', function () {
            onResizeHooks.forEach(function (hookFn) {
                hookFn();
            });
        });
        return {
            getWidth: function () {
                return ($window.innerWidth || document.documentElement.clientWidth ||
                    document.body.clientWidth);
            },
            registerOnResizeHook: function (hookFn) {
                onResizeHooks.push(hookFn);
            },
            isWindowNarrow: function () {
                var NORMAL_NAVBAR_CUTOFF_WIDTH_PX = 768;
                return this.getWidth() <= NORMAL_NAVBAR_CUTOFF_WIDTH_PX;
            }
        };
    }]);


/***/ }),

/***/ "./core/templates/dev/head/services/stateful/BackgroundMaskService.ts":
/*!****************************************************************************!*\
  !*** ./core/templates/dev/head/services/stateful/BackgroundMaskService.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Service for enabling a background mask that leaves navigation
 * visible.
 */
oppia.factory('BackgroundMaskService', [
    function () {
        var maskIsActive = false;
        return {
            isMaskActive: function () {
                return maskIsActive;
            },
            activateMask: function () {
                maskIsActive = true;
            },
            deactivateMask: function () {
                maskIsActive = false;
            }
        };
    }
]);


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,