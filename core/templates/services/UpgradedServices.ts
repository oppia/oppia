// Copyright 2019 The Oppia Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Service for managing all of our upgraded services.
 */

import { downgradeInjectable } from '@angular/upgrade/static';
import { Injectable } from '@angular/core';
import {
  HttpClient,
  HttpXhrBackend,
  /* eslint-disable camelcase */
  Éµangular_packages_common_http_http_d
  /* eslint-enable camelcase */
} from '@angular/common/http';

import { AlertsService } from 'services/alerts.service';
import { AngularNameService } from
  'pages/exploration-editor-page/services/angular-name.service';
import { AnswerClassificationResultObjectFactory } from
  'domain/classifier/AnswerClassificationResultObjectFactory';
import { AnswerGroupObjectFactory } from
  'domain/exploration/AnswerGroupObjectFactory';
import { AudioLanguageObjectFactory } from
  'domain/utilities/AudioLanguageObjectFactory';
import { AutogeneratedAudioLanguageObjectFactory } from
  'domain/utilities/AutogeneratedAudioLanguageObjectFactory';
import { AudioTranslationLanguageService } from
  'pages/exploration-player-page/services/audio-translation-language.service';
import { BackgroundMaskService } from
  'services/stateful/background-mask.service';
import { baseInteractionValidationService } from
  'interactions/base-interaction-validation.service';
import { BrowserCheckerService } from
  'domain/utilities/browser-checker.service';
import { CamelCaseToHyphensPipe } from
  'filters/string-utility-filters/camel-case-to-hyphens.pipe';
import { ChangesInHumanReadableFormService } from
  // eslint-disable-next-line max-len
  'pages/exploration-editor-page/services/changes-in-human-readable-form.service';
import { ClassifierObjectFactory } from
  'domain/classifier/ClassifierObjectFactory';
import { CodeNormalizerService } from 'services/code-normalizer.service';
import { CodeReplPredictionService } from
  'interactions/CodeRepl/code-repl-prediction.service';
import { CodeReplRulesService } from
  'interactions/CodeRepl/directives/code-repl-rules.service';
import { ComputeGraphService } from 'services/compute-graph.service';
import { ConceptCardObjectFactory } from
  'domain/skill/ConceptCardObjectFactory';
import { ContextService } from 'services/context.service';
import { CountVectorizerService } from 'classifiers/count-vectorizer.service';
import { CsrfTokenService } from 'services/csrf-token.service';
import { DateTimeFormatService } from 'services/date-time-format.service';
import { DebouncerService } from 'services/debouncer.service';
import { DeviceInfoService } from 'services/contextual/device-info.service';
import { DocumentAttributeCustomizationService } from
  'services/contextual/document-attribute-customization.service';
import { EditabilityService } from 'services/editability.service';
import { EditorFirstTimeEventsService } from
  'pages/exploration-editor-page/services/editor-first-time-events.service';
import { EmailDashboardDataService } from
  'pages/email-dashboard-pages/email-dashboard-data.service';
import { EntityContextObjectFactory } from
  'domain/utilities/EntityContextObjectFactory';
import { ExplorationDiffService } from
  'pages/exploration-editor-page/services/exploration-diff.service';
import { ExplorationDraftObjectFactory } from
  'domain/exploration/ExplorationDraftObjectFactory';
import { ExplorationFeaturesService } from
  'services/exploration-features.service';
import { ExplorationHtmlFormatterService } from
  'services/exploration-html-formatter.service';
import { ExplorationObjectFactory } from
  'domain/exploration/ExplorationObjectFactory';
import { ExpressionParserService } from 'expressions/expression-parser.service';
import { ExtensionTagAssemblerService } from
  'services/extension-tag-assembler.service';
import { ExtractImageFilenamesFromStateService } from
  // eslint-disable-next-line max-len
  'pages/exploration-player-page/services/extract-image-filenames-from-state.service';
import { FeedbackThreadObjectFactory } from
  'domain/feedback_thread/FeedbackThreadObjectFactory';
import { FormatTimePipe } from 'filters/format-timer.pipe';
import { FractionObjectFactory } from 'domain/objects/FractionObjectFactory';
import { GenerateContentIdService } from 'services/generate-content-id.service';
import { HintObjectFactory } from 'domain/exploration/HintObjectFactory';
import { HtmlEscaperService } from 'services/html-escaper.service';
import { IdGenerationService } from 'services/id-generation.service';
import { ImprovementActionButtonObjectFactory } from
  'domain/statistics/ImprovementActionButtonObjectFactory';
import { InteractionObjectFactory } from
  'domain/exploration/InteractionObjectFactory';
import { LanguageUtilService } from 'domain/utilities/language-util.service';
import { LearnerActionObjectFactory } from
  'domain/statistics/LearnerActionObjectFactory';
import { LearnerAnswerDetailsObjectFactory } from
  'domain/statistics/LearnerAnswerDetailsObjectFactory';
import { LearnerAnswerInfoObjectFactory } from
  'domain/statistics/LearnerAnswerInfoObjectFactory';
import { LearnerDashboardActivityIdsObjectFactory } from
  'domain/learner_dashboard/LearnerDashboardActivityIdsObjectFactory';
import { LocalStorageService } from 'services/local-storage.service';
import { LoggerService } from 'services/contextual/logger.service';
import { MetaTagCustomizationService } from
  'services/contextual/meta-tag-customization.service';
import { NormalizeWhitespacePipe } from
  'filters/string-utility-filters/normalize-whitespace.pipe';
/* eslint-disable max-len */
import { NormalizeWhitespacePunctuationAndCasePipe } from
  'filters/string-utility-filters/normalize-whitespace-punctuation-and-case.pipe';
/* eslint-enable max-len */
import { NumberWithUnitsObjectFactory } from
  'domain/objects/NumberWithUnitsObjectFactory';
import { OutcomeObjectFactory } from 'domain/exploration/OutcomeObjectFactory';
import { ParamChangeObjectFactory } from
  'domain/exploration/ParamChangeObjectFactory';
import { ParamChangesObjectFactory } from
  'domain/exploration/ParamChangesObjectFactory';
import { ParamSpecObjectFactory } from
  'domain/exploration/ParamSpecObjectFactory';
import { ParamSpecsObjectFactory } from
  'domain/exploration/ParamSpecsObjectFactory';
import { ParamTypeObjectFactory } from
  'domain/exploration/ParamTypeObjectFactory';
import { PencilCodeEditorRulesService } from
  'interactions/PencilCodeEditor/directives/pencil-code-editor-rules.service';
import { PlayerPositionService } from
  'pages/exploration-player-page/services/player-position.service';
import { PlayerTranscriptService } from
  'pages/exploration-player-page/services/player-transcript.service';
import { PlaythroughIssueObjectFactory } from
  'domain/statistics/PlaythroughIssueObjectFactory';
import { PlaythroughObjectFactory } from
  'domain/statistics/PlaythroughObjectFactory';
import { PredictionResultObjectFactory } from
  'domain/classifier/PredictionResultObjectFactory';
import { PythonProgramTokenizer } from 'classifiers/python-program.tokenizer';
import { ReadOnlyStoryNodeObjectFactory } from
  'domain/story_viewer/ReadOnlyStoryNodeObjectFactory';
import { RecordedVoiceoversObjectFactory } from
  'domain/exploration/RecordedVoiceoversObjectFactory';
import { RuleObjectFactory } from 'domain/exploration/RuleObjectFactory';
import { SidebarStatusService } from 'domain/sidebar/sidebar-status.service';
import { SiteAnalyticsService } from 'services/site-analytics.service';
import { SkillSummaryObjectFactory } from
  'domain/skill/SkillSummaryObjectFactory';
import { SolutionObjectFactory } from
  'domain/exploration/SolutionObjectFactory';
import { SolutionValidityService } from
  'pages/exploration-editor-page/editor-tab/services/solution-validity.service';
import { StateCardObjectFactory } from
  'domain/state_card/StateCardObjectFactory';
import { StateClassifierMappingService } from
  'pages/exploration-player-page/services/state-classifier-mapping.service';
import { StateContentService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-content.service';
import { StateCustomizationArgsService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-customization-args.service';
import { StateEditorService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-editor.service';
import { StateImprovementSuggestionService } from
  // eslint-disable-next-line max-len
  'pages/exploration-editor-page/statistics-tab/services/state-improvement-suggestion.service';
import { StateHintsService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-hints.service';
import { StateInteractionIdService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-interaction-id.service';
import { StateObjectFactory } from 'domain/state/StateObjectFactory';
import { StatesObjectFactory } from 'domain/exploration/StatesObjectFactory';
import { StatePropertyService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-property.service';
import { StateRecordedVoiceoversService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-recorded-voiceovers.service';
import { StateSolicitAnswerDetailsService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-solicit-answer-details.service';
import { StateSolutionService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-solution.service';
import { StateWrittenTranslationsService } from
  // eslint-disable-next-line max-len
  'components/state-editor/state-editor-properties-services/state-written-translations.service';
import { StopwatchObjectFactory } from
  'domain/utilities/StopwatchObjectFactory';
import { StoryPlaythroughObjectFactory } from
  'domain/story_viewer/StoryPlaythroughObjectFactory';
import { StoryReferenceObjectFactory } from
  'domain/topic/StoryReferenceObjectFactory';
import { StorySummaryObjectFactory } from
  'domain/story/StorySummaryObjectFactory';
import { SubtitledHtmlObjectFactory } from
  'domain/exploration/SubtitledHtmlObjectFactory';
import { SubtopicObjectFactory } from
  'domain/topic/SubtopicObjectFactory';
import { SuggestionModalService } from 'services/suggestion-modal.service';
import { SuggestionObjectFactory } from
  'domain/suggestion/SuggestionObjectFactory';
import { SuggestionThreadObjectFactory } from
  'domain/suggestion/SuggestionThreadObjectFactory';
import { SVMPredictionService } from 'classifiers/svm-prediction.service';
import { TextInputPredictionService } from
  'interactions/TextInput/text-input-prediction.service';
import { TextInputRulesService } from
  'interactions/TextInput/directives/text-input-rules.service';
import { TextInputValidationService } from
  'interactions/TextInput/directives/text-input-validation.service';
import { ThreadStatusDisplayService } from
  // eslint-disable-next-line max-len
  'pages/exploration-editor-page/feedback-tab/services/thread-status-display.service';
import { TopicObjectFactory } from
  'domain/topic/TopicObjectFactory';
import { TopicSummaryObjectFactory } from
  'domain/topic/TopicSummaryObjectFactory';
import { UnitsObjectFactory } from 'domain/objects/UnitsObjectFactory';
import { UrlInterpolationService } from
  'domain/utilities/url-interpolation.service';
import { UrlService } from 'services/contextual/url.service';
import { UserInfoObjectFactory } from 'domain/user/UserInfoObjectFactory';
import { UtilsService } from 'services/utils.service';
import { ValidatorsService } from 'services/validators.service';
import { VoiceoverObjectFactory } from
  'domain/exploration/VoiceoverObjectFactory';
import { WindowDimensionsService } from
  'services/contextual/window-dimensions.service';
import { WindowRef } from 'services/contextual/window-ref.service';
import { WinnowingPreprocessingService } from
  'classifiers/winnowing-preprocessing.service';
import { WrittenTranslationObjectFactory } from
  'domain/exploration/WrittenTranslationObjectFactory';
import { WrittenTranslationsObjectFactory } from
  'domain/exploration/WrittenTranslationsObjectFactory';

type Newable<T> = { new (...args: any[]): T; };

@Injectable({providedIn: 'root'})
export class UpgradedServices {
  private static globals: any[] = [document];

  private servicesByName = {};

  private registerService<T>(service: Newable<T>) {
    const serviceName = service.name;
    if (this.servicesByName.hasOwnProperty(serviceName)) {
      throw Error(
        'Redefinition error: Trying to register "' + serviceName + '" more ' +
        'than once');
    }
    return {
      withArgs: (...args) => {
        const unregisteredArgs = args.filter(
          arg => !UpgradedServices.globals.includes(arg) &&
            !this.servicesByName.hasOwnProperty(arg.name));
        if (unregisteredArgs.length > 0) {
          throw Error(
            'Dependency order error: trying to construct "' + serviceName +
            '" before the services it depends upon: "' +
            unregisteredArgs.map(a => a.name).join('", "') + '"');
        }
        const constructorArgs = args.map(
          arg => UpgradedServices.globals.includes(arg) ? arg :
            this.servicesByName[arg.name]);
        this.servicesByName[serviceName] = new service(...constructorArgs);
      }
    };
  }

  constructor() {
    // Group 1: Services without dependencies.
    this.registerService(AngularNameService).withArgs();
    this.registerService(AnswerClassificationResultObjectFactory).withArgs();
    this.registerService(AudioLanguageObjectFactory).withArgs();
    this.registerService(AutogeneratedAudioLanguageObjectFactory).withArgs();
    this.registerService(BackgroundMaskService).withArgs();
    this.registerService(CamelCaseToHyphensPipe).withArgs();
    this.registerService(ClassifierObjectFactory).withArgs();
    this.registerService(CodeNormalizerService).withArgs();
    this.registerService(ComputeGraphService).withArgs();
    this.registerService(CountVectorizerService).withArgs();
    this.registerService(CsrfTokenService).withArgs();
    this.registerService(DateTimeFormatService).withArgs();
    this.registerService(DebouncerService).withArgs();
    this.registerService(EditabilityService).withArgs();
    this.registerService(EntityContextObjectFactory).withArgs();
    this.registerService(ExplorationDiffService).withArgs();
    this.registerService(ExplorationDraftObjectFactory).withArgs();
    this.registerService(ExplorationFeaturesService).withArgs();
    this.registerService(ExpressionParserService).withArgs();
    this.registerService(FeedbackThreadObjectFactory).withArgs();
    this.registerService(FractionObjectFactory).withArgs();
    this.registerService(GenerateContentIdService).withArgs();
    this.registerService(IdGenerationService).withArgs();
    this.registerService(ImprovementActionButtonObjectFactory).withArgs();
    this.registerService(LearnerActionObjectFactory).withArgs();
    this.registerService(LearnerAnswerDetailsObjectFactory).withArgs();
    this.registerService(LearnerAnswerInfoObjectFactory).withArgs();
    this.registerService(LearnerDashboardActivityIdsObjectFactory).withArgs();
    this.registerService(LoggerService).withArgs();
    this.registerService(NormalizeWhitespacePunctuationAndCasePipe).withArgs();
    this.registerService(ParamChangeObjectFactory).withArgs();
    this.registerService(ParamTypeObjectFactory).withArgs();
    this.registerService(PlaythroughIssueObjectFactory).withArgs();
    this.registerService(PredictionResultObjectFactory).withArgs();
    this.registerService(ReadOnlyStoryNodeObjectFactory).withArgs();
    this.registerService(RuleObjectFactory).withArgs();
    this.registerService(SolutionValidityService).withArgs();
    this.registerService(StateImprovementSuggestionService).withArgs();
    this.registerService(StopwatchObjectFactory).withArgs();
    this.registerService(StoryReferenceObjectFactory).withArgs();
    this.registerService(StorySummaryObjectFactory).withArgs();
    this.registerService(SubtitledHtmlObjectFactory).withArgs();
    this.registerService(SuggestionModalService).withArgs();
    this.registerService(SuggestionObjectFactory).withArgs();
    this.registerService(ThreadStatusDisplayService).withArgs();
    this.registerService(UnitsObjectFactory).withArgs();
    this.registerService(UserInfoObjectFactory).withArgs();
    this.registerService(UtilsService).withArgs();
    this.registerService(VoiceoverObjectFactory).withArgs();
    this.registerService(WindowRef).withArgs();
    this.registerService(WinnowingPreprocessingService).withArgs();
    this.registerService(WrittenTranslationObjectFactory).withArgs();
    this.registerService(baseInteractionValidationService).withArgs();
    this.registerService(Éµangular_packages_common_http_http_d).withArgs();

    // Group 2: Services depending only on group 1.
    this.registerService(AlertsService).withArgs(LoggerService);
    this.registerService(BrowserCheckerService).withArgs(WindowRef);
    this.registerService(ChangesInHumanReadableFormService).withArgs(
      UtilsService, document);
    this.registerService(DeviceInfoService).withArgs(WindowRef);
    this.registerService(DocumentAttributeCustomizationService).withArgs(
      WindowRef);
    this.registerService(HintObjectFactory).withArgs(
      SubtitledHtmlObjectFactory);
    this.registerService(HtmlEscaperService).withArgs(LoggerService);
    this.registerService(HttpXhrBackend).withArgs(
      Éµangular_packages_common_http_http_d);
    this.registerService(LanguageUtilService).withArgs(
      AudioLanguageObjectFactory, AutogeneratedAudioLanguageObjectFactory,
      BrowserCheckerService);
    this.registerService(LocalStorageService).withArgs(
      ExplorationDraftObjectFactory);
    this.registerService(MetaTagCustomizationService).withArgs(WindowRef);
    this.registerService(NormalizeWhitespacePipe).withArgs(UtilsService);
    this.registerService(NumberWithUnitsObjectFactory).withArgs(
      UnitsObjectFactory, FractionObjectFactory);
    this.registerService(OutcomeObjectFactory).withArgs(
      SubtitledHtmlObjectFactory);
    this.registerService(ParamChangesObjectFactory).withArgs(
      ParamChangeObjectFactory);
    this.registerService(ParamSpecObjectFactory).withArgs(
      ParamTypeObjectFactory);
    this.registerService(PlayerTranscriptService).withArgs(LoggerService);
    this.registerService(PlaythroughObjectFactory).withArgs(
      LearnerActionObjectFactory);
    this.registerService(PythonProgramTokenizer).withArgs(LoggerService);
    this.registerService(RecordedVoiceoversObjectFactory).withArgs(
      VoiceoverObjectFactory);
    this.registerService(SVMPredictionService).withArgs(
      PredictionResultObjectFactory);
    this.registerService(SiteAnalyticsService).withArgs(WindowRef);
    this.registerService(SkillSummaryObjectFactory).withArgs();
    this.registerService(StateClassifierMappingService).withArgs(
      ClassifierObjectFactory);
    this.registerService(StateEditorService).withArgs(SolutionValidityService);
    this.registerService(StoryPlaythroughObjectFactory).withArgs(
      ReadOnlyStoryNodeObjectFactory);
    this.registerService(SuggestionThreadObjectFactory).withArgs(
      SuggestionObjectFactory);
    this.registerService(TextInputValidationService).withArgs(
      baseInteractionValidationService);
    this.registerService(TopicSummaryObjectFactory).withArgs();
    this.registerService(UrlService).withArgs(WindowRef);
    this.registerService(ValidatorsService).withArgs(
      AlertsService, NormalizeWhitespacePipe);
    this.registerService(WindowDimensionsService).withArgs(WindowRef);
    this.registerService(WrittenTranslationsObjectFactory).withArgs(
      WrittenTranslationObjectFactory);

    // Group 3: Services depending only on groups 1-2.
    this.registerService(AnswerGroupObjectFactory).withArgs(
      OutcomeObjectFactory, RuleObjectFactory);
    this.registerService(AudioTranslationLanguageService).withArgs(
      BrowserCheckerService, LanguageUtilService);
    this.registerService(CodeReplPredictionService).withArgs(
      CountVectorizerService, PythonProgramTokenizer, SVMPredictionService,
      WinnowingPreprocessingService);
    this.registerService(CodeReplRulesService).withArgs(
      NormalizeWhitespacePipe, CodeNormalizerService);
    this.registerService(ConceptCardObjectFactory).withArgs(
      SubtitledHtmlObjectFactory, RecordedVoiceoversObjectFactory);
    this.registerService(ContextService).withArgs(
      UrlService, EntityContextObjectFactory);
    this.registerService(EditorFirstTimeEventsService).withArgs(
      SiteAnalyticsService);
    this.registerService(ExtensionTagAssemblerService).withArgs(
      HtmlEscaperService, CamelCaseToHyphensPipe);
    this.registerService(ExtractImageFilenamesFromStateService).withArgs(
      HtmlEscaperService);
    this.registerService(HttpClient).withArgs(HttpXhrBackend);
    this.registerService(ParamSpecsObjectFactory).withArgs(
      ParamSpecObjectFactory);
    this.registerService(PencilCodeEditorRulesService).withArgs(
      NormalizeWhitespacePipe, NormalizeWhitespacePunctuationAndCasePipe,
      CodeNormalizerService);
    this.registerService(PlayerPositionService).withArgs(
      ContextService, PlayerTranscriptService);
    this.registerService(SidebarStatusService).withArgs(
      WindowDimensionsService);
    this.registerService(StateContentService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateCustomizationArgsService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateHintsService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateInteractionIdService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StatePropertyService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateRecordedVoiceoversService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateSolicitAnswerDetailsService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateSolutionService).withArgs(
      AlertsService, UtilsService);
    this.registerService(StateWrittenTranslationsService).withArgs(
      AlertsService, UtilsService);
    this.registerService(SubtopicObjectFactory).withArgs(
      SkillSummaryObjectFactory);
    this.registerService(TextInputRulesService).withArgs(
      NormalizeWhitespacePipe);
    this.registerService(UrlInterpolationService).withArgs(
      AlertsService, UrlService, UtilsService);

    // Group 4: Services depending on groups 1,2 and 3.
    this.registerService(EmailDashboardDataService).withArgs(HttpClient);
    this.registerService(ExplorationHtmlFormatterService).withArgs(
      CamelCaseToHyphensPipe, ExtensionTagAssemblerService, HtmlEscaperService);
    this.registerService(StateCardObjectFactory).withArgs(
      AudioTranslationLanguageService);
    this.registerService(TopicObjectFactory).withArgs(
      SubtopicObjectFactory, StoryReferenceObjectFactory,
      SkillSummaryObjectFactory);

    // Group 5: Services depending on groups 1-4.
    this.registerService(SolutionObjectFactory).withArgs(
      SubtitledHtmlObjectFactory, ExplorationHtmlFormatterService);

    // Group 6: Services depending on groups 1-5.
    this.registerService(InteractionObjectFactory).withArgs(
      AnswerGroupObjectFactory, HintObjectFactory, SolutionObjectFactory,
      OutcomeObjectFactory);

    // Group 7: Services depending on groups 1-6.
    this.registerService(StateObjectFactory).withArgs(
      InteractionObjectFactory, ParamChangesObjectFactory,
      RecordedVoiceoversObjectFactory, SubtitledHtmlObjectFactory,
      WrittenTranslationsObjectFactory);

    // Group 8: Services depending on groups 1-7.
    this.registerService(StatesObjectFactory).withArgs(StateObjectFactory);

    // Group 9: Services depending on groups 1-8.
    this.registerService(ExplorationObjectFactory).withArgs(
      LoggerService, ParamChangesObjectFactory, ParamSpecsObjectFactory,
      StatesObjectFactory, UrlInterpolationService);
  }

  getUpgradedServices() {
    return this.servicesByName;
  }
}

angular.module('oppia').factory(
  'UpgradedServices',
  downgradeInjectable(UpgradedServices));
