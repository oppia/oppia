version: '3.8'

services:
  angular-build:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    container_name: oppia-angular-build
    volumes:
      - .:/app/oppia
      - node_modules:/app/oppia/node_modules
      - third_party:/app/oppia/third_party
      - frontend_proto_files:/app/oppia/extensions/classifiers/proto
      - yarn_cache:/root/.yarn-cache
    environment:
      - NODE_OPTIONS=--max_old_space_size=4096
      - prod_env=${prod_env:-false}
    entrypoint: bash /app/oppia/docker/angular-build.entrypoint.sh

  webpack-compiler:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    container_name: oppia-webpack-compiler
    volumes:
      - .:/app/oppia
      - node_modules:/app/oppia/node_modules
      - third_party:/app/oppia/third_party
      - frontend_proto_files:/app/oppia/extensions/classifiers/proto
    environment:
      - prod_env=${prod_env:-false}
      - source_maps=${source_maps:-false}
    entrypoint: bash /app/oppia/docker/webpack-compiler.entrypoint.sh

  dev-server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: oppia-dev-server
    ports:
      - "8181:8181"
      - "8000:8000"
    volumes:
      - .:/app/oppia
      - proto_files:/app/oppia/proto_files
      - frontend_proto_files:/app/oppia/extensions/classifiers/proto
      - third_party:/app/oppia/third_party
      - pip_cache:/root/.cache
      - node_modules:/app/oppia/node_modules
      - ../karma_coverage_reports:/app/karma_coverage_reports
    environment:
      - CLOUDSDK_CORE_DISABLE_PROMPTS=1
      - PIP_NO_DEPS=True
      - PIP_NO_INDEX=True
      - PIP_FIND_LINKS=/root/.cache
      - prod_env=${prod_env:-false}
      - maintenance_mode=${maintenance_mode:-false}
      - source_maps=${source_maps:-false}
      - disable_host_checking=${disable_host_checking:-false}
      - no_auto_restart=${no_auto_restart:-false}
      - DATASTORE_DATASET=dev-project-id
      - DATASTORE_EMULATOR_HOST=datastore:8089
      - DATASTORE_EMULATOR_HOST_PATH=datastore:8089/datastore
      - DATASTORE_HOST=http://datastore:8089
      - DATASTORE_PROJECT_ID=dev-project-id
      - DATASTORE_USE_PROJECT_ID_AS_APP_ID=true
      - GOOGLE_CLOUD_PROJECT=dev-project-id
      - REDIS_HOST=redis
    depends_on:
      - angular-build
      - webpack-compiler
      - datastore
      - elasticsearch
      - firebase
      - redis
    healthcheck:
      test: ["CMD", "bash", "docker/dev-server.healthcheck.sh"]
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 5m
    entrypoint: bash /app/oppia/docker/dev-server.entrypoint.sh

  datastore:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: oppia-cloud-datastore
    environment:
      - CLOUDSDK_CORE_DISABLE_PROMPTS=1
      - DATASTORE_HOST=datastore
      - save_datastore=${save_datastore:-false}
    volumes:
      - cloud_datastore_emulator_cache:/app/cloud_datastore_emulator_cache
      - ./docker/datastore.entrypoint.sh:/app/oppia/docker/datastore.entrypoint.sh
    healthcheck:
      test: curl -f http://localhost:8089/ || exit 1
      timeout: 10s
      interval: 2m
      retries: 5
      start_period: 5m
    entrypoint: bash /app/oppia/docker/datastore.entrypoint.sh

  firebase:
    image: node:16.13.0-alpine
    container_name: oppia-firebase-emulator
    ports:
      - "9099:9099"
      - "4000:4000"
    volumes:
      - ./.firebase_docker.json:/app/oppia/.firebase_docker.json
      - node_modules:/app/oppia/node_modules
      - firebase_emulator_cache:/app/firebase_emulator_cache
      - ./docker/firebase.entrypoint.sh:/app/oppia/docker/firebase.entrypoint.sh
    # TODO(#18638): The firebase service depends on the packages from node_modules that are being
    # installed in the Frontend Stage of Dockerfile. In future, we can remove the dependency
    # on Frontend Stage and install the required packages in this service itself.
    depends_on:
      - angular-build
    healthcheck:
      test: wget --spider http://localhost:4000/auth/ && echo 'y' | /app/oppia/node_modules/firebase-tools/lib/bin/firebase.js emulators:export /app/firebase_emulator_cache --project=dev-project-id || exit 1
      timeout: 20s
      interval: 20s
      retries: 5
    environment:
      - save_datastore=${save_datastore:-false}
    entrypoint: sh /app/oppia/docker/firebase.entrypoint.sh

  redis:
    image: redis:6.2.4
    container_name: oppia-redis
    environment:
      - PATH=/usr/local/bin/
    volumes:
      - redis_dump:/data/dump.db
      - ./redis_docker.conf:/app/oppia/redis_docker.conf
    healthcheck:
      test: redis-cli ping
      timeout: 5s
      interval: 30s
      retries: 5
    command: redis-server /app/oppia/redis_docker.conf

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: oppia-elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms100m -Xmx500m
      - ES_PATH_CONF=/usr/share/elasticsearch/config
      - discovery.type=single-node
    healthcheck:
      test: curl -f http://localhost:9200/ || exit 1
      timeout: 10s
      interval: 1m
      retries: 5
      start_period: 5m
    command: elasticsearch -q

volumes:
  node_modules:
  proto_files:
  frontend_proto_files:
  third_party:
  redis_dump:
  firebase_emulator_cache:
  cloud_datastore_emulator_cache:
  pip_cache:
  yarn_cache:
