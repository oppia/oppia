# To run this, install pylint and use the command:
#
#   pylint core --rcfile=.pylintrc -i y

[GENERAL]
init-hook='import sys; sys.path.append("../oppia_tools/google_appengine_1.9.67/google_appengine")'

[MASTER]

# Checks for correct docstring style
load-plugins=pylint.extensions.docstyle, pylint_quotes, scripts.linters.pylint_extensions

string-quote=single
triple-quote=double
docstring-quote=double

[BASIC]

# Regular expression which should only match correct function names
function-rgx=^[_a-z][a-z0-9_]*$

# Regular expression which should only match correct method names
method-rgx=^([_a-z][a-z0-9_]*|__[a-z0-9]+__)$

# Regular expression which should only match correct constant names
const-rgx=^(([A-Z_][A-Z0-9_]*)|(__.*__)|([a-z_]+_models)|([a-z_]+_services))$

# Good variable names which should always be accepted, separated by a comma
good-names=e,_,d,f,i,l,p,w,fn,fs,id,pc,sc,zf,setUp,tearDown,longMessage,maxDiff

# Regex for dummy variables (to prevent 'unused argument' errors)
dummy-variables-rgx=_|unused_*

# Regular expression which should match good variable names
variable-rgx=^(?:|_)[a-z][a-z0-9]*(_[a-z0-9]+)*$

# Regular expression matching correct attribute names
attr-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct argument names
argument-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct module names
module-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=test_[a-z_]*|[A-Za-z]*Tests|Mock[A-Za-z]*|mock_[a-z_]*|setUp|tearDown|__.*__

[DESIGN]

# Minimum number of public methods for a class (see R0903).
min-public-methods=0

# List of builtin function names that should not be used, separated by a comma
bad-functions=apply,input

[FORMAT]

max-line-length=80
ignore-long-lines=^.*#\stype:.*$|^\s*(# )?<?https?://\S+>?$

indent-string='    '

allowed-comment-prefixes=int,str,float,bool,v
forbidden-imports=
    core.controllers:core.platform|core.storage,
    core.domain:core.controllers,
    core.storage:core.domain

disallowed-functions-and-replacements-str=
  assertEquals=>self.assertEqual,
  basestring=>python_utils.BASESTRING,
  contextlib2.ExitStack=>python_utils.ExitStack,
  contextlib2.nullcontext=>python_utils.nullcontext,
  contextlib2.redirect_stdout=>python_utils.redirect_stdout,
  input=>python_utils.INPUT,
  iteritems=>items,
  iterkeys=>keys,
  itervalues=>values,
  map=>python_utils.MAP,
  next=>python_utils.NEXT,
  now=>datetime.datetime.utcnow,
  open=>python_utils.open_file,
  print=>python_utils.PRINT,
  range=>python_utils.RANGE,
  round=>python_utils.ROUND,
  str=>python_utils.convert_to_bytes or python_utils.UNICODE,
  StringIO=>python_utils.string_io,
  urllib.unquote=>python_utils.urllib_unquote,
  urllib.urlparse.unquote=>python_utils.urllib_unquote,
  urlparse.parse_qs=>python_utils.parse_query_string,
  urlparse.urljoin=>python_utils.url_join,
  urlparse.urlparse=>python_utils.url_parse,
  urlparse.urlsplit=>python_utils.url_split,
  urlparse.urlunsplit=>python_utils.url_unsplit,
  zip=>python_utils.ZIP

disallowed-functions-and-replacements-regex=
  \.put_async\(=>put,
  \.put_multi_async\(=>put_multi

[SIMILARITIES]

ignore-imports=yes

[MESSAGES CONTROL]

disable=consider-using-ternary,locally-disabled,locally-enabled,logging-not-lazy,abstract-method,arguments-differ,broad-except,duplicate-code,fixme,inconsistent-return-statements,len-as-condition,missing-raises-doc,multiple-constructor-doc,no-else-return,no-member,no-self-use,not-context-manager,redefined-variable-type,redundant-returns-doc,too-many-arguments,too-many-boolean-expressions,too-many-branches,too-many-instance-attributes,too-many-lines,too-many-locals,too-many-public-methods,too-many-nested-blocks,too-many-statements,wrong-import-order

[REPORTS]

# Hide statistics, external dependencies and overall rating.
reports=no
